Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AMPERSAND
    AND
    BEGIN_KW
    BREAK
    CLASS
    CLASS_VAR
    DEFINEDQ
    DO
    ENSURE
    FALSE
    FOR
    GLOBAL_VAR
    IN
    INSTANCE_VAR
    LOGICAL_NOT
    MATCH_REGEX
    MODULE
    NEXT
    NIL
    NOT
    NOT_MATCH_REGEX
    OR
    RANGE_EXCLUSIVE
    RANGE_INCLUSIVE
    REDO
    RESCUE
    RETRY
    RETURN
    SEMICOLON
    SUPER
    TERNARY_COLON
    TERNARY_Q
    THEN
    TRUE
    UNDEF
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> print
Rule 5     statement -> input
Rule 6     statement -> assignment
Rule 7     statement -> expression
Rule 8     statement -> if_statement
Rule 9     statement -> function_def
Rule 10    statement -> while_statement
Rule 11    statement -> unless_statement
Rule 12    statement -> case_statement
Rule 13    print -> PUTS expression
Rule 14    input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER
Rule 15    assignment -> IDENTIFIER ASSIGN expression
Rule 16    assignment -> IDENTIFIER PLUS_ASSIGN expression
Rule 17    assignment -> IDENTIFIER MINUS_ASSIGN expression
Rule 18    assignment -> IDENTIFIER TIMES_ASSIGN expression
Rule 19    assignment -> IDENTIFIER DIVIDE_ASSIGN expression
Rule 20    assignment -> IDENTIFIER OR_ASSIGN expression
Rule 21    assignment -> IDENTIFIER AND_ASSIGN expression
Rule 22    expression -> LPAREN expression RPAREN
Rule 23    expression -> MINUS expression
Rule 24    expression -> expression PLUS expression
Rule 25    expression -> expression MINUS expression
Rule 26    expression -> expression TIMES expression
Rule 27    expression -> expression DIVIDE expression
Rule 28    expression -> expression MODULO expression
Rule 29    expression -> expression POWER expression
Rule 30    expression -> INTEGER
Rule 31    expression -> FLOAT
Rule 32    expression -> STRING
Rule 33    expression -> SYMBOL_COLON
Rule 34    expression -> IDENTIFIER
Rule 35    expression -> expression LOGICAL_AND expression
Rule 36    expression -> expression LOGICAL_OR expression
Rule 37    expression -> expression EQUAL_EQUAL expression
Rule 38    expression -> expression NOT_EQUAL expression
Rule 39    expression -> expression GREATER_THAN expression
Rule 40    expression -> expression LESS_THAN expression
Rule 41    expression -> expression GREATER_EQUAL expression
Rule 42    expression -> expression LESS_EQUAL expression
Rule 43    if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW
Rule 44    unless_statement -> UNLESS expression statement_list else_block_opt END_KW
Rule 45    case_statement -> CASE expression when_blocks else_block_opt END_KW
Rule 46    when_blocks -> when_blocks when_block
Rule 47    when_blocks -> when_block
Rule 48    when_block -> WHEN expression statement_list
Rule 49    elsif_blocks_opt -> elsif_blocks
Rule 50    elsif_blocks_opt -> empty
Rule 51    elsif_blocks -> ELSIF expression statement_list elsif_blocks
Rule 52    elsif_blocks -> ELSIF expression statement_list
Rule 53    else_block_opt -> ELSE statement_list
Rule 54    else_block_opt -> empty
Rule 55    empty -> <empty>
Rule 56    function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
Rule 57    function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW
Rule 58    function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW
Rule 59    function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW
Rule 60    statement -> YIELD
Rule 61    param -> IDENTIFIER
Rule 62    param -> IDENTIFIER ASSIGN expression
Rule 63    param_list_opt -> param_list
Rule 64    param_list_opt -> empty
Rule 65    param_list -> param
Rule 66    param_list -> param_list COMMA param
Rule 67    while_statement -> WHILE expression statement_list END_KW
Rule 68    expression -> LBRACKET elements RBRACKET
Rule 69    elements -> elements COMMA expression
Rule 70    elements -> expression
Rule 71    elements -> empty
Rule 72    expression -> LBRACE hash_content RBRACE
Rule 73    hash_content -> hash_pair_list
Rule 74    hash_content -> <empty>
Rule 75    hash_pair_list -> hash_pair
Rule 76    hash_pair_list -> hash_pair_list COMMA hash_pair
Rule 77    hash_pair -> SYMBOL_COLON ASSIGN expression

Terminals, with rules where they appear

ALIAS                : 
AMPERSAND            : 
AND                  : 
AND_ASSIGN           : 21
ASSIGN               : 14 15 62 77
BEGIN_KW             : 
BREAK                : 
CASE                 : 45
CLASS                : 
CLASS_VAR            : 
COMMA                : 66 69 76
CONSTANT             : 59
DEF                  : 56 57 58 59
DEFINEDQ             : 
DIVIDE               : 27
DIVIDE_ASSIGN        : 19
DO                   : 
DOT                  : 14 58 59
ELSE                 : 53
ELSIF                : 51 52
END_KW               : 43 44 45 56 57 58 59 67
ENSURE               : 
EQUAL_EQUAL          : 37
FALSE                : 
FLOAT                : 31
FOR                  : 
GETS                 : 14
GLOBAL_VAR           : 
GREATER_EQUAL        : 41
GREATER_THAN         : 39
IDENTIFIER           : 14 14 15 16 17 18 19 20 21 34 56 57 58 59 61 62
IF                   : 43
IN                   : 
INSTANCE_VAR         : 
INTEGER              : 30
LBRACE               : 72
LBRACKET             : 68
LESS_EQUAL           : 42
LESS_THAN            : 40
LOGICAL_AND          : 35
LOGICAL_NOT          : 
LOGICAL_OR           : 36
LPAREN               : 22 56
MATCH_REGEX          : 
MINUS                : 23 25
MINUS_ASSIGN         : 17
MODULE               : 
MODULO               : 28
NEXT                 : 
NIL                  : 
NOT                  : 
NOT_EQUAL            : 38
NOT_MATCH_REGEX      : 
OR                   : 
OR_ASSIGN            : 20
PLUS                 : 24
PLUS_ASSIGN          : 16
POWER                : 29
PUTS                 : 13
RANGE_EXCLUSIVE      : 
RANGE_INCLUSIVE      : 
RBRACE               : 72
RBRACKET             : 68
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 22 56
SELF                 : 58
SEMICOLON            : 
STRING               : 32
SUPER                : 
SYMBOL_COLON         : 33 77
TERNARY_COLON        : 
TERNARY_Q            : 
THEN                 : 
TIMES                : 26
TIMES_ASSIGN         : 18
TRUE                 : 
UNDEF                : 
UNLESS               : 44
UNTIL                : 
WHEN                 : 48
WHILE                : 67
YIELD                : 60
error                : 

Nonterminals, with rules where they appear

assignment           : 6
case_statement       : 12
elements             : 68 69
else_block_opt       : 43 44 45
elsif_blocks         : 49 51
elsif_blocks_opt     : 43
empty                : 50 54 64 71
expression           : 7 13 15 16 17 18 19 20 21 22 23 24 24 25 25 26 26 27 27 28 28 29 29 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44 45 48 51 52 62 67 69 70 77
function_def         : 9
hash_content         : 72
hash_pair            : 75 76
hash_pair_list       : 73 76
if_statement         : 8
input                : 5
param                : 65 66
param_list           : 63 66
param_list_opt       : 56 57
print                : 4
program              : 0
statement            : 2 3
statement_list       : 1 2 43 44 48 51 52 53 56 57 58 59 67
unless_statement     : 11
when_block           : 46 47
when_blocks          : 45 46
while_statement      : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    $end            reduce using rule 1 (program -> statement_list .)
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 3

    (3) statement_list -> statement .

    YIELD           reduce using rule 3 (statement_list -> statement .)
    PUTS            reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    MINUS           reduce using rule 3 (statement_list -> statement .)
    INTEGER         reduce using rule 3 (statement_list -> statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    SYMBOL_COLON    reduce using rule 3 (statement_list -> statement .)
    LBRACKET        reduce using rule 3 (statement_list -> statement .)
    LBRACE          reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    DEF             reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    UNLESS          reduce using rule 3 (statement_list -> statement .)
    CASE            reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    ELSIF           reduce using rule 3 (statement_list -> statement .)
    ELSE            reduce using rule 3 (statement_list -> statement .)
    END_KW          reduce using rule 3 (statement_list -> statement .)
    WHEN            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> print .

    YIELD           reduce using rule 4 (statement -> print .)
    PUTS            reduce using rule 4 (statement -> print .)
    IDENTIFIER      reduce using rule 4 (statement -> print .)
    LPAREN          reduce using rule 4 (statement -> print .)
    MINUS           reduce using rule 4 (statement -> print .)
    INTEGER         reduce using rule 4 (statement -> print .)
    FLOAT           reduce using rule 4 (statement -> print .)
    STRING          reduce using rule 4 (statement -> print .)
    SYMBOL_COLON    reduce using rule 4 (statement -> print .)
    LBRACKET        reduce using rule 4 (statement -> print .)
    LBRACE          reduce using rule 4 (statement -> print .)
    IF              reduce using rule 4 (statement -> print .)
    DEF             reduce using rule 4 (statement -> print .)
    WHILE           reduce using rule 4 (statement -> print .)
    UNLESS          reduce using rule 4 (statement -> print .)
    CASE            reduce using rule 4 (statement -> print .)
    $end            reduce using rule 4 (statement -> print .)
    ELSIF           reduce using rule 4 (statement -> print .)
    ELSE            reduce using rule 4 (statement -> print .)
    END_KW          reduce using rule 4 (statement -> print .)
    WHEN            reduce using rule 4 (statement -> print .)


state 5

    (5) statement -> input .

    YIELD           reduce using rule 5 (statement -> input .)
    PUTS            reduce using rule 5 (statement -> input .)
    IDENTIFIER      reduce using rule 5 (statement -> input .)
    LPAREN          reduce using rule 5 (statement -> input .)
    MINUS           reduce using rule 5 (statement -> input .)
    INTEGER         reduce using rule 5 (statement -> input .)
    FLOAT           reduce using rule 5 (statement -> input .)
    STRING          reduce using rule 5 (statement -> input .)
    SYMBOL_COLON    reduce using rule 5 (statement -> input .)
    LBRACKET        reduce using rule 5 (statement -> input .)
    LBRACE          reduce using rule 5 (statement -> input .)
    IF              reduce using rule 5 (statement -> input .)
    DEF             reduce using rule 5 (statement -> input .)
    WHILE           reduce using rule 5 (statement -> input .)
    UNLESS          reduce using rule 5 (statement -> input .)
    CASE            reduce using rule 5 (statement -> input .)
    $end            reduce using rule 5 (statement -> input .)
    ELSIF           reduce using rule 5 (statement -> input .)
    ELSE            reduce using rule 5 (statement -> input .)
    END_KW          reduce using rule 5 (statement -> input .)
    WHEN            reduce using rule 5 (statement -> input .)


state 6

    (6) statement -> assignment .

    YIELD           reduce using rule 6 (statement -> assignment .)
    PUTS            reduce using rule 6 (statement -> assignment .)
    IDENTIFIER      reduce using rule 6 (statement -> assignment .)
    LPAREN          reduce using rule 6 (statement -> assignment .)
    MINUS           reduce using rule 6 (statement -> assignment .)
    INTEGER         reduce using rule 6 (statement -> assignment .)
    FLOAT           reduce using rule 6 (statement -> assignment .)
    STRING          reduce using rule 6 (statement -> assignment .)
    SYMBOL_COLON    reduce using rule 6 (statement -> assignment .)
    LBRACKET        reduce using rule 6 (statement -> assignment .)
    LBRACE          reduce using rule 6 (statement -> assignment .)
    IF              reduce using rule 6 (statement -> assignment .)
    DEF             reduce using rule 6 (statement -> assignment .)
    WHILE           reduce using rule 6 (statement -> assignment .)
    UNLESS          reduce using rule 6 (statement -> assignment .)
    CASE            reduce using rule 6 (statement -> assignment .)
    $end            reduce using rule 6 (statement -> assignment .)
    ELSIF           reduce using rule 6 (statement -> assignment .)
    ELSE            reduce using rule 6 (statement -> assignment .)
    END_KW          reduce using rule 6 (statement -> assignment .)
    WHEN            reduce using rule 6 (statement -> assignment .)


state 7

    (7) statement -> expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 7 (statement -> expression .)
    PUTS            reduce using rule 7 (statement -> expression .)
    IDENTIFIER      reduce using rule 7 (statement -> expression .)
    LPAREN          reduce using rule 7 (statement -> expression .)
    INTEGER         reduce using rule 7 (statement -> expression .)
    FLOAT           reduce using rule 7 (statement -> expression .)
    STRING          reduce using rule 7 (statement -> expression .)
    SYMBOL_COLON    reduce using rule 7 (statement -> expression .)
    LBRACKET        reduce using rule 7 (statement -> expression .)
    LBRACE          reduce using rule 7 (statement -> expression .)
    IF              reduce using rule 7 (statement -> expression .)
    DEF             reduce using rule 7 (statement -> expression .)
    WHILE           reduce using rule 7 (statement -> expression .)
    UNLESS          reduce using rule 7 (statement -> expression .)
    CASE            reduce using rule 7 (statement -> expression .)
    $end            reduce using rule 7 (statement -> expression .)
    ELSIF           reduce using rule 7 (statement -> expression .)
    ELSE            reduce using rule 7 (statement -> expression .)
    END_KW          reduce using rule 7 (statement -> expression .)
    WHEN            reduce using rule 7 (statement -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 7 (statement -> expression .) ]


state 8

    (8) statement -> if_statement .

    YIELD           reduce using rule 8 (statement -> if_statement .)
    PUTS            reduce using rule 8 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> if_statement .)
    LPAREN          reduce using rule 8 (statement -> if_statement .)
    MINUS           reduce using rule 8 (statement -> if_statement .)
    INTEGER         reduce using rule 8 (statement -> if_statement .)
    FLOAT           reduce using rule 8 (statement -> if_statement .)
    STRING          reduce using rule 8 (statement -> if_statement .)
    SYMBOL_COLON    reduce using rule 8 (statement -> if_statement .)
    LBRACKET        reduce using rule 8 (statement -> if_statement .)
    LBRACE          reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    DEF             reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    UNLESS          reduce using rule 8 (statement -> if_statement .)
    CASE            reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    ELSIF           reduce using rule 8 (statement -> if_statement .)
    ELSE            reduce using rule 8 (statement -> if_statement .)
    END_KW          reduce using rule 8 (statement -> if_statement .)
    WHEN            reduce using rule 8 (statement -> if_statement .)


state 9

    (9) statement -> function_def .

    YIELD           reduce using rule 9 (statement -> function_def .)
    PUTS            reduce using rule 9 (statement -> function_def .)
    IDENTIFIER      reduce using rule 9 (statement -> function_def .)
    LPAREN          reduce using rule 9 (statement -> function_def .)
    MINUS           reduce using rule 9 (statement -> function_def .)
    INTEGER         reduce using rule 9 (statement -> function_def .)
    FLOAT           reduce using rule 9 (statement -> function_def .)
    STRING          reduce using rule 9 (statement -> function_def .)
    SYMBOL_COLON    reduce using rule 9 (statement -> function_def .)
    LBRACKET        reduce using rule 9 (statement -> function_def .)
    LBRACE          reduce using rule 9 (statement -> function_def .)
    IF              reduce using rule 9 (statement -> function_def .)
    DEF             reduce using rule 9 (statement -> function_def .)
    WHILE           reduce using rule 9 (statement -> function_def .)
    UNLESS          reduce using rule 9 (statement -> function_def .)
    CASE            reduce using rule 9 (statement -> function_def .)
    $end            reduce using rule 9 (statement -> function_def .)
    ELSIF           reduce using rule 9 (statement -> function_def .)
    ELSE            reduce using rule 9 (statement -> function_def .)
    END_KW          reduce using rule 9 (statement -> function_def .)
    WHEN            reduce using rule 9 (statement -> function_def .)


state 10

    (10) statement -> while_statement .

    YIELD           reduce using rule 10 (statement -> while_statement .)
    PUTS            reduce using rule 10 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> while_statement .)
    LPAREN          reduce using rule 10 (statement -> while_statement .)
    MINUS           reduce using rule 10 (statement -> while_statement .)
    INTEGER         reduce using rule 10 (statement -> while_statement .)
    FLOAT           reduce using rule 10 (statement -> while_statement .)
    STRING          reduce using rule 10 (statement -> while_statement .)
    SYMBOL_COLON    reduce using rule 10 (statement -> while_statement .)
    LBRACKET        reduce using rule 10 (statement -> while_statement .)
    LBRACE          reduce using rule 10 (statement -> while_statement .)
    IF              reduce using rule 10 (statement -> while_statement .)
    DEF             reduce using rule 10 (statement -> while_statement .)
    WHILE           reduce using rule 10 (statement -> while_statement .)
    UNLESS          reduce using rule 10 (statement -> while_statement .)
    CASE            reduce using rule 10 (statement -> while_statement .)
    $end            reduce using rule 10 (statement -> while_statement .)
    ELSIF           reduce using rule 10 (statement -> while_statement .)
    ELSE            reduce using rule 10 (statement -> while_statement .)
    END_KW          reduce using rule 10 (statement -> while_statement .)
    WHEN            reduce using rule 10 (statement -> while_statement .)


state 11

    (11) statement -> unless_statement .

    YIELD           reduce using rule 11 (statement -> unless_statement .)
    PUTS            reduce using rule 11 (statement -> unless_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> unless_statement .)
    LPAREN          reduce using rule 11 (statement -> unless_statement .)
    MINUS           reduce using rule 11 (statement -> unless_statement .)
    INTEGER         reduce using rule 11 (statement -> unless_statement .)
    FLOAT           reduce using rule 11 (statement -> unless_statement .)
    STRING          reduce using rule 11 (statement -> unless_statement .)
    SYMBOL_COLON    reduce using rule 11 (statement -> unless_statement .)
    LBRACKET        reduce using rule 11 (statement -> unless_statement .)
    LBRACE          reduce using rule 11 (statement -> unless_statement .)
    IF              reduce using rule 11 (statement -> unless_statement .)
    DEF             reduce using rule 11 (statement -> unless_statement .)
    WHILE           reduce using rule 11 (statement -> unless_statement .)
    UNLESS          reduce using rule 11 (statement -> unless_statement .)
    CASE            reduce using rule 11 (statement -> unless_statement .)
    $end            reduce using rule 11 (statement -> unless_statement .)
    ELSIF           reduce using rule 11 (statement -> unless_statement .)
    ELSE            reduce using rule 11 (statement -> unless_statement .)
    END_KW          reduce using rule 11 (statement -> unless_statement .)
    WHEN            reduce using rule 11 (statement -> unless_statement .)


state 12

    (12) statement -> case_statement .

    YIELD           reduce using rule 12 (statement -> case_statement .)
    PUTS            reduce using rule 12 (statement -> case_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> case_statement .)
    LPAREN          reduce using rule 12 (statement -> case_statement .)
    MINUS           reduce using rule 12 (statement -> case_statement .)
    INTEGER         reduce using rule 12 (statement -> case_statement .)
    FLOAT           reduce using rule 12 (statement -> case_statement .)
    STRING          reduce using rule 12 (statement -> case_statement .)
    SYMBOL_COLON    reduce using rule 12 (statement -> case_statement .)
    LBRACKET        reduce using rule 12 (statement -> case_statement .)
    LBRACE          reduce using rule 12 (statement -> case_statement .)
    IF              reduce using rule 12 (statement -> case_statement .)
    DEF             reduce using rule 12 (statement -> case_statement .)
    WHILE           reduce using rule 12 (statement -> case_statement .)
    UNLESS          reduce using rule 12 (statement -> case_statement .)
    CASE            reduce using rule 12 (statement -> case_statement .)
    $end            reduce using rule 12 (statement -> case_statement .)
    ELSIF           reduce using rule 12 (statement -> case_statement .)
    ELSE            reduce using rule 12 (statement -> case_statement .)
    END_KW          reduce using rule 12 (statement -> case_statement .)
    WHEN            reduce using rule 12 (statement -> case_statement .)


state 13

    (60) statement -> YIELD .

    YIELD           reduce using rule 60 (statement -> YIELD .)
    PUTS            reduce using rule 60 (statement -> YIELD .)
    IDENTIFIER      reduce using rule 60 (statement -> YIELD .)
    LPAREN          reduce using rule 60 (statement -> YIELD .)
    MINUS           reduce using rule 60 (statement -> YIELD .)
    INTEGER         reduce using rule 60 (statement -> YIELD .)
    FLOAT           reduce using rule 60 (statement -> YIELD .)
    STRING          reduce using rule 60 (statement -> YIELD .)
    SYMBOL_COLON    reduce using rule 60 (statement -> YIELD .)
    LBRACKET        reduce using rule 60 (statement -> YIELD .)
    LBRACE          reduce using rule 60 (statement -> YIELD .)
    IF              reduce using rule 60 (statement -> YIELD .)
    DEF             reduce using rule 60 (statement -> YIELD .)
    WHILE           reduce using rule 60 (statement -> YIELD .)
    UNLESS          reduce using rule 60 (statement -> YIELD .)
    CASE            reduce using rule 60 (statement -> YIELD .)
    $end            reduce using rule 60 (statement -> YIELD .)
    ELSIF           reduce using rule 60 (statement -> YIELD .)
    ELSE            reduce using rule 60 (statement -> YIELD .)
    END_KW          reduce using rule 60 (statement -> YIELD .)
    WHEN            reduce using rule 60 (statement -> YIELD .)


state 14

    (13) print -> PUTS . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 44

state 15

    (14) input -> IDENTIFIER . ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> IDENTIFIER . ASSIGN expression
    (16) assignment -> IDENTIFIER . PLUS_ASSIGN expression
    (17) assignment -> IDENTIFIER . MINUS_ASSIGN expression
    (18) assignment -> IDENTIFIER . TIMES_ASSIGN expression
    (19) assignment -> IDENTIFIER . DIVIDE_ASSIGN expression
    (20) assignment -> IDENTIFIER . OR_ASSIGN expression
    (21) assignment -> IDENTIFIER . AND_ASSIGN expression
    (34) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 46
    PLUS_ASSIGN     shift and go to state 47
    MINUS_ASSIGN    shift and go to state 48
    TIMES_ASSIGN    shift and go to state 49
    DIVIDE_ASSIGN   shift and go to state 50
    OR_ASSIGN       shift and go to state 51
    AND_ASSIGN      shift and go to state 52
    PLUS            reduce using rule 34 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 34 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 34 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 34 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 34 (expression -> IDENTIFIER .)
    POWER           reduce using rule 34 (expression -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 34 (expression -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 34 (expression -> IDENTIFIER .)
    EQUAL_EQUAL     reduce using rule 34 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 34 (expression -> IDENTIFIER .)
    YIELD           reduce using rule 34 (expression -> IDENTIFIER .)
    PUTS            reduce using rule 34 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 34 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 34 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 34 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 34 (expression -> IDENTIFIER .)
    STRING          reduce using rule 34 (expression -> IDENTIFIER .)
    SYMBOL_COLON    reduce using rule 34 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 34 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 34 (expression -> IDENTIFIER .)
    IF              reduce using rule 34 (expression -> IDENTIFIER .)
    DEF             reduce using rule 34 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 34 (expression -> IDENTIFIER .)
    UNLESS          reduce using rule 34 (expression -> IDENTIFIER .)
    CASE            reduce using rule 34 (expression -> IDENTIFIER .)
    $end            reduce using rule 34 (expression -> IDENTIFIER .)
    ELSIF           reduce using rule 34 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 34 (expression -> IDENTIFIER .)
    END_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    WHEN            reduce using rule 34 (expression -> IDENTIFIER .)


state 16

    (22) expression -> LPAREN . expression RPAREN
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 53

state 17

    (23) expression -> MINUS . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 54

state 18

    (30) expression -> INTEGER .

    PLUS            reduce using rule 30 (expression -> INTEGER .)
    MINUS           reduce using rule 30 (expression -> INTEGER .)
    TIMES           reduce using rule 30 (expression -> INTEGER .)
    DIVIDE          reduce using rule 30 (expression -> INTEGER .)
    MODULO          reduce using rule 30 (expression -> INTEGER .)
    POWER           reduce using rule 30 (expression -> INTEGER .)
    LOGICAL_AND     reduce using rule 30 (expression -> INTEGER .)
    LOGICAL_OR      reduce using rule 30 (expression -> INTEGER .)
    EQUAL_EQUAL     reduce using rule 30 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 30 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 30 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 30 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 30 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 30 (expression -> INTEGER .)
    YIELD           reduce using rule 30 (expression -> INTEGER .)
    PUTS            reduce using rule 30 (expression -> INTEGER .)
    IDENTIFIER      reduce using rule 30 (expression -> INTEGER .)
    LPAREN          reduce using rule 30 (expression -> INTEGER .)
    INTEGER         reduce using rule 30 (expression -> INTEGER .)
    FLOAT           reduce using rule 30 (expression -> INTEGER .)
    STRING          reduce using rule 30 (expression -> INTEGER .)
    SYMBOL_COLON    reduce using rule 30 (expression -> INTEGER .)
    LBRACKET        reduce using rule 30 (expression -> INTEGER .)
    LBRACE          reduce using rule 30 (expression -> INTEGER .)
    IF              reduce using rule 30 (expression -> INTEGER .)
    DEF             reduce using rule 30 (expression -> INTEGER .)
    WHILE           reduce using rule 30 (expression -> INTEGER .)
    UNLESS          reduce using rule 30 (expression -> INTEGER .)
    CASE            reduce using rule 30 (expression -> INTEGER .)
    $end            reduce using rule 30 (expression -> INTEGER .)
    ELSIF           reduce using rule 30 (expression -> INTEGER .)
    ELSE            reduce using rule 30 (expression -> INTEGER .)
    END_KW          reduce using rule 30 (expression -> INTEGER .)
    WHEN            reduce using rule 30 (expression -> INTEGER .)
    RPAREN          reduce using rule 30 (expression -> INTEGER .)
    RBRACKET        reduce using rule 30 (expression -> INTEGER .)
    COMMA           reduce using rule 30 (expression -> INTEGER .)
    RBRACE          reduce using rule 30 (expression -> INTEGER .)


state 19

    (31) expression -> FLOAT .

    PLUS            reduce using rule 31 (expression -> FLOAT .)
    MINUS           reduce using rule 31 (expression -> FLOAT .)
    TIMES           reduce using rule 31 (expression -> FLOAT .)
    DIVIDE          reduce using rule 31 (expression -> FLOAT .)
    MODULO          reduce using rule 31 (expression -> FLOAT .)
    POWER           reduce using rule 31 (expression -> FLOAT .)
    LOGICAL_AND     reduce using rule 31 (expression -> FLOAT .)
    LOGICAL_OR      reduce using rule 31 (expression -> FLOAT .)
    EQUAL_EQUAL     reduce using rule 31 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 31 (expression -> FLOAT .)
    GREATER_THAN    reduce using rule 31 (expression -> FLOAT .)
    LESS_THAN       reduce using rule 31 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 31 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 31 (expression -> FLOAT .)
    YIELD           reduce using rule 31 (expression -> FLOAT .)
    PUTS            reduce using rule 31 (expression -> FLOAT .)
    IDENTIFIER      reduce using rule 31 (expression -> FLOAT .)
    LPAREN          reduce using rule 31 (expression -> FLOAT .)
    INTEGER         reduce using rule 31 (expression -> FLOAT .)
    FLOAT           reduce using rule 31 (expression -> FLOAT .)
    STRING          reduce using rule 31 (expression -> FLOAT .)
    SYMBOL_COLON    reduce using rule 31 (expression -> FLOAT .)
    LBRACKET        reduce using rule 31 (expression -> FLOAT .)
    LBRACE          reduce using rule 31 (expression -> FLOAT .)
    IF              reduce using rule 31 (expression -> FLOAT .)
    DEF             reduce using rule 31 (expression -> FLOAT .)
    WHILE           reduce using rule 31 (expression -> FLOAT .)
    UNLESS          reduce using rule 31 (expression -> FLOAT .)
    CASE            reduce using rule 31 (expression -> FLOAT .)
    $end            reduce using rule 31 (expression -> FLOAT .)
    ELSIF           reduce using rule 31 (expression -> FLOAT .)
    ELSE            reduce using rule 31 (expression -> FLOAT .)
    END_KW          reduce using rule 31 (expression -> FLOAT .)
    WHEN            reduce using rule 31 (expression -> FLOAT .)
    RPAREN          reduce using rule 31 (expression -> FLOAT .)
    RBRACKET        reduce using rule 31 (expression -> FLOAT .)
    COMMA           reduce using rule 31 (expression -> FLOAT .)
    RBRACE          reduce using rule 31 (expression -> FLOAT .)


state 20

    (32) expression -> STRING .

    PLUS            reduce using rule 32 (expression -> STRING .)
    MINUS           reduce using rule 32 (expression -> STRING .)
    TIMES           reduce using rule 32 (expression -> STRING .)
    DIVIDE          reduce using rule 32 (expression -> STRING .)
    MODULO          reduce using rule 32 (expression -> STRING .)
    POWER           reduce using rule 32 (expression -> STRING .)
    LOGICAL_AND     reduce using rule 32 (expression -> STRING .)
    LOGICAL_OR      reduce using rule 32 (expression -> STRING .)
    EQUAL_EQUAL     reduce using rule 32 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 32 (expression -> STRING .)
    GREATER_THAN    reduce using rule 32 (expression -> STRING .)
    LESS_THAN       reduce using rule 32 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 32 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 32 (expression -> STRING .)
    YIELD           reduce using rule 32 (expression -> STRING .)
    PUTS            reduce using rule 32 (expression -> STRING .)
    IDENTIFIER      reduce using rule 32 (expression -> STRING .)
    LPAREN          reduce using rule 32 (expression -> STRING .)
    INTEGER         reduce using rule 32 (expression -> STRING .)
    FLOAT           reduce using rule 32 (expression -> STRING .)
    STRING          reduce using rule 32 (expression -> STRING .)
    SYMBOL_COLON    reduce using rule 32 (expression -> STRING .)
    LBRACKET        reduce using rule 32 (expression -> STRING .)
    LBRACE          reduce using rule 32 (expression -> STRING .)
    IF              reduce using rule 32 (expression -> STRING .)
    DEF             reduce using rule 32 (expression -> STRING .)
    WHILE           reduce using rule 32 (expression -> STRING .)
    UNLESS          reduce using rule 32 (expression -> STRING .)
    CASE            reduce using rule 32 (expression -> STRING .)
    $end            reduce using rule 32 (expression -> STRING .)
    ELSIF           reduce using rule 32 (expression -> STRING .)
    ELSE            reduce using rule 32 (expression -> STRING .)
    END_KW          reduce using rule 32 (expression -> STRING .)
    WHEN            reduce using rule 32 (expression -> STRING .)
    RPAREN          reduce using rule 32 (expression -> STRING .)
    RBRACKET        reduce using rule 32 (expression -> STRING .)
    COMMA           reduce using rule 32 (expression -> STRING .)
    RBRACE          reduce using rule 32 (expression -> STRING .)


state 21

    (33) expression -> SYMBOL_COLON .

    PLUS            reduce using rule 33 (expression -> SYMBOL_COLON .)
    MINUS           reduce using rule 33 (expression -> SYMBOL_COLON .)
    TIMES           reduce using rule 33 (expression -> SYMBOL_COLON .)
    DIVIDE          reduce using rule 33 (expression -> SYMBOL_COLON .)
    MODULO          reduce using rule 33 (expression -> SYMBOL_COLON .)
    POWER           reduce using rule 33 (expression -> SYMBOL_COLON .)
    LOGICAL_AND     reduce using rule 33 (expression -> SYMBOL_COLON .)
    LOGICAL_OR      reduce using rule 33 (expression -> SYMBOL_COLON .)
    EQUAL_EQUAL     reduce using rule 33 (expression -> SYMBOL_COLON .)
    NOT_EQUAL       reduce using rule 33 (expression -> SYMBOL_COLON .)
    GREATER_THAN    reduce using rule 33 (expression -> SYMBOL_COLON .)
    LESS_THAN       reduce using rule 33 (expression -> SYMBOL_COLON .)
    GREATER_EQUAL   reduce using rule 33 (expression -> SYMBOL_COLON .)
    LESS_EQUAL      reduce using rule 33 (expression -> SYMBOL_COLON .)
    YIELD           reduce using rule 33 (expression -> SYMBOL_COLON .)
    PUTS            reduce using rule 33 (expression -> SYMBOL_COLON .)
    IDENTIFIER      reduce using rule 33 (expression -> SYMBOL_COLON .)
    LPAREN          reduce using rule 33 (expression -> SYMBOL_COLON .)
    INTEGER         reduce using rule 33 (expression -> SYMBOL_COLON .)
    FLOAT           reduce using rule 33 (expression -> SYMBOL_COLON .)
    STRING          reduce using rule 33 (expression -> SYMBOL_COLON .)
    SYMBOL_COLON    reduce using rule 33 (expression -> SYMBOL_COLON .)
    LBRACKET        reduce using rule 33 (expression -> SYMBOL_COLON .)
    LBRACE          reduce using rule 33 (expression -> SYMBOL_COLON .)
    IF              reduce using rule 33 (expression -> SYMBOL_COLON .)
    DEF             reduce using rule 33 (expression -> SYMBOL_COLON .)
    WHILE           reduce using rule 33 (expression -> SYMBOL_COLON .)
    UNLESS          reduce using rule 33 (expression -> SYMBOL_COLON .)
    CASE            reduce using rule 33 (expression -> SYMBOL_COLON .)
    $end            reduce using rule 33 (expression -> SYMBOL_COLON .)
    ELSIF           reduce using rule 33 (expression -> SYMBOL_COLON .)
    ELSE            reduce using rule 33 (expression -> SYMBOL_COLON .)
    END_KW          reduce using rule 33 (expression -> SYMBOL_COLON .)
    WHEN            reduce using rule 33 (expression -> SYMBOL_COLON .)
    RPAREN          reduce using rule 33 (expression -> SYMBOL_COLON .)
    RBRACKET        reduce using rule 33 (expression -> SYMBOL_COLON .)
    COMMA           reduce using rule 33 (expression -> SYMBOL_COLON .)
    RBRACE          reduce using rule 33 (expression -> SYMBOL_COLON .)


state 22

    (68) expression -> LBRACKET . elements RBRACKET
    (69) elements -> . elements COMMA expression
    (70) elements -> . expression
    (71) elements -> . empty
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (55) empty -> .

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    RBRACKET        reduce using rule 55 (empty -> .)
    COMMA           reduce using rule 55 (empty -> .)

    elements                       shift and go to state 55
    expression                     shift and go to state 56
    empty                          shift and go to state 57

state 23

    (72) expression -> LBRACE . hash_content RBRACE
    (73) hash_content -> . hash_pair_list
    (74) hash_content -> .
    (75) hash_pair_list -> . hash_pair
    (76) hash_pair_list -> . hash_pair_list COMMA hash_pair
    (77) hash_pair -> . SYMBOL_COLON ASSIGN expression

    RBRACE          reduce using rule 74 (hash_content -> .)
    SYMBOL_COLON    shift and go to state 61

    hash_content                   shift and go to state 58
    hash_pair_list                 shift and go to state 59
    hash_pair                      shift and go to state 60

state 24

    (43) if_statement -> IF . expression statement_list elsif_blocks_opt else_block_opt END_KW
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 62

state 25

    (56) function_def -> DEF . IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> DEF . IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> DEF . SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> DEF . CONSTANT DOT IDENTIFIER statement_list END_KW

    IDENTIFIER      shift and go to state 63
    SELF            shift and go to state 64
    CONSTANT        shift and go to state 65


state 26

    (67) while_statement -> WHILE . expression statement_list END_KW
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 66

state 27

    (44) unless_statement -> UNLESS . expression statement_list else_block_opt END_KW
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 67

state 28

    (45) case_statement -> CASE . expression when_blocks else_block_opt END_KW
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 68

state 29

    (2) statement_list -> statement_list statement .

    YIELD           reduce using rule 2 (statement_list -> statement_list statement .)
    PUTS            reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 2 (statement_list -> statement_list statement .)
    INTEGER         reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    SYMBOL_COLON    reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACKET        reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    DEF             reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    UNLESS          reduce using rule 2 (statement_list -> statement_list statement .)
    CASE            reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    ELSIF           reduce using rule 2 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 2 (statement_list -> statement_list statement .)
    END_KW          reduce using rule 2 (statement_list -> statement_list statement .)
    WHEN            reduce using rule 2 (statement_list -> statement_list statement .)


state 30

    (24) expression -> expression PLUS . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 69

state 31

    (25) expression -> expression MINUS . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 70

state 32

    (26) expression -> expression TIMES . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 71

state 33

    (27) expression -> expression DIVIDE . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 72

state 34

    (28) expression -> expression MODULO . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 73

state 35

    (29) expression -> expression POWER . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 74

state 36

    (35) expression -> expression LOGICAL_AND . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 75

state 37

    (36) expression -> expression LOGICAL_OR . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 76

state 38

    (37) expression -> expression EQUAL_EQUAL . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 77

state 39

    (38) expression -> expression NOT_EQUAL . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 78

state 40

    (39) expression -> expression GREATER_THAN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 79

state 41

    (40) expression -> expression LESS_THAN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 80

state 42

    (41) expression -> expression GREATER_EQUAL . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 81

state 43

    (42) expression -> expression LESS_EQUAL . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 82

state 44

    (13) print -> PUTS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 13 (print -> PUTS expression .)
    PUTS            reduce using rule 13 (print -> PUTS expression .)
    IDENTIFIER      reduce using rule 13 (print -> PUTS expression .)
    LPAREN          reduce using rule 13 (print -> PUTS expression .)
    INTEGER         reduce using rule 13 (print -> PUTS expression .)
    FLOAT           reduce using rule 13 (print -> PUTS expression .)
    STRING          reduce using rule 13 (print -> PUTS expression .)
    SYMBOL_COLON    reduce using rule 13 (print -> PUTS expression .)
    LBRACKET        reduce using rule 13 (print -> PUTS expression .)
    LBRACE          reduce using rule 13 (print -> PUTS expression .)
    IF              reduce using rule 13 (print -> PUTS expression .)
    DEF             reduce using rule 13 (print -> PUTS expression .)
    WHILE           reduce using rule 13 (print -> PUTS expression .)
    UNLESS          reduce using rule 13 (print -> PUTS expression .)
    CASE            reduce using rule 13 (print -> PUTS expression .)
    $end            reduce using rule 13 (print -> PUTS expression .)
    ELSIF           reduce using rule 13 (print -> PUTS expression .)
    ELSE            reduce using rule 13 (print -> PUTS expression .)
    END_KW          reduce using rule 13 (print -> PUTS expression .)
    WHEN            reduce using rule 13 (print -> PUTS expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 13 (print -> PUTS expression .) ]


state 45

    (34) expression -> IDENTIFIER .

    PLUS            reduce using rule 34 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 34 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 34 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 34 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 34 (expression -> IDENTIFIER .)
    POWER           reduce using rule 34 (expression -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 34 (expression -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 34 (expression -> IDENTIFIER .)
    EQUAL_EQUAL     reduce using rule 34 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 34 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 34 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 34 (expression -> IDENTIFIER .)
    YIELD           reduce using rule 34 (expression -> IDENTIFIER .)
    PUTS            reduce using rule 34 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 34 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 34 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 34 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 34 (expression -> IDENTIFIER .)
    STRING          reduce using rule 34 (expression -> IDENTIFIER .)
    SYMBOL_COLON    reduce using rule 34 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 34 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 34 (expression -> IDENTIFIER .)
    IF              reduce using rule 34 (expression -> IDENTIFIER .)
    DEF             reduce using rule 34 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 34 (expression -> IDENTIFIER .)
    UNLESS          reduce using rule 34 (expression -> IDENTIFIER .)
    CASE            reduce using rule 34 (expression -> IDENTIFIER .)
    $end            reduce using rule 34 (expression -> IDENTIFIER .)
    ELSIF           reduce using rule 34 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 34 (expression -> IDENTIFIER .)
    END_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    WHEN            reduce using rule 34 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 34 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 34 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 34 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 34 (expression -> IDENTIFIER .)


state 46

    (14) input -> IDENTIFIER ASSIGN . GETS DOT IDENTIFIER
    (15) assignment -> IDENTIFIER ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    GETS            shift and go to state 83
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 84

state 47

    (16) assignment -> IDENTIFIER PLUS_ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 85

state 48

    (17) assignment -> IDENTIFIER MINUS_ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 86

state 49

    (18) assignment -> IDENTIFIER TIMES_ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 87

state 50

    (19) assignment -> IDENTIFIER DIVIDE_ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 88

state 51

    (20) assignment -> IDENTIFIER OR_ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 89

state 52

    (21) assignment -> IDENTIFIER AND_ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 90

state 53

    (22) expression -> LPAREN expression . RPAREN
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    RPAREN          shift and go to state 91
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43


state 54

    (23) expression -> MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 23 (expression -> MINUS expression .)
    MINUS           reduce using rule 23 (expression -> MINUS expression .)
    TIMES           reduce using rule 23 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 23 (expression -> MINUS expression .)
    MODULO          reduce using rule 23 (expression -> MINUS expression .)
    POWER           reduce using rule 23 (expression -> MINUS expression .)
    LOGICAL_AND     reduce using rule 23 (expression -> MINUS expression .)
    LOGICAL_OR      reduce using rule 23 (expression -> MINUS expression .)
    EQUAL_EQUAL     reduce using rule 23 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 23 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 23 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 23 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 23 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 23 (expression -> MINUS expression .)
    YIELD           reduce using rule 23 (expression -> MINUS expression .)
    PUTS            reduce using rule 23 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 23 (expression -> MINUS expression .)
    LPAREN          reduce using rule 23 (expression -> MINUS expression .)
    INTEGER         reduce using rule 23 (expression -> MINUS expression .)
    FLOAT           reduce using rule 23 (expression -> MINUS expression .)
    STRING          reduce using rule 23 (expression -> MINUS expression .)
    SYMBOL_COLON    reduce using rule 23 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 23 (expression -> MINUS expression .)
    LBRACE          reduce using rule 23 (expression -> MINUS expression .)
    IF              reduce using rule 23 (expression -> MINUS expression .)
    DEF             reduce using rule 23 (expression -> MINUS expression .)
    WHILE           reduce using rule 23 (expression -> MINUS expression .)
    UNLESS          reduce using rule 23 (expression -> MINUS expression .)
    CASE            reduce using rule 23 (expression -> MINUS expression .)
    $end            reduce using rule 23 (expression -> MINUS expression .)
    ELSIF           reduce using rule 23 (expression -> MINUS expression .)
    ELSE            reduce using rule 23 (expression -> MINUS expression .)
    END_KW          reduce using rule 23 (expression -> MINUS expression .)
    WHEN            reduce using rule 23 (expression -> MINUS expression .)
    RPAREN          reduce using rule 23 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 23 (expression -> MINUS expression .)
    COMMA           reduce using rule 23 (expression -> MINUS expression .)
    RBRACE          reduce using rule 23 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULO          [ shift and go to state 34 ]
  ! POWER           [ shift and go to state 35 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 55

    (68) expression -> LBRACKET elements . RBRACKET
    (69) elements -> elements . COMMA expression

    RBRACKET        shift and go to state 92
    COMMA           shift and go to state 93


state 56

    (70) elements -> expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    RBRACKET        reduce using rule 70 (elements -> expression .)
    COMMA           reduce using rule 70 (elements -> expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43


state 57

    (71) elements -> empty .

    RBRACKET        reduce using rule 71 (elements -> empty .)
    COMMA           reduce using rule 71 (elements -> empty .)


state 58

    (72) expression -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 94


state 59

    (73) hash_content -> hash_pair_list .
    (76) hash_pair_list -> hash_pair_list . COMMA hash_pair

    RBRACE          reduce using rule 73 (hash_content -> hash_pair_list .)
    COMMA           shift and go to state 95


state 60

    (75) hash_pair_list -> hash_pair .

    COMMA           reduce using rule 75 (hash_pair_list -> hash_pair .)
    RBRACE          reduce using rule 75 (hash_pair_list -> hash_pair .)


state 61

    (77) hash_pair -> SYMBOL_COLON . ASSIGN expression

    ASSIGN          shift and go to state 96


state 62

    (43) if_statement -> IF expression . statement_list elsif_blocks_opt else_block_opt END_KW
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    PLUS            shift and go to state 30
    MINUS           shift and go to state 98
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    statement_list                 shift and go to state 97
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 63

    (56) function_def -> DEF IDENTIFIER . LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> DEF IDENTIFIER . param_list_opt statement_list END_KW
    (63) param_list_opt -> . param_list
    (64) param_list_opt -> . empty
    (65) param_list -> . param
    (66) param_list -> . param_list COMMA param
    (55) empty -> .
    (61) param -> . IDENTIFIER
    (62) param -> . IDENTIFIER ASSIGN expression

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LPAREN          shift and go to state 100
    YIELD           reduce using rule 55 (empty -> .)
    PUTS            reduce using rule 55 (empty -> .)
    MINUS           reduce using rule 55 (empty -> .)
    INTEGER         reduce using rule 55 (empty -> .)
    FLOAT           reduce using rule 55 (empty -> .)
    STRING          reduce using rule 55 (empty -> .)
    SYMBOL_COLON    reduce using rule 55 (empty -> .)
    LBRACKET        reduce using rule 55 (empty -> .)
    LBRACE          reduce using rule 55 (empty -> .)
    IF              reduce using rule 55 (empty -> .)
    DEF             reduce using rule 55 (empty -> .)
    WHILE           reduce using rule 55 (empty -> .)
    UNLESS          reduce using rule 55 (empty -> .)
    CASE            reduce using rule 55 (empty -> .)
    IDENTIFIER      shift and go to state 99

  ! IDENTIFIER      [ reduce using rule 55 (empty -> .) ]
  ! LPAREN          [ reduce using rule 55 (empty -> .) ]

    param_list_opt                 shift and go to state 101
    param_list                     shift and go to state 102
    empty                          shift and go to state 103
    param                          shift and go to state 104

state 64

    (58) function_def -> DEF SELF . DOT IDENTIFIER statement_list END_KW

    DOT             shift and go to state 105


state 65

    (59) function_def -> DEF CONSTANT . DOT IDENTIFIER statement_list END_KW

    DOT             shift and go to state 106


state 66

    (67) while_statement -> WHILE expression . statement_list END_KW
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    PLUS            shift and go to state 30
    MINUS           shift and go to state 98
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    statement_list                 shift and go to state 107
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 67

    (44) unless_statement -> UNLESS expression . statement_list else_block_opt END_KW
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    PLUS            shift and go to state 30
    MINUS           shift and go to state 98
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    statement_list                 shift and go to state 108
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 68

    (45) case_statement -> CASE expression . when_blocks else_block_opt END_KW
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression
    (46) when_blocks -> . when_blocks when_block
    (47) when_blocks -> . when_block
    (48) when_block -> . WHEN expression statement_list

    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    WHEN            shift and go to state 111

    when_blocks                    shift and go to state 109
    when_block                     shift and go to state 110

state 69

    (24) expression -> expression PLUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 24 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 24 (expression -> expression PLUS expression .)
    LOGICAL_AND     reduce using rule 24 (expression -> expression PLUS expression .)
    LOGICAL_OR      reduce using rule 24 (expression -> expression PLUS expression .)
    EQUAL_EQUAL     reduce using rule 24 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 24 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 24 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 24 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 24 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 24 (expression -> expression PLUS expression .)
    YIELD           reduce using rule 24 (expression -> expression PLUS expression .)
    PUTS            reduce using rule 24 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 24 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 24 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 24 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 24 (expression -> expression PLUS expression .)
    STRING          reduce using rule 24 (expression -> expression PLUS expression .)
    SYMBOL_COLON    reduce using rule 24 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 24 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 24 (expression -> expression PLUS expression .)
    IF              reduce using rule 24 (expression -> expression PLUS expression .)
    DEF             reduce using rule 24 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 24 (expression -> expression PLUS expression .)
    UNLESS          reduce using rule 24 (expression -> expression PLUS expression .)
    CASE            reduce using rule 24 (expression -> expression PLUS expression .)
    $end            reduce using rule 24 (expression -> expression PLUS expression .)
    ELSIF           reduce using rule 24 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 24 (expression -> expression PLUS expression .)
    END_KW          reduce using rule 24 (expression -> expression PLUS expression .)
    WHEN            reduce using rule 24 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 24 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 24 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 24 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! TIMES           [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 24 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 70

    (25) expression -> expression MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 25 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 25 (expression -> expression MINUS expression .)
    LOGICAL_AND     reduce using rule 25 (expression -> expression MINUS expression .)
    LOGICAL_OR      reduce using rule 25 (expression -> expression MINUS expression .)
    EQUAL_EQUAL     reduce using rule 25 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 25 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 25 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 25 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 25 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 25 (expression -> expression MINUS expression .)
    YIELD           reduce using rule 25 (expression -> expression MINUS expression .)
    PUTS            reduce using rule 25 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 25 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 25 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 25 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 25 (expression -> expression MINUS expression .)
    STRING          reduce using rule 25 (expression -> expression MINUS expression .)
    SYMBOL_COLON    reduce using rule 25 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 25 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 25 (expression -> expression MINUS expression .)
    IF              reduce using rule 25 (expression -> expression MINUS expression .)
    DEF             reduce using rule 25 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 25 (expression -> expression MINUS expression .)
    UNLESS          reduce using rule 25 (expression -> expression MINUS expression .)
    CASE            reduce using rule 25 (expression -> expression MINUS expression .)
    $end            reduce using rule 25 (expression -> expression MINUS expression .)
    ELSIF           reduce using rule 25 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 25 (expression -> expression MINUS expression .)
    END_KW          reduce using rule 25 (expression -> expression MINUS expression .)
    WHEN            reduce using rule 25 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 25 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 25 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 25 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! TIMES           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 71

    (26) expression -> expression TIMES expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 26 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 26 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 26 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 26 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 26 (expression -> expression TIMES expression .)
    LOGICAL_AND     reduce using rule 26 (expression -> expression TIMES expression .)
    LOGICAL_OR      reduce using rule 26 (expression -> expression TIMES expression .)
    EQUAL_EQUAL     reduce using rule 26 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 26 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 26 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 26 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 26 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 26 (expression -> expression TIMES expression .)
    YIELD           reduce using rule 26 (expression -> expression TIMES expression .)
    PUTS            reduce using rule 26 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 26 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 26 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 26 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 26 (expression -> expression TIMES expression .)
    STRING          reduce using rule 26 (expression -> expression TIMES expression .)
    SYMBOL_COLON    reduce using rule 26 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 26 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 26 (expression -> expression TIMES expression .)
    IF              reduce using rule 26 (expression -> expression TIMES expression .)
    DEF             reduce using rule 26 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 26 (expression -> expression TIMES expression .)
    UNLESS          reduce using rule 26 (expression -> expression TIMES expression .)
    CASE            reduce using rule 26 (expression -> expression TIMES expression .)
    $end            reduce using rule 26 (expression -> expression TIMES expression .)
    ELSIF           reduce using rule 26 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 26 (expression -> expression TIMES expression .)
    END_KW          reduce using rule 26 (expression -> expression TIMES expression .)
    WHEN            reduce using rule 26 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 26 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 26 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 26 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 26 (expression -> expression TIMES expression .)
    POWER           shift and go to state 35

  ! POWER           [ reduce using rule 26 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULO          [ shift and go to state 34 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 72

    (27) expression -> expression DIVIDE expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 27 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 27 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 27 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 27 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 27 (expression -> expression DIVIDE expression .)
    LOGICAL_AND     reduce using rule 27 (expression -> expression DIVIDE expression .)
    LOGICAL_OR      reduce using rule 27 (expression -> expression DIVIDE expression .)
    EQUAL_EQUAL     reduce using rule 27 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 27 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 27 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 27 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 27 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 27 (expression -> expression DIVIDE expression .)
    YIELD           reduce using rule 27 (expression -> expression DIVIDE expression .)
    PUTS            reduce using rule 27 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 27 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 27 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 27 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 27 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 27 (expression -> expression DIVIDE expression .)
    SYMBOL_COLON    reduce using rule 27 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 27 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 27 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 27 (expression -> expression DIVIDE expression .)
    DEF             reduce using rule 27 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 27 (expression -> expression DIVIDE expression .)
    UNLESS          reduce using rule 27 (expression -> expression DIVIDE expression .)
    CASE            reduce using rule 27 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 27 (expression -> expression DIVIDE expression .)
    ELSIF           reduce using rule 27 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 27 (expression -> expression DIVIDE expression .)
    END_KW          reduce using rule 27 (expression -> expression DIVIDE expression .)
    WHEN            reduce using rule 27 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 27 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 27 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 27 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 27 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 35

  ! POWER           [ reduce using rule 27 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULO          [ shift and go to state 34 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 73

    (28) expression -> expression MODULO expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 28 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 28 (expression -> expression MODULO expression .)
    TIMES           reduce using rule 28 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 28 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 28 (expression -> expression MODULO expression .)
    LOGICAL_AND     reduce using rule 28 (expression -> expression MODULO expression .)
    LOGICAL_OR      reduce using rule 28 (expression -> expression MODULO expression .)
    EQUAL_EQUAL     reduce using rule 28 (expression -> expression MODULO expression .)
    NOT_EQUAL       reduce using rule 28 (expression -> expression MODULO expression .)
    GREATER_THAN    reduce using rule 28 (expression -> expression MODULO expression .)
    LESS_THAN       reduce using rule 28 (expression -> expression MODULO expression .)
    GREATER_EQUAL   reduce using rule 28 (expression -> expression MODULO expression .)
    LESS_EQUAL      reduce using rule 28 (expression -> expression MODULO expression .)
    YIELD           reduce using rule 28 (expression -> expression MODULO expression .)
    PUTS            reduce using rule 28 (expression -> expression MODULO expression .)
    IDENTIFIER      reduce using rule 28 (expression -> expression MODULO expression .)
    LPAREN          reduce using rule 28 (expression -> expression MODULO expression .)
    INTEGER         reduce using rule 28 (expression -> expression MODULO expression .)
    FLOAT           reduce using rule 28 (expression -> expression MODULO expression .)
    STRING          reduce using rule 28 (expression -> expression MODULO expression .)
    SYMBOL_COLON    reduce using rule 28 (expression -> expression MODULO expression .)
    LBRACKET        reduce using rule 28 (expression -> expression MODULO expression .)
    LBRACE          reduce using rule 28 (expression -> expression MODULO expression .)
    IF              reduce using rule 28 (expression -> expression MODULO expression .)
    DEF             reduce using rule 28 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 28 (expression -> expression MODULO expression .)
    UNLESS          reduce using rule 28 (expression -> expression MODULO expression .)
    CASE            reduce using rule 28 (expression -> expression MODULO expression .)
    $end            reduce using rule 28 (expression -> expression MODULO expression .)
    ELSIF           reduce using rule 28 (expression -> expression MODULO expression .)
    ELSE            reduce using rule 28 (expression -> expression MODULO expression .)
    END_KW          reduce using rule 28 (expression -> expression MODULO expression .)
    WHEN            reduce using rule 28 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 28 (expression -> expression MODULO expression .)
    RBRACKET        reduce using rule 28 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 28 (expression -> expression MODULO expression .)
    RBRACE          reduce using rule 28 (expression -> expression MODULO expression .)
    POWER           shift and go to state 35

  ! POWER           [ reduce using rule 28 (expression -> expression MODULO expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULO          [ shift and go to state 34 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 74

    (29) expression -> expression POWER expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 29 (expression -> expression POWER expression .)
    MINUS           reduce using rule 29 (expression -> expression POWER expression .)
    TIMES           reduce using rule 29 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 29 (expression -> expression POWER expression .)
    MODULO          reduce using rule 29 (expression -> expression POWER expression .)
    LOGICAL_AND     reduce using rule 29 (expression -> expression POWER expression .)
    LOGICAL_OR      reduce using rule 29 (expression -> expression POWER expression .)
    EQUAL_EQUAL     reduce using rule 29 (expression -> expression POWER expression .)
    NOT_EQUAL       reduce using rule 29 (expression -> expression POWER expression .)
    GREATER_THAN    reduce using rule 29 (expression -> expression POWER expression .)
    LESS_THAN       reduce using rule 29 (expression -> expression POWER expression .)
    GREATER_EQUAL   reduce using rule 29 (expression -> expression POWER expression .)
    LESS_EQUAL      reduce using rule 29 (expression -> expression POWER expression .)
    YIELD           reduce using rule 29 (expression -> expression POWER expression .)
    PUTS            reduce using rule 29 (expression -> expression POWER expression .)
    IDENTIFIER      reduce using rule 29 (expression -> expression POWER expression .)
    LPAREN          reduce using rule 29 (expression -> expression POWER expression .)
    INTEGER         reduce using rule 29 (expression -> expression POWER expression .)
    FLOAT           reduce using rule 29 (expression -> expression POWER expression .)
    STRING          reduce using rule 29 (expression -> expression POWER expression .)
    SYMBOL_COLON    reduce using rule 29 (expression -> expression POWER expression .)
    LBRACKET        reduce using rule 29 (expression -> expression POWER expression .)
    LBRACE          reduce using rule 29 (expression -> expression POWER expression .)
    IF              reduce using rule 29 (expression -> expression POWER expression .)
    DEF             reduce using rule 29 (expression -> expression POWER expression .)
    WHILE           reduce using rule 29 (expression -> expression POWER expression .)
    UNLESS          reduce using rule 29 (expression -> expression POWER expression .)
    CASE            reduce using rule 29 (expression -> expression POWER expression .)
    $end            reduce using rule 29 (expression -> expression POWER expression .)
    ELSIF           reduce using rule 29 (expression -> expression POWER expression .)
    ELSE            reduce using rule 29 (expression -> expression POWER expression .)
    END_KW          reduce using rule 29 (expression -> expression POWER expression .)
    WHEN            reduce using rule 29 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 29 (expression -> expression POWER expression .)
    RBRACKET        reduce using rule 29 (expression -> expression POWER expression .)
    COMMA           reduce using rule 29 (expression -> expression POWER expression .)
    RBRACE          reduce using rule 29 (expression -> expression POWER expression .)
    POWER           shift and go to state 35

  ! POWER           [ reduce using rule 29 (expression -> expression POWER expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULO          [ shift and go to state 34 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 75

    (35) expression -> expression LOGICAL_AND expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    LOGICAL_OR      reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    YIELD           reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    PUTS            reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    IDENTIFIER      reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    LPAREN          reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    INTEGER         reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    FLOAT           reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    STRING          reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    SYMBOL_COLON    reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    LBRACKET        reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    LBRACE          reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    IF              reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    DEF             reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    WHILE           reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    UNLESS          reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    CASE            reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    $end            reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    ELSIF           reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    ELSE            reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    END_KW          reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    WHEN            reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    RPAREN          reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    RBRACKET        reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    COMMA           reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    RBRACE          reduce using rule 35 (expression -> expression LOGICAL_AND expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! PLUS            [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! MODULO          [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! POWER           [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! LESS_THAN       [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 35 (expression -> expression LOGICAL_AND expression .) ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]


state 76

    (36) expression -> expression LOGICAL_OR expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_OR      reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    YIELD           reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    PUTS            reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    IDENTIFIER      reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    LPAREN          reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    INTEGER         reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    FLOAT           reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    STRING          reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    SYMBOL_COLON    reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    LBRACKET        reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    LBRACE          reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    IF              reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    DEF             reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    WHILE           reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    UNLESS          reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    CASE            reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    $end            reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    ELSIF           reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    ELSE            reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    END_KW          reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    WHEN            reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    RPAREN          reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    RBRACKET        reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    COMMA           reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    RBRACE          reduce using rule 36 (expression -> expression LOGICAL_OR expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! PLUS            [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! POWER           [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! LOGICAL_AND     [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! LESS_THAN       [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 36 (expression -> expression LOGICAL_OR expression .) ]
  ! LOGICAL_OR      [ shift and go to state 37 ]


state 77

    (37) expression -> expression EQUAL_EQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    LOGICAL_OR      reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    GREATER_THAN    reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    LESS_THAN       reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    YIELD           reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    PUTS            reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    IDENTIFIER      reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    LPAREN          reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    INTEGER         reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    FLOAT           reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    STRING          reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    SYMBOL_COLON    reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    LBRACKET        reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    LBRACE          reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    IF              reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    DEF             reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    WHILE           reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    UNLESS          reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    CASE            reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    $end            reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    ELSIF           reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    ELSE            reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    END_KW          reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    WHEN            reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    RPAREN          reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    RBRACKET        reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    COMMA           reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    RBRACE          reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .) ]
  ! POWER           [ reduce using rule 37 (expression -> expression EQUAL_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 78

    (38) expression -> expression NOT_EQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LOGICAL_OR      reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    YIELD           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    PUTS            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    IDENTIFIER      reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LPAREN          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    FLOAT           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    SYMBOL_COLON    reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LBRACKET        reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    LBRACE          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    DEF             reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    UNLESS          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    CASE            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ELSIF           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    END_KW          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    WHEN            reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    RBRACKET        reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    RBRACE          reduce using rule 38 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! POWER           [ reduce using rule 38 (expression -> expression NOT_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 79

    (39) expression -> expression GREATER_THAN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    LOGICAL_OR      reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    EQUAL_EQUAL     reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    GREATER_EQUAL   reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    LESS_EQUAL      reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    YIELD           reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    PUTS            reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    IDENTIFIER      reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    LPAREN          reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    INTEGER         reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    FLOAT           reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    STRING          reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    SYMBOL_COLON    reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    LBRACKET        reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    LBRACE          reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    IF              reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    DEF             reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    WHILE           reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    UNLESS          reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    CASE            reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    ELSIF           reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    ELSE            reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    END_KW          reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    WHEN            reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    RBRACKET        reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    RBRACE          reduce using rule 39 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 39 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression GREATER_THAN expression .) ]
  ! MODULO          [ reduce using rule 39 (expression -> expression GREATER_THAN expression .) ]
  ! POWER           [ reduce using rule 39 (expression -> expression GREATER_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 80

    (40) expression -> expression LESS_THAN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 40 (expression -> expression LESS_THAN expression .)
    LOGICAL_OR      reduce using rule 40 (expression -> expression LESS_THAN expression .)
    EQUAL_EQUAL     reduce using rule 40 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 40 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 40 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 40 (expression -> expression LESS_THAN expression .)
    GREATER_EQUAL   reduce using rule 40 (expression -> expression LESS_THAN expression .)
    LESS_EQUAL      reduce using rule 40 (expression -> expression LESS_THAN expression .)
    YIELD           reduce using rule 40 (expression -> expression LESS_THAN expression .)
    PUTS            reduce using rule 40 (expression -> expression LESS_THAN expression .)
    IDENTIFIER      reduce using rule 40 (expression -> expression LESS_THAN expression .)
    LPAREN          reduce using rule 40 (expression -> expression LESS_THAN expression .)
    INTEGER         reduce using rule 40 (expression -> expression LESS_THAN expression .)
    FLOAT           reduce using rule 40 (expression -> expression LESS_THAN expression .)
    STRING          reduce using rule 40 (expression -> expression LESS_THAN expression .)
    SYMBOL_COLON    reduce using rule 40 (expression -> expression LESS_THAN expression .)
    LBRACKET        reduce using rule 40 (expression -> expression LESS_THAN expression .)
    LBRACE          reduce using rule 40 (expression -> expression LESS_THAN expression .)
    IF              reduce using rule 40 (expression -> expression LESS_THAN expression .)
    DEF             reduce using rule 40 (expression -> expression LESS_THAN expression .)
    WHILE           reduce using rule 40 (expression -> expression LESS_THAN expression .)
    UNLESS          reduce using rule 40 (expression -> expression LESS_THAN expression .)
    CASE            reduce using rule 40 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 40 (expression -> expression LESS_THAN expression .)
    ELSIF           reduce using rule 40 (expression -> expression LESS_THAN expression .)
    ELSE            reduce using rule 40 (expression -> expression LESS_THAN expression .)
    END_KW          reduce using rule 40 (expression -> expression LESS_THAN expression .)
    WHEN            reduce using rule 40 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 40 (expression -> expression LESS_THAN expression .)
    RBRACKET        reduce using rule 40 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 40 (expression -> expression LESS_THAN expression .)
    RBRACE          reduce using rule 40 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 40 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression LESS_THAN expression .) ]
  ! MODULO          [ reduce using rule 40 (expression -> expression LESS_THAN expression .) ]
  ! POWER           [ reduce using rule 40 (expression -> expression LESS_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 81

    (41) expression -> expression GREATER_EQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    LOGICAL_OR      reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    GREATER_THAN    reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    LESS_THAN       reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    YIELD           reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    PUTS            reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    IDENTIFIER      reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    LPAREN          reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    FLOAT           reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    SYMBOL_COLON    reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    LBRACKET        reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    LBRACE          reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    DEF             reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    UNLESS          reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    CASE            reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    ELSIF           reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    END_KW          reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    WHEN            reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    RBRACKET        reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    RBRACE          reduce using rule 41 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 41 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression GREATER_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression GREATER_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 41 (expression -> expression GREATER_EQUAL expression .) ]
  ! POWER           [ reduce using rule 41 (expression -> expression GREATER_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 82

    (42) expression -> expression LESS_EQUAL expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LOGICAL_OR      reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    GREATER_THAN    reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LESS_THAN       reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    YIELD           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    PUTS            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    IDENTIFIER      reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LPAREN          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    FLOAT           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    SYMBOL_COLON    reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LBRACKET        reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    LBRACE          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    DEF             reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    UNLESS          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    CASE            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    ELSIF           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    END_KW          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    WHEN            reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    RBRACKET        reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    RBRACE          reduce using rule 42 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! POWER           [ reduce using rule 42 (expression -> expression LESS_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 83

    (14) input -> IDENTIFIER ASSIGN GETS . DOT IDENTIFIER

    DOT             shift and go to state 112


state 84

    (15) assignment -> IDENTIFIER ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    PUTS            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    IDENTIFIER      reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    LPAREN          reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    INTEGER         reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    FLOAT           reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    STRING          reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    LBRACKET        reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    LBRACE          reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    IF              reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    DEF             reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    WHILE           reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    UNLESS          reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    CASE            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    $end            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    ELSIF           reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    ELSE            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    END_KW          reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    WHEN            reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 15 (assignment -> IDENTIFIER ASSIGN expression .) ]


state 85

    (16) assignment -> IDENTIFIER PLUS_ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    PUTS            reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    IDENTIFIER      reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    LPAREN          reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    INTEGER         reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    FLOAT           reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    STRING          reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    LBRACKET        reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    LBRACE          reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    IF              reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    DEF             reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    WHILE           reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    UNLESS          reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    CASE            reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    $end            reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    ELSIF           reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    ELSE            reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    END_KW          reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    WHEN            reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 16 (assignment -> IDENTIFIER PLUS_ASSIGN expression .) ]


state 86

    (17) assignment -> IDENTIFIER MINUS_ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    PUTS            reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    IDENTIFIER      reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    LPAREN          reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    INTEGER         reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    FLOAT           reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    STRING          reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    LBRACKET        reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    LBRACE          reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    IF              reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    DEF             reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    WHILE           reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    UNLESS          reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    CASE            reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    $end            reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    ELSIF           reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    ELSE            reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    END_KW          reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    WHEN            reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 17 (assignment -> IDENTIFIER MINUS_ASSIGN expression .) ]


state 87

    (18) assignment -> IDENTIFIER TIMES_ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    PUTS            reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    IDENTIFIER      reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    LPAREN          reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    INTEGER         reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    FLOAT           reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    STRING          reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    LBRACKET        reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    LBRACE          reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    IF              reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    DEF             reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    WHILE           reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    UNLESS          reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    CASE            reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    $end            reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    ELSIF           reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    ELSE            reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    END_KW          reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    WHEN            reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 18 (assignment -> IDENTIFIER TIMES_ASSIGN expression .) ]


state 88

    (19) assignment -> IDENTIFIER DIVIDE_ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    PUTS            reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    IDENTIFIER      reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    LPAREN          reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    INTEGER         reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    FLOAT           reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    STRING          reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    LBRACKET        reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    LBRACE          reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    IF              reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    DEF             reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    WHILE           reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    UNLESS          reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    CASE            reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    $end            reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    ELSIF           reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    ELSE            reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    END_KW          reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    WHEN            reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 19 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .) ]


state 89

    (20) assignment -> IDENTIFIER OR_ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    PUTS            reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    IDENTIFIER      reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    LPAREN          reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    INTEGER         reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    FLOAT           reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    STRING          reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    LBRACKET        reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    LBRACE          reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    IF              reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    DEF             reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    WHILE           reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    UNLESS          reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    CASE            reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    $end            reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    ELSIF           reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    ELSE            reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    END_KW          reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    WHEN            reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 20 (assignment -> IDENTIFIER OR_ASSIGN expression .) ]


state 90

    (21) assignment -> IDENTIFIER AND_ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    YIELD           reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    PUTS            reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    IDENTIFIER      reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    LPAREN          reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    INTEGER         reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    FLOAT           reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    STRING          reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    LBRACKET        reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    LBRACE          reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    IF              reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    DEF             reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    WHILE           reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    UNLESS          reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    CASE            reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    $end            reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    ELSIF           reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    ELSE            reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    END_KW          reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    WHEN            reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 21 (assignment -> IDENTIFIER AND_ASSIGN expression .) ]


state 91

    (22) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LOGICAL_AND     reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LOGICAL_OR      reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    EQUAL_EQUAL     reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    YIELD           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    PUTS            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    SYMBOL_COLON    reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    DEF             reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    UNLESS          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    CASE            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    ELSIF           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    END_KW          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    WHEN            reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 22 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 22 (expression -> LPAREN expression RPAREN .)


state 92

    (68) expression -> LBRACKET elements RBRACKET .

    PLUS            reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    TIMES           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    DIVIDE          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    MODULO          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    POWER           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    LOGICAL_AND     reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    LOGICAL_OR      reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    EQUAL_EQUAL     reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    NOT_EQUAL       reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    GREATER_THAN    reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    LESS_THAN       reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    GREATER_EQUAL   reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    LESS_EQUAL      reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    YIELD           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    PUTS            reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    IDENTIFIER      reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    LPAREN          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    INTEGER         reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    FLOAT           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    STRING          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    SYMBOL_COLON    reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    LBRACKET        reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    LBRACE          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    IF              reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    DEF             reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    WHILE           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    UNLESS          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    CASE            reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    $end            reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    ELSIF           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    ELSE            reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    END_KW          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    WHEN            reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)
    RBRACE          reduce using rule 68 (expression -> LBRACKET elements RBRACKET .)


state 93

    (69) elements -> elements COMMA . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 113

state 94

    (72) expression -> LBRACE hash_content RBRACE .

    PLUS            reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    MINUS           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    TIMES           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    DIVIDE          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    MODULO          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    POWER           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    LOGICAL_AND     reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    LOGICAL_OR      reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    EQUAL_EQUAL     reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    NOT_EQUAL       reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    GREATER_THAN    reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    LESS_THAN       reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    GREATER_EQUAL   reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    LESS_EQUAL      reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    YIELD           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    PUTS            reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    IDENTIFIER      reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    LPAREN          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    INTEGER         reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    FLOAT           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    STRING          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    SYMBOL_COLON    reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    LBRACKET        reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    LBRACE          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    IF              reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    DEF             reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    WHILE           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    UNLESS          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    CASE            reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    $end            reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    ELSIF           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    ELSE            reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    END_KW          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    WHEN            reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    RBRACKET        reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 72 (expression -> LBRACE hash_content RBRACE .)


state 95

    (76) hash_pair_list -> hash_pair_list COMMA . hash_pair
    (77) hash_pair -> . SYMBOL_COLON ASSIGN expression

    SYMBOL_COLON    shift and go to state 61

    hash_pair                      shift and go to state 114

state 96

    (77) hash_pair -> SYMBOL_COLON ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 115

state 97

    (43) if_statement -> IF expression statement_list . elsif_blocks_opt else_block_opt END_KW
    (2) statement_list -> statement_list . statement
    (49) elsif_blocks_opt -> . elsif_blocks
    (50) elsif_blocks_opt -> . empty
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (51) elsif_blocks -> . ELSIF expression statement_list elsif_blocks
    (52) elsif_blocks -> . ELSIF expression statement_list
    (55) empty -> .
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    YIELD           shift and go to state 13
    ELSIF           shift and go to state 119
    ELSE            reduce using rule 55 (empty -> .)
    END_KW          reduce using rule 55 (empty -> .)
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    elsif_blocks_opt               shift and go to state 116
    statement                      shift and go to state 29
    elsif_blocks                   shift and go to state 117
    empty                          shift and go to state 118
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 98

    (25) expression -> expression MINUS . expression
    (23) expression -> MINUS . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 120

state 99

    (61) param -> IDENTIFIER .
    (62) param -> IDENTIFIER . ASSIGN expression

    COMMA           reduce using rule 61 (param -> IDENTIFIER .)
    YIELD           reduce using rule 61 (param -> IDENTIFIER .)
    PUTS            reduce using rule 61 (param -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 61 (param -> IDENTIFIER .)
    LPAREN          reduce using rule 61 (param -> IDENTIFIER .)
    MINUS           reduce using rule 61 (param -> IDENTIFIER .)
    INTEGER         reduce using rule 61 (param -> IDENTIFIER .)
    FLOAT           reduce using rule 61 (param -> IDENTIFIER .)
    STRING          reduce using rule 61 (param -> IDENTIFIER .)
    SYMBOL_COLON    reduce using rule 61 (param -> IDENTIFIER .)
    LBRACKET        reduce using rule 61 (param -> IDENTIFIER .)
    LBRACE          reduce using rule 61 (param -> IDENTIFIER .)
    IF              reduce using rule 61 (param -> IDENTIFIER .)
    DEF             reduce using rule 61 (param -> IDENTIFIER .)
    WHILE           reduce using rule 61 (param -> IDENTIFIER .)
    UNLESS          reduce using rule 61 (param -> IDENTIFIER .)
    CASE            reduce using rule 61 (param -> IDENTIFIER .)
    RPAREN          reduce using rule 61 (param -> IDENTIFIER .)
    ASSIGN          shift and go to state 121


state 100

    (56) function_def -> DEF IDENTIFIER LPAREN . param_list_opt RPAREN statement_list END_KW
    (63) param_list_opt -> . param_list
    (64) param_list_opt -> . empty
    (65) param_list -> . param
    (66) param_list -> . param_list COMMA param
    (55) empty -> .
    (61) param -> . IDENTIFIER
    (62) param -> . IDENTIFIER ASSIGN expression

    RPAREN          reduce using rule 55 (empty -> .)
    IDENTIFIER      shift and go to state 99

    param_list_opt                 shift and go to state 122
    param_list                     shift and go to state 102
    empty                          shift and go to state 103
    param                          shift and go to state 104

state 101

    (57) function_def -> DEF IDENTIFIER param_list_opt . statement_list END_KW
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement_list                 shift and go to state 123
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 102

    (63) param_list_opt -> param_list .
    (66) param_list -> param_list . COMMA param

    YIELD           reduce using rule 63 (param_list_opt -> param_list .)
    PUTS            reduce using rule 63 (param_list_opt -> param_list .)
    IDENTIFIER      reduce using rule 63 (param_list_opt -> param_list .)
    LPAREN          reduce using rule 63 (param_list_opt -> param_list .)
    MINUS           reduce using rule 63 (param_list_opt -> param_list .)
    INTEGER         reduce using rule 63 (param_list_opt -> param_list .)
    FLOAT           reduce using rule 63 (param_list_opt -> param_list .)
    STRING          reduce using rule 63 (param_list_opt -> param_list .)
    SYMBOL_COLON    reduce using rule 63 (param_list_opt -> param_list .)
    LBRACKET        reduce using rule 63 (param_list_opt -> param_list .)
    LBRACE          reduce using rule 63 (param_list_opt -> param_list .)
    IF              reduce using rule 63 (param_list_opt -> param_list .)
    DEF             reduce using rule 63 (param_list_opt -> param_list .)
    WHILE           reduce using rule 63 (param_list_opt -> param_list .)
    UNLESS          reduce using rule 63 (param_list_opt -> param_list .)
    CASE            reduce using rule 63 (param_list_opt -> param_list .)
    RPAREN          reduce using rule 63 (param_list_opt -> param_list .)
    COMMA           shift and go to state 124


state 103

    (64) param_list_opt -> empty .

    YIELD           reduce using rule 64 (param_list_opt -> empty .)
    PUTS            reduce using rule 64 (param_list_opt -> empty .)
    IDENTIFIER      reduce using rule 64 (param_list_opt -> empty .)
    LPAREN          reduce using rule 64 (param_list_opt -> empty .)
    MINUS           reduce using rule 64 (param_list_opt -> empty .)
    INTEGER         reduce using rule 64 (param_list_opt -> empty .)
    FLOAT           reduce using rule 64 (param_list_opt -> empty .)
    STRING          reduce using rule 64 (param_list_opt -> empty .)
    SYMBOL_COLON    reduce using rule 64 (param_list_opt -> empty .)
    LBRACKET        reduce using rule 64 (param_list_opt -> empty .)
    LBRACE          reduce using rule 64 (param_list_opt -> empty .)
    IF              reduce using rule 64 (param_list_opt -> empty .)
    DEF             reduce using rule 64 (param_list_opt -> empty .)
    WHILE           reduce using rule 64 (param_list_opt -> empty .)
    UNLESS          reduce using rule 64 (param_list_opt -> empty .)
    CASE            reduce using rule 64 (param_list_opt -> empty .)
    RPAREN          reduce using rule 64 (param_list_opt -> empty .)


state 104

    (65) param_list -> param .

    COMMA           reduce using rule 65 (param_list -> param .)
    YIELD           reduce using rule 65 (param_list -> param .)
    PUTS            reduce using rule 65 (param_list -> param .)
    IDENTIFIER      reduce using rule 65 (param_list -> param .)
    LPAREN          reduce using rule 65 (param_list -> param .)
    MINUS           reduce using rule 65 (param_list -> param .)
    INTEGER         reduce using rule 65 (param_list -> param .)
    FLOAT           reduce using rule 65 (param_list -> param .)
    STRING          reduce using rule 65 (param_list -> param .)
    SYMBOL_COLON    reduce using rule 65 (param_list -> param .)
    LBRACKET        reduce using rule 65 (param_list -> param .)
    LBRACE          reduce using rule 65 (param_list -> param .)
    IF              reduce using rule 65 (param_list -> param .)
    DEF             reduce using rule 65 (param_list -> param .)
    WHILE           reduce using rule 65 (param_list -> param .)
    UNLESS          reduce using rule 65 (param_list -> param .)
    CASE            reduce using rule 65 (param_list -> param .)
    RPAREN          reduce using rule 65 (param_list -> param .)


state 105

    (58) function_def -> DEF SELF DOT . IDENTIFIER statement_list END_KW

    IDENTIFIER      shift and go to state 125


state 106

    (59) function_def -> DEF CONSTANT DOT . IDENTIFIER statement_list END_KW

    IDENTIFIER      shift and go to state 126


state 107

    (67) while_statement -> WHILE expression statement_list . END_KW
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    END_KW          shift and go to state 127
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 108

    (44) unless_statement -> UNLESS expression statement_list . else_block_opt END_KW
    (2) statement_list -> statement_list . statement
    (53) else_block_opt -> . ELSE statement_list
    (54) else_block_opt -> . empty
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (55) empty -> .
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    ELSE            shift and go to state 129
    YIELD           shift and go to state 13
    END_KW          reduce using rule 55 (empty -> .)
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    else_block_opt                 shift and go to state 128
    statement                      shift and go to state 29
    empty                          shift and go to state 130
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 109

    (45) case_statement -> CASE expression when_blocks . else_block_opt END_KW
    (46) when_blocks -> when_blocks . when_block
    (53) else_block_opt -> . ELSE statement_list
    (54) else_block_opt -> . empty
    (48) when_block -> . WHEN expression statement_list
    (55) empty -> .

    ELSE            shift and go to state 129
    WHEN            shift and go to state 111
    END_KW          reduce using rule 55 (empty -> .)

    else_block_opt                 shift and go to state 131
    when_block                     shift and go to state 132
    empty                          shift and go to state 130

state 110

    (47) when_blocks -> when_block .

    ELSE            reduce using rule 47 (when_blocks -> when_block .)
    WHEN            reduce using rule 47 (when_blocks -> when_block .)
    END_KW          reduce using rule 47 (when_blocks -> when_block .)


state 111

    (48) when_block -> WHEN . expression statement_list
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 133

state 112

    (14) input -> IDENTIFIER ASSIGN GETS DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 134


state 113

    (69) elements -> elements COMMA expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    RBRACKET        reduce using rule 69 (elements -> elements COMMA expression .)
    COMMA           reduce using rule 69 (elements -> elements COMMA expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43


state 114

    (76) hash_pair_list -> hash_pair_list COMMA hash_pair .

    COMMA           reduce using rule 76 (hash_pair_list -> hash_pair_list COMMA hash_pair .)
    RBRACE          reduce using rule 76 (hash_pair_list -> hash_pair_list COMMA hash_pair .)


state 115

    (77) hash_pair -> SYMBOL_COLON ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

    COMMA           reduce using rule 77 (hash_pair -> SYMBOL_COLON ASSIGN expression .)
    RBRACE          reduce using rule 77 (hash_pair -> SYMBOL_COLON ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43


state 116

    (43) if_statement -> IF expression statement_list elsif_blocks_opt . else_block_opt END_KW
    (53) else_block_opt -> . ELSE statement_list
    (54) else_block_opt -> . empty
    (55) empty -> .

    ELSE            shift and go to state 129
    END_KW          reduce using rule 55 (empty -> .)

    else_block_opt                 shift and go to state 135
    empty                          shift and go to state 130

state 117

    (49) elsif_blocks_opt -> elsif_blocks .

    ELSE            reduce using rule 49 (elsif_blocks_opt -> elsif_blocks .)
    END_KW          reduce using rule 49 (elsif_blocks_opt -> elsif_blocks .)


state 118

    (50) elsif_blocks_opt -> empty .

    ELSE            reduce using rule 50 (elsif_blocks_opt -> empty .)
    END_KW          reduce using rule 50 (elsif_blocks_opt -> empty .)


state 119

    (51) elsif_blocks -> ELSIF . expression statement_list elsif_blocks
    (52) elsif_blocks -> ELSIF . expression statement_list
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 136

state 120

    (25) expression -> expression MINUS expression .
    (23) expression -> MINUS expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! reduce/reduce conflict for PLUS resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for TIMES resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for MODULO resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for POWER resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LOGICAL_AND resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LOGICAL_OR resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for EQUAL_EQUAL resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for NOT_EQUAL resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER_THAN resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS_THAN resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for GREATER_EQUAL resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LESS_EQUAL resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for YIELD resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for STRING resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for SYMBOL_COLON resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for LBRACE resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for IF resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for DEF resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for UNLESS resolved using rule 23 (expression -> MINUS expression .)
  ! reduce/reduce conflict for CASE resolved using rule 23 (expression -> MINUS expression .)
    PLUS            reduce using rule 23 (expression -> MINUS expression .)
    MINUS           reduce using rule 23 (expression -> MINUS expression .)
    TIMES           reduce using rule 23 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 23 (expression -> MINUS expression .)
    MODULO          reduce using rule 23 (expression -> MINUS expression .)
    POWER           reduce using rule 23 (expression -> MINUS expression .)
    LOGICAL_AND     reduce using rule 23 (expression -> MINUS expression .)
    LOGICAL_OR      reduce using rule 23 (expression -> MINUS expression .)
    EQUAL_EQUAL     reduce using rule 23 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 23 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 23 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 23 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 23 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 23 (expression -> MINUS expression .)
    YIELD           reduce using rule 23 (expression -> MINUS expression .)
    ELSIF           reduce using rule 23 (expression -> MINUS expression .)
    PUTS            reduce using rule 23 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 23 (expression -> MINUS expression .)
    LPAREN          reduce using rule 23 (expression -> MINUS expression .)
    INTEGER         reduce using rule 23 (expression -> MINUS expression .)
    FLOAT           reduce using rule 23 (expression -> MINUS expression .)
    STRING          reduce using rule 23 (expression -> MINUS expression .)
    SYMBOL_COLON    reduce using rule 23 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 23 (expression -> MINUS expression .)
    LBRACE          reduce using rule 23 (expression -> MINUS expression .)
    IF              reduce using rule 23 (expression -> MINUS expression .)
    DEF             reduce using rule 23 (expression -> MINUS expression .)
    WHILE           reduce using rule 23 (expression -> MINUS expression .)
    UNLESS          reduce using rule 23 (expression -> MINUS expression .)
    CASE            reduce using rule 23 (expression -> MINUS expression .)
    ELSE            reduce using rule 23 (expression -> MINUS expression .)
    END_KW          reduce using rule 23 (expression -> MINUS expression .)
    WHEN            reduce using rule 23 (expression -> MINUS expression .)

  ! PLUS            [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LOGICAL_AND     [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LOGICAL_OR      [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! NOT_EQUAL       [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! GREATER_THAN    [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LESS_THAN       [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LESS_EQUAL      [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! YIELD           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PUTS            [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! IDENTIFIER      [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LPAREN          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! INTEGER         [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! FLOAT           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! STRING          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! SYMBOL_COLON    [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! LBRACE          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! IF              [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! DEF             [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! WHILE           [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! UNLESS          [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! CASE            [ reduce using rule 25 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! TIMES           [ shift and go to state 32 ]
  ! DIVIDE          [ shift and go to state 33 ]
  ! MODULO          [ shift and go to state 34 ]
  ! POWER           [ shift and go to state 35 ]
  ! LOGICAL_AND     [ shift and go to state 36 ]
  ! LOGICAL_OR      [ shift and go to state 37 ]
  ! EQUAL_EQUAL     [ shift and go to state 38 ]
  ! NOT_EQUAL       [ shift and go to state 39 ]
  ! GREATER_THAN    [ shift and go to state 40 ]
  ! LESS_THAN       [ shift and go to state 41 ]
  ! GREATER_EQUAL   [ shift and go to state 42 ]
  ! LESS_EQUAL      [ shift and go to state 43 ]


state 121

    (62) param -> IDENTIFIER ASSIGN . expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    IDENTIFIER      shift and go to state 45
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23

    expression                     shift and go to state 137

state 122

    (56) function_def -> DEF IDENTIFIER LPAREN param_list_opt . RPAREN statement_list END_KW

    RPAREN          shift and go to state 138


state 123

    (57) function_def -> DEF IDENTIFIER param_list_opt statement_list . END_KW
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    END_KW          shift and go to state 139
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 124

    (66) param_list -> param_list COMMA . param
    (61) param -> . IDENTIFIER
    (62) param -> . IDENTIFIER ASSIGN expression

    IDENTIFIER      shift and go to state 99

    param                          shift and go to state 140

state 125

    (58) function_def -> DEF SELF DOT IDENTIFIER . statement_list END_KW
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement_list                 shift and go to state 141
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 126

    (59) function_def -> DEF CONSTANT DOT IDENTIFIER . statement_list END_KW
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement_list                 shift and go to state 142
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 127

    (67) while_statement -> WHILE expression statement_list END_KW .

    YIELD           reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    PUTS            reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    IDENTIFIER      reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    LPAREN          reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    MINUS           reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    INTEGER         reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    FLOAT           reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    STRING          reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    SYMBOL_COLON    reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    LBRACKET        reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    LBRACE          reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    IF              reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    DEF             reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    WHILE           reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    UNLESS          reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    CASE            reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    $end            reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    ELSIF           reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    ELSE            reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    END_KW          reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)
    WHEN            reduce using rule 67 (while_statement -> WHILE expression statement_list END_KW .)


state 128

    (44) unless_statement -> UNLESS expression statement_list else_block_opt . END_KW

    END_KW          shift and go to state 143


state 129

    (53) else_block_opt -> ELSE . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement_list                 shift and go to state 144
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 130

    (54) else_block_opt -> empty .

    END_KW          reduce using rule 54 (else_block_opt -> empty .)


state 131

    (45) case_statement -> CASE expression when_blocks else_block_opt . END_KW

    END_KW          shift and go to state 145


state 132

    (46) when_blocks -> when_blocks when_block .

    ELSE            reduce using rule 46 (when_blocks -> when_blocks when_block .)
    WHEN            reduce using rule 46 (when_blocks -> when_blocks when_block .)
    END_KW          reduce using rule 46 (when_blocks -> when_blocks when_block .)


state 133

    (48) when_block -> WHEN expression . statement_list
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    PLUS            shift and go to state 30
    MINUS           shift and go to state 98
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    statement_list                 shift and go to state 146
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 134

    (14) input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .

    YIELD           reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    PUTS            reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    IDENTIFIER      reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    LPAREN          reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    MINUS           reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    INTEGER         reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    FLOAT           reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    STRING          reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    SYMBOL_COLON    reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    LBRACKET        reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    LBRACE          reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    IF              reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    DEF             reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    WHILE           reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    UNLESS          reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    CASE            reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    $end            reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    ELSIF           reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    ELSE            reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    END_KW          reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    WHEN            reduce using rule 14 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)


state 135

    (43) if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt . END_KW

    END_KW          shift and go to state 147


state 136

    (51) elsif_blocks -> ELSIF expression . statement_list elsif_blocks
    (52) elsif_blocks -> ELSIF expression . statement_list
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    PLUS            shift and go to state 30
    MINUS           shift and go to state 98
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    statement_list                 shift and go to state 148
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 137

    (62) param -> IDENTIFIER ASSIGN expression .
    (24) expression -> expression . PLUS expression
    (25) expression -> expression . MINUS expression
    (26) expression -> expression . TIMES expression
    (27) expression -> expression . DIVIDE expression
    (28) expression -> expression . MODULO expression
    (29) expression -> expression . POWER expression
    (35) expression -> expression . LOGICAL_AND expression
    (36) expression -> expression . LOGICAL_OR expression
    (37) expression -> expression . EQUAL_EQUAL expression
    (38) expression -> expression . NOT_EQUAL expression
    (39) expression -> expression . GREATER_THAN expression
    (40) expression -> expression . LESS_THAN expression
    (41) expression -> expression . GREATER_EQUAL expression
    (42) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    YIELD           reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    PUTS            reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    IDENTIFIER      reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    LPAREN          reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    INTEGER         reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    FLOAT           reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    STRING          reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    SYMBOL_COLON    reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    LBRACKET        reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    LBRACE          reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    IF              reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    DEF             reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    WHILE           reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    UNLESS          reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    CASE            reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33
    MODULO          shift and go to state 34
    POWER           shift and go to state 35
    LOGICAL_AND     shift and go to state 36
    LOGICAL_OR      shift and go to state 37
    EQUAL_EQUAL     shift and go to state 38
    NOT_EQUAL       shift and go to state 39
    GREATER_THAN    shift and go to state 40
    LESS_THAN       shift and go to state 41
    GREATER_EQUAL   shift and go to state 42
    LESS_EQUAL      shift and go to state 43

  ! MINUS           [ reduce using rule 62 (param -> IDENTIFIER ASSIGN expression .) ]


state 138

    (56) function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN . statement_list END_KW
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement_list                 shift and go to state 149
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 139

    (57) function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .

    YIELD           reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    PUTS            reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    IDENTIFIER      reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    LPAREN          reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    MINUS           reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    INTEGER         reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    FLOAT           reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    STRING          reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    SYMBOL_COLON    reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    LBRACKET        reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    LBRACE          reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    IF              reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    DEF             reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    WHILE           reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    UNLESS          reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    CASE            reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    $end            reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    ELSIF           reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    ELSE            reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    END_KW          reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)
    WHEN            reduce using rule 57 (function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW .)


state 140

    (66) param_list -> param_list COMMA param .

    COMMA           reduce using rule 66 (param_list -> param_list COMMA param .)
    YIELD           reduce using rule 66 (param_list -> param_list COMMA param .)
    PUTS            reduce using rule 66 (param_list -> param_list COMMA param .)
    IDENTIFIER      reduce using rule 66 (param_list -> param_list COMMA param .)
    LPAREN          reduce using rule 66 (param_list -> param_list COMMA param .)
    MINUS           reduce using rule 66 (param_list -> param_list COMMA param .)
    INTEGER         reduce using rule 66 (param_list -> param_list COMMA param .)
    FLOAT           reduce using rule 66 (param_list -> param_list COMMA param .)
    STRING          reduce using rule 66 (param_list -> param_list COMMA param .)
    SYMBOL_COLON    reduce using rule 66 (param_list -> param_list COMMA param .)
    LBRACKET        reduce using rule 66 (param_list -> param_list COMMA param .)
    LBRACE          reduce using rule 66 (param_list -> param_list COMMA param .)
    IF              reduce using rule 66 (param_list -> param_list COMMA param .)
    DEF             reduce using rule 66 (param_list -> param_list COMMA param .)
    WHILE           reduce using rule 66 (param_list -> param_list COMMA param .)
    UNLESS          reduce using rule 66 (param_list -> param_list COMMA param .)
    CASE            reduce using rule 66 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 66 (param_list -> param_list COMMA param .)


state 141

    (58) function_def -> DEF SELF DOT IDENTIFIER statement_list . END_KW
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    END_KW          shift and go to state 150
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 142

    (59) function_def -> DEF CONSTANT DOT IDENTIFIER statement_list . END_KW
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    END_KW          shift and go to state 151
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 143

    (44) unless_statement -> UNLESS expression statement_list else_block_opt END_KW .

    YIELD           reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    PUTS            reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    IDENTIFIER      reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    LPAREN          reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    MINUS           reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    INTEGER         reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    FLOAT           reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    STRING          reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    SYMBOL_COLON    reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    LBRACKET        reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    LBRACE          reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    IF              reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    DEF             reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    WHILE           reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    UNLESS          reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    CASE            reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    $end            reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    ELSIF           reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    ELSE            reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    END_KW          reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)
    WHEN            reduce using rule 44 (unless_statement -> UNLESS expression statement_list else_block_opt END_KW .)


state 144

    (53) else_block_opt -> ELSE statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    END_KW          reduce using rule 53 (else_block_opt -> ELSE statement_list .)
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 145

    (45) case_statement -> CASE expression when_blocks else_block_opt END_KW .

    YIELD           reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    PUTS            reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    IDENTIFIER      reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    LPAREN          reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    MINUS           reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    INTEGER         reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    FLOAT           reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    STRING          reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    SYMBOL_COLON    reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    LBRACKET        reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    LBRACE          reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    IF              reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    DEF             reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    WHILE           reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    UNLESS          reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    CASE            reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    $end            reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    ELSIF           reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    ELSE            reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    END_KW          reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)
    WHEN            reduce using rule 45 (case_statement -> CASE expression when_blocks else_block_opt END_KW .)


state 146

    (48) when_block -> WHEN expression statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    ELSE            reduce using rule 48 (when_block -> WHEN expression statement_list .)
    WHEN            reduce using rule 48 (when_block -> WHEN expression statement_list .)
    END_KW          reduce using rule 48 (when_block -> WHEN expression statement_list .)
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 147

    (43) if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .

    YIELD           reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    PUTS            reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    IDENTIFIER      reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    LPAREN          reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    MINUS           reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    INTEGER         reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    FLOAT           reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    STRING          reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    SYMBOL_COLON    reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    LBRACKET        reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    LBRACE          reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    IF              reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    DEF             reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    WHILE           reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    UNLESS          reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    CASE            reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    $end            reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    ELSIF           reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    ELSE            reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    END_KW          reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)
    WHEN            reduce using rule 43 (if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW .)


state 148

    (51) elsif_blocks -> ELSIF expression statement_list . elsif_blocks
    (52) elsif_blocks -> ELSIF expression statement_list .
    (2) statement_list -> statement_list . statement
    (51) elsif_blocks -> . ELSIF expression statement_list elsif_blocks
    (52) elsif_blocks -> . ELSIF expression statement_list
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    ELSE            reduce using rule 52 (elsif_blocks -> ELSIF expression statement_list .)
    END_KW          reduce using rule 52 (elsif_blocks -> ELSIF expression statement_list .)
    ELSIF           shift and go to state 119
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    expression                     shift and go to state 7
    elsif_blocks                   shift and go to state 152
    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 149

    (56) function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list . END_KW
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (9) statement -> . function_def
    (10) statement -> . while_statement
    (11) statement -> . unless_statement
    (12) statement -> . case_statement
    (60) statement -> . YIELD
    (13) print -> . PUTS expression
    (14) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (15) assignment -> . IDENTIFIER ASSIGN expression
    (16) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (17) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (18) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (19) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (20) assignment -> . IDENTIFIER OR_ASSIGN expression
    (21) assignment -> . IDENTIFIER AND_ASSIGN expression
    (22) expression -> . LPAREN expression RPAREN
    (23) expression -> . MINUS expression
    (24) expression -> . expression PLUS expression
    (25) expression -> . expression MINUS expression
    (26) expression -> . expression TIMES expression
    (27) expression -> . expression DIVIDE expression
    (28) expression -> . expression MODULO expression
    (29) expression -> . expression POWER expression
    (30) expression -> . INTEGER
    (31) expression -> . FLOAT
    (32) expression -> . STRING
    (33) expression -> . SYMBOL_COLON
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression LOGICAL_AND expression
    (36) expression -> . expression LOGICAL_OR expression
    (37) expression -> . expression EQUAL_EQUAL expression
    (38) expression -> . expression NOT_EQUAL expression
    (39) expression -> . expression GREATER_THAN expression
    (40) expression -> . expression LESS_THAN expression
    (41) expression -> . expression GREATER_EQUAL expression
    (42) expression -> . expression LESS_EQUAL expression
    (68) expression -> . LBRACKET elements RBRACKET
    (72) expression -> . LBRACE hash_content RBRACE
    (43) if_statement -> . IF expression statement_list elsif_blocks_opt else_block_opt END_KW
    (56) function_def -> . DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW
    (57) function_def -> . DEF IDENTIFIER param_list_opt statement_list END_KW
    (58) function_def -> . DEF SELF DOT IDENTIFIER statement_list END_KW
    (59) function_def -> . DEF CONSTANT DOT IDENTIFIER statement_list END_KW
    (67) while_statement -> . WHILE expression statement_list END_KW
    (44) unless_statement -> . UNLESS expression statement_list else_block_opt END_KW
    (45) case_statement -> . CASE expression when_blocks else_block_opt END_KW

    END_KW          shift and go to state 153
    YIELD           shift and go to state 13
    PUTS            shift and go to state 14
    IDENTIFIER      shift and go to state 15
    LPAREN          shift and go to state 16
    MINUS           shift and go to state 17
    INTEGER         shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    SYMBOL_COLON    shift and go to state 21
    LBRACKET        shift and go to state 22
    LBRACE          shift and go to state 23
    IF              shift and go to state 24
    DEF             shift and go to state 25
    WHILE           shift and go to state 26
    UNLESS          shift and go to state 27
    CASE            shift and go to state 28

    statement                      shift and go to state 29
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
    function_def                   shift and go to state 9
    while_statement                shift and go to state 10
    unless_statement               shift and go to state 11
    case_statement                 shift and go to state 12

state 150

    (58) function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .

    YIELD           reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    PUTS            reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    IDENTIFIER      reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    LPAREN          reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    MINUS           reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    INTEGER         reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    FLOAT           reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    STRING          reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    SYMBOL_COLON    reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    LBRACKET        reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    LBRACE          reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    IF              reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    DEF             reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    WHILE           reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    UNLESS          reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    CASE            reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    $end            reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    ELSIF           reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    ELSE            reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    END_KW          reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)
    WHEN            reduce using rule 58 (function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW .)


state 151

    (59) function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .

    YIELD           reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    PUTS            reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    IDENTIFIER      reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    LPAREN          reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    MINUS           reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    INTEGER         reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    FLOAT           reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    STRING          reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    SYMBOL_COLON    reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    LBRACKET        reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    LBRACE          reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    IF              reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    DEF             reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    WHILE           reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    UNLESS          reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    CASE            reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    $end            reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    ELSIF           reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    ELSE            reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    END_KW          reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)
    WHEN            reduce using rule 59 (function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW .)


state 152

    (51) elsif_blocks -> ELSIF expression statement_list elsif_blocks .

    ELSE            reduce using rule 51 (elsif_blocks -> ELSIF expression statement_list elsif_blocks .)
    END_KW          reduce using rule 51 (elsif_blocks -> ELSIF expression statement_list elsif_blocks .)


state 153

    (56) function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .

    YIELD           reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    PUTS            reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    IDENTIFIER      reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    LPAREN          reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    MINUS           reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    INTEGER         reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    FLOAT           reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    STRING          reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    SYMBOL_COLON    reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    LBRACKET        reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    LBRACE          reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    IF              reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    DEF             reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    WHILE           reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    UNLESS          reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    CASE            reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    $end            reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    ELSIF           reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    ELSE            reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    END_KW          reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)
    WHEN            reduce using rule 56 (function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 7 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 63 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: reduce/reduce conflict in state 120 resolved using rule (expression -> MINUS expression)
WARNING: rejected rule (expression -> expression MINUS expression) in state 120
