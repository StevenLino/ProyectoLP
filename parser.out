Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AMPERSAND
    AND
    BEGIN_KW
    BREAK
    CASE
    CLASS
    CLASS_VAR
    CONSTANT
    DEF
    DEFINEDQ
    DO
    ENSURE
    FALSE
    FOR
    GLOBAL_VAR
    IN
    INSTANCE_VAR
    LOGICAL_NOT
    MATCH_REGEX
    MODULE
    NEXT
    NIL
    NOT
    NOT_MATCH_REGEX
    OR
    RANGE_EXCLUSIVE
    RANGE_INCLUSIVE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SEMICOLON
    SUPER
    TERNARY_COLON
    TERNARY_Q
    THEN
    TRUE
    UNDEF
    UNLESS
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> print
Rule 5     statement -> input
Rule 6     statement -> assignment
Rule 7     statement -> expression
Rule 8     statement -> if_statement
Rule 9     print -> PUTS expression
Rule 10    input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER
Rule 11    assignment -> IDENTIFIER ASSIGN expression
Rule 12    assignment -> IDENTIFIER PLUS_ASSIGN expression
Rule 13    assignment -> IDENTIFIER MINUS_ASSIGN expression
Rule 14    assignment -> IDENTIFIER TIMES_ASSIGN expression
Rule 15    assignment -> IDENTIFIER DIVIDE_ASSIGN expression
Rule 16    assignment -> IDENTIFIER OR_ASSIGN expression
Rule 17    assignment -> IDENTIFIER AND_ASSIGN expression
Rule 18    expression -> LPAREN expression RPAREN
Rule 19    expression -> MINUS expression
Rule 20    expression -> expression PLUS expression
Rule 21    expression -> expression MINUS expression
Rule 22    expression -> expression TIMES expression
Rule 23    expression -> expression DIVIDE expression
Rule 24    expression -> expression MODULO expression
Rule 25    expression -> expression POWER expression
Rule 26    expression -> INTEGER
Rule 27    expression -> FLOAT
Rule 28    expression -> STRING
Rule 29    expression -> IDENTIFIER
Rule 30    expression -> expression LOGICAL_AND expression
Rule 31    expression -> expression LOGICAL_OR expression
Rule 32    expression -> expression EQUAL_EQUAL expression
Rule 33    expression -> expression NOT_EQUAL expression
Rule 34    expression -> expression GREATER_THAN expression
Rule 35    expression -> expression LESS_THAN expression
Rule 36    expression -> expression GREATER_EQUAL expression
Rule 37    expression -> expression LESS_EQUAL expression
Rule 38    condition -> expression EQUAL_EQUAL expression
Rule 39    condition -> expression NOT_EQUAL expression
Rule 40    condition -> expression GREATER_THAN expression
Rule 41    condition -> expression LESS_THAN expression
Rule 42    condition -> expression GREATER_EQUAL expression
Rule 43    condition -> expression LESS_EQUAL expression
Rule 44    if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW
Rule 45    elsif_blocks_opt -> elsif_blocks
Rule 46    elsif_blocks_opt -> empty
Rule 47    elsif_blocks -> elsif_blocks ELSIF condition statement_list
Rule 48    elsif_blocks -> ELSIF condition statement_list
Rule 49    else_block_opt -> ELSE statement_list
Rule 50    else_block_opt -> empty
Rule 51    empty -> <empty>
Rule 52    statement -> WHILE condition statement_list END_KW
Rule 53    expression -> LBRACKET elements RBRACKET
Rule 54    elements -> elements COMMA expression
Rule 55    elements -> expression
Rule 56    elements -> empty
Rule 57    expression -> LBRACE hash_content RBRACE
Rule 58    hash_content -> hash_pair_list
Rule 59    hash_content -> <empty>
Rule 60    hash_pair_list -> hash_pair
Rule 61    hash_pair_list -> hash_pair_list COMMA hash_pair
Rule 62    hash_pair -> SYMBOL_COLON ASSIGN expression

Terminals, with rules where they appear

ALIAS                : 
AMPERSAND            : 
AND                  : 
AND_ASSIGN           : 17
ASSIGN               : 10 11 62
BEGIN_KW             : 
BREAK                : 
CASE                 : 
CLASS                : 
CLASS_VAR            : 
COMMA                : 54 61
CONSTANT             : 
DEF                  : 
DEFINEDQ             : 
DIVIDE               : 23
DIVIDE_ASSIGN        : 15
DO                   : 
DOT                  : 10
ELSE                 : 49
ELSIF                : 47 48
END_KW               : 44 52
ENSURE               : 
EQUAL_EQUAL          : 32 38
FALSE                : 
FLOAT                : 27
FOR                  : 
GETS                 : 10
GLOBAL_VAR           : 
GREATER_EQUAL        : 36 42
GREATER_THAN         : 34 40
IDENTIFIER           : 10 10 11 12 13 14 15 16 17 29
IF                   : 44
IN                   : 
INSTANCE_VAR         : 
INTEGER              : 26
LBRACE               : 57
LBRACKET             : 53
LESS_EQUAL           : 37 43
LESS_THAN            : 35 41
LOGICAL_AND          : 30
LOGICAL_NOT          : 
LOGICAL_OR           : 31
LPAREN               : 18
MATCH_REGEX          : 
MINUS                : 19 21
MINUS_ASSIGN         : 13
MODULE               : 
MODULO               : 24
NEXT                 : 
NIL                  : 
NOT                  : 
NOT_EQUAL            : 33 39
NOT_MATCH_REGEX      : 
OR                   : 
OR_ASSIGN            : 16
PLUS                 : 20
PLUS_ASSIGN          : 12
POWER                : 25
PUTS                 : 9
RANGE_EXCLUSIVE      : 
RANGE_INCLUSIVE      : 
RBRACE               : 57
RBRACKET             : 53
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RPAREN               : 18
SELF                 : 
SEMICOLON            : 
STRING               : 28
SUPER                : 
SYMBOL_COLON         : 62
TERNARY_COLON        : 
TERNARY_Q            : 
THEN                 : 
TIMES                : 22
TIMES_ASSIGN         : 14
TRUE                 : 
UNDEF                : 
UNLESS               : 
UNTIL                : 
WHEN                 : 
WHILE                : 52
YIELD                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 6
condition            : 44 47 48 52
elements             : 53 54
else_block_opt       : 44
elsif_blocks         : 45 47
elsif_blocks_opt     : 44
empty                : 46 50 56
expression           : 7 9 11 12 13 14 15 16 17 18 19 20 20 21 21 22 22 23 23 24 24 25 25 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 54 55 62
hash_content         : 57
hash_pair            : 60 61
hash_pair_list       : 58 61
if_statement         : 8
input                : 5
print                : 4
program              : 0
statement            : 2 3
statement_list       : 1 2 44 47 48 49 52

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    $end            reduce using rule 1 (program -> statement_list .)
    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement                      shift and go to state 20
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 3

    (3) statement_list -> statement .

    WHILE           reduce using rule 3 (statement_list -> statement .)
    PUTS            reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    LPAREN          reduce using rule 3 (statement_list -> statement .)
    MINUS           reduce using rule 3 (statement_list -> statement .)
    INTEGER         reduce using rule 3 (statement_list -> statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    LBRACKET        reduce using rule 3 (statement_list -> statement .)
    LBRACE          reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    END_KW          reduce using rule 3 (statement_list -> statement .)
    ELSIF           reduce using rule 3 (statement_list -> statement .)
    ELSE            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> print .

    WHILE           reduce using rule 4 (statement -> print .)
    PUTS            reduce using rule 4 (statement -> print .)
    IDENTIFIER      reduce using rule 4 (statement -> print .)
    LPAREN          reduce using rule 4 (statement -> print .)
    MINUS           reduce using rule 4 (statement -> print .)
    INTEGER         reduce using rule 4 (statement -> print .)
    FLOAT           reduce using rule 4 (statement -> print .)
    STRING          reduce using rule 4 (statement -> print .)
    LBRACKET        reduce using rule 4 (statement -> print .)
    LBRACE          reduce using rule 4 (statement -> print .)
    IF              reduce using rule 4 (statement -> print .)
    $end            reduce using rule 4 (statement -> print .)
    END_KW          reduce using rule 4 (statement -> print .)
    ELSIF           reduce using rule 4 (statement -> print .)
    ELSE            reduce using rule 4 (statement -> print .)


state 5

    (5) statement -> input .

    WHILE           reduce using rule 5 (statement -> input .)
    PUTS            reduce using rule 5 (statement -> input .)
    IDENTIFIER      reduce using rule 5 (statement -> input .)
    LPAREN          reduce using rule 5 (statement -> input .)
    MINUS           reduce using rule 5 (statement -> input .)
    INTEGER         reduce using rule 5 (statement -> input .)
    FLOAT           reduce using rule 5 (statement -> input .)
    STRING          reduce using rule 5 (statement -> input .)
    LBRACKET        reduce using rule 5 (statement -> input .)
    LBRACE          reduce using rule 5 (statement -> input .)
    IF              reduce using rule 5 (statement -> input .)
    $end            reduce using rule 5 (statement -> input .)
    END_KW          reduce using rule 5 (statement -> input .)
    ELSIF           reduce using rule 5 (statement -> input .)
    ELSE            reduce using rule 5 (statement -> input .)


state 6

    (6) statement -> assignment .

    WHILE           reduce using rule 6 (statement -> assignment .)
    PUTS            reduce using rule 6 (statement -> assignment .)
    IDENTIFIER      reduce using rule 6 (statement -> assignment .)
    LPAREN          reduce using rule 6 (statement -> assignment .)
    MINUS           reduce using rule 6 (statement -> assignment .)
    INTEGER         reduce using rule 6 (statement -> assignment .)
    FLOAT           reduce using rule 6 (statement -> assignment .)
    STRING          reduce using rule 6 (statement -> assignment .)
    LBRACKET        reduce using rule 6 (statement -> assignment .)
    LBRACE          reduce using rule 6 (statement -> assignment .)
    IF              reduce using rule 6 (statement -> assignment .)
    $end            reduce using rule 6 (statement -> assignment .)
    END_KW          reduce using rule 6 (statement -> assignment .)
    ELSIF           reduce using rule 6 (statement -> assignment .)
    ELSE            reduce using rule 6 (statement -> assignment .)


state 7

    (7) statement -> expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 7 (statement -> expression .)
    PUTS            reduce using rule 7 (statement -> expression .)
    IDENTIFIER      reduce using rule 7 (statement -> expression .)
    LPAREN          reduce using rule 7 (statement -> expression .)
    INTEGER         reduce using rule 7 (statement -> expression .)
    FLOAT           reduce using rule 7 (statement -> expression .)
    STRING          reduce using rule 7 (statement -> expression .)
    LBRACKET        reduce using rule 7 (statement -> expression .)
    LBRACE          reduce using rule 7 (statement -> expression .)
    IF              reduce using rule 7 (statement -> expression .)
    $end            reduce using rule 7 (statement -> expression .)
    END_KW          reduce using rule 7 (statement -> expression .)
    ELSIF           reduce using rule 7 (statement -> expression .)
    ELSE            reduce using rule 7 (statement -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 7 (statement -> expression .) ]


state 8

    (8) statement -> if_statement .

    WHILE           reduce using rule 8 (statement -> if_statement .)
    PUTS            reduce using rule 8 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> if_statement .)
    LPAREN          reduce using rule 8 (statement -> if_statement .)
    MINUS           reduce using rule 8 (statement -> if_statement .)
    INTEGER         reduce using rule 8 (statement -> if_statement .)
    FLOAT           reduce using rule 8 (statement -> if_statement .)
    STRING          reduce using rule 8 (statement -> if_statement .)
    LBRACKET        reduce using rule 8 (statement -> if_statement .)
    LBRACE          reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    END_KW          reduce using rule 8 (statement -> if_statement .)
    ELSIF           reduce using rule 8 (statement -> if_statement .)
    ELSE            reduce using rule 8 (statement -> if_statement .)


state 9

    (52) statement -> WHILE . condition statement_list END_KW
    (38) condition -> . expression EQUAL_EQUAL expression
    (39) condition -> . expression NOT_EQUAL expression
    (40) condition -> . expression GREATER_THAN expression
    (41) condition -> . expression LESS_THAN expression
    (42) condition -> . expression GREATER_EQUAL expression
    (43) condition -> . expression LESS_EQUAL expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    condition                      shift and go to state 35
    expression                     shift and go to state 36

state 10

    (9) print -> PUTS . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 38

state 11

    (10) input -> IDENTIFIER . ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> IDENTIFIER . ASSIGN expression
    (12) assignment -> IDENTIFIER . PLUS_ASSIGN expression
    (13) assignment -> IDENTIFIER . MINUS_ASSIGN expression
    (14) assignment -> IDENTIFIER . TIMES_ASSIGN expression
    (15) assignment -> IDENTIFIER . DIVIDE_ASSIGN expression
    (16) assignment -> IDENTIFIER . OR_ASSIGN expression
    (17) assignment -> IDENTIFIER . AND_ASSIGN expression
    (29) expression -> IDENTIFIER .

    ASSIGN          shift and go to state 39
    PLUS_ASSIGN     shift and go to state 40
    MINUS_ASSIGN    shift and go to state 41
    TIMES_ASSIGN    shift and go to state 42
    DIVIDE_ASSIGN   shift and go to state 43
    OR_ASSIGN       shift and go to state 44
    AND_ASSIGN      shift and go to state 45
    PLUS            reduce using rule 29 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 29 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 29 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 29 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 29 (expression -> IDENTIFIER .)
    POWER           reduce using rule 29 (expression -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 29 (expression -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 29 (expression -> IDENTIFIER .)
    EQUAL_EQUAL     reduce using rule 29 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 29 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 29 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 29 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 29 (expression -> IDENTIFIER .)
    PUTS            reduce using rule 29 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 29 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 29 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 29 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 29 (expression -> IDENTIFIER .)
    STRING          reduce using rule 29 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 29 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 29 (expression -> IDENTIFIER .)
    IF              reduce using rule 29 (expression -> IDENTIFIER .)
    $end            reduce using rule 29 (expression -> IDENTIFIER .)
    END_KW          reduce using rule 29 (expression -> IDENTIFIER .)
    ELSIF           reduce using rule 29 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 29 (expression -> IDENTIFIER .)


state 12

    (18) expression -> LPAREN . expression RPAREN
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 46

state 13

    (19) expression -> MINUS . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 47

state 14

    (26) expression -> INTEGER .

    PLUS            reduce using rule 26 (expression -> INTEGER .)
    MINUS           reduce using rule 26 (expression -> INTEGER .)
    TIMES           reduce using rule 26 (expression -> INTEGER .)
    DIVIDE          reduce using rule 26 (expression -> INTEGER .)
    MODULO          reduce using rule 26 (expression -> INTEGER .)
    POWER           reduce using rule 26 (expression -> INTEGER .)
    LOGICAL_AND     reduce using rule 26 (expression -> INTEGER .)
    LOGICAL_OR      reduce using rule 26 (expression -> INTEGER .)
    EQUAL_EQUAL     reduce using rule 26 (expression -> INTEGER .)
    NOT_EQUAL       reduce using rule 26 (expression -> INTEGER .)
    GREATER_THAN    reduce using rule 26 (expression -> INTEGER .)
    LESS_THAN       reduce using rule 26 (expression -> INTEGER .)
    GREATER_EQUAL   reduce using rule 26 (expression -> INTEGER .)
    LESS_EQUAL      reduce using rule 26 (expression -> INTEGER .)
    WHILE           reduce using rule 26 (expression -> INTEGER .)
    PUTS            reduce using rule 26 (expression -> INTEGER .)
    IDENTIFIER      reduce using rule 26 (expression -> INTEGER .)
    LPAREN          reduce using rule 26 (expression -> INTEGER .)
    INTEGER         reduce using rule 26 (expression -> INTEGER .)
    FLOAT           reduce using rule 26 (expression -> INTEGER .)
    STRING          reduce using rule 26 (expression -> INTEGER .)
    LBRACKET        reduce using rule 26 (expression -> INTEGER .)
    LBRACE          reduce using rule 26 (expression -> INTEGER .)
    IF              reduce using rule 26 (expression -> INTEGER .)
    $end            reduce using rule 26 (expression -> INTEGER .)
    END_KW          reduce using rule 26 (expression -> INTEGER .)
    ELSIF           reduce using rule 26 (expression -> INTEGER .)
    ELSE            reduce using rule 26 (expression -> INTEGER .)
    RPAREN          reduce using rule 26 (expression -> INTEGER .)
    RBRACKET        reduce using rule 26 (expression -> INTEGER .)
    COMMA           reduce using rule 26 (expression -> INTEGER .)
    RBRACE          reduce using rule 26 (expression -> INTEGER .)


state 15

    (27) expression -> FLOAT .

    PLUS            reduce using rule 27 (expression -> FLOAT .)
    MINUS           reduce using rule 27 (expression -> FLOAT .)
    TIMES           reduce using rule 27 (expression -> FLOAT .)
    DIVIDE          reduce using rule 27 (expression -> FLOAT .)
    MODULO          reduce using rule 27 (expression -> FLOAT .)
    POWER           reduce using rule 27 (expression -> FLOAT .)
    LOGICAL_AND     reduce using rule 27 (expression -> FLOAT .)
    LOGICAL_OR      reduce using rule 27 (expression -> FLOAT .)
    EQUAL_EQUAL     reduce using rule 27 (expression -> FLOAT .)
    NOT_EQUAL       reduce using rule 27 (expression -> FLOAT .)
    GREATER_THAN    reduce using rule 27 (expression -> FLOAT .)
    LESS_THAN       reduce using rule 27 (expression -> FLOAT .)
    GREATER_EQUAL   reduce using rule 27 (expression -> FLOAT .)
    LESS_EQUAL      reduce using rule 27 (expression -> FLOAT .)
    WHILE           reduce using rule 27 (expression -> FLOAT .)
    PUTS            reduce using rule 27 (expression -> FLOAT .)
    IDENTIFIER      reduce using rule 27 (expression -> FLOAT .)
    LPAREN          reduce using rule 27 (expression -> FLOAT .)
    INTEGER         reduce using rule 27 (expression -> FLOAT .)
    FLOAT           reduce using rule 27 (expression -> FLOAT .)
    STRING          reduce using rule 27 (expression -> FLOAT .)
    LBRACKET        reduce using rule 27 (expression -> FLOAT .)
    LBRACE          reduce using rule 27 (expression -> FLOAT .)
    IF              reduce using rule 27 (expression -> FLOAT .)
    $end            reduce using rule 27 (expression -> FLOAT .)
    END_KW          reduce using rule 27 (expression -> FLOAT .)
    ELSIF           reduce using rule 27 (expression -> FLOAT .)
    ELSE            reduce using rule 27 (expression -> FLOAT .)
    RPAREN          reduce using rule 27 (expression -> FLOAT .)
    RBRACKET        reduce using rule 27 (expression -> FLOAT .)
    COMMA           reduce using rule 27 (expression -> FLOAT .)
    RBRACE          reduce using rule 27 (expression -> FLOAT .)


state 16

    (28) expression -> STRING .

    PLUS            reduce using rule 28 (expression -> STRING .)
    MINUS           reduce using rule 28 (expression -> STRING .)
    TIMES           reduce using rule 28 (expression -> STRING .)
    DIVIDE          reduce using rule 28 (expression -> STRING .)
    MODULO          reduce using rule 28 (expression -> STRING .)
    POWER           reduce using rule 28 (expression -> STRING .)
    LOGICAL_AND     reduce using rule 28 (expression -> STRING .)
    LOGICAL_OR      reduce using rule 28 (expression -> STRING .)
    EQUAL_EQUAL     reduce using rule 28 (expression -> STRING .)
    NOT_EQUAL       reduce using rule 28 (expression -> STRING .)
    GREATER_THAN    reduce using rule 28 (expression -> STRING .)
    LESS_THAN       reduce using rule 28 (expression -> STRING .)
    GREATER_EQUAL   reduce using rule 28 (expression -> STRING .)
    LESS_EQUAL      reduce using rule 28 (expression -> STRING .)
    WHILE           reduce using rule 28 (expression -> STRING .)
    PUTS            reduce using rule 28 (expression -> STRING .)
    IDENTIFIER      reduce using rule 28 (expression -> STRING .)
    LPAREN          reduce using rule 28 (expression -> STRING .)
    INTEGER         reduce using rule 28 (expression -> STRING .)
    FLOAT           reduce using rule 28 (expression -> STRING .)
    STRING          reduce using rule 28 (expression -> STRING .)
    LBRACKET        reduce using rule 28 (expression -> STRING .)
    LBRACE          reduce using rule 28 (expression -> STRING .)
    IF              reduce using rule 28 (expression -> STRING .)
    $end            reduce using rule 28 (expression -> STRING .)
    END_KW          reduce using rule 28 (expression -> STRING .)
    ELSIF           reduce using rule 28 (expression -> STRING .)
    ELSE            reduce using rule 28 (expression -> STRING .)
    RPAREN          reduce using rule 28 (expression -> STRING .)
    RBRACKET        reduce using rule 28 (expression -> STRING .)
    COMMA           reduce using rule 28 (expression -> STRING .)
    RBRACE          reduce using rule 28 (expression -> STRING .)


state 17

    (53) expression -> LBRACKET . elements RBRACKET
    (54) elements -> . elements COMMA expression
    (55) elements -> . expression
    (56) elements -> . empty
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (51) empty -> .

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    RBRACKET        reduce using rule 51 (empty -> .)
    COMMA           reduce using rule 51 (empty -> .)

    elements                       shift and go to state 48
    expression                     shift and go to state 49
    empty                          shift and go to state 50

state 18

    (57) expression -> LBRACE . hash_content RBRACE
    (58) hash_content -> . hash_pair_list
    (59) hash_content -> .
    (60) hash_pair_list -> . hash_pair
    (61) hash_pair_list -> . hash_pair_list COMMA hash_pair
    (62) hash_pair -> . SYMBOL_COLON ASSIGN expression

    RBRACE          reduce using rule 59 (hash_content -> .)
    SYMBOL_COLON    shift and go to state 54

    hash_content                   shift and go to state 51
    hash_pair_list                 shift and go to state 52
    hash_pair                      shift and go to state 53

state 19

    (44) if_statement -> IF . condition statement_list elsif_blocks_opt else_block_opt END_KW
    (38) condition -> . expression EQUAL_EQUAL expression
    (39) condition -> . expression NOT_EQUAL expression
    (40) condition -> . expression GREATER_THAN expression
    (41) condition -> . expression LESS_THAN expression
    (42) condition -> . expression GREATER_EQUAL expression
    (43) condition -> . expression LESS_EQUAL expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    condition                      shift and go to state 55
    expression                     shift and go to state 36

state 20

    (2) statement_list -> statement_list statement .

    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    PUTS            reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 2 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 2 (statement_list -> statement_list statement .)
    INTEGER         reduce using rule 2 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement_list statement .)
    STRING          reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACKET        reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    END_KW          reduce using rule 2 (statement_list -> statement_list statement .)
    ELSIF           reduce using rule 2 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 2 (statement_list -> statement_list statement .)


state 21

    (20) expression -> expression PLUS . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 56

state 22

    (21) expression -> expression MINUS . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 57

state 23

    (22) expression -> expression TIMES . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 58

state 24

    (23) expression -> expression DIVIDE . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 59

state 25

    (24) expression -> expression MODULO . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 60

state 26

    (25) expression -> expression POWER . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 61

state 27

    (30) expression -> expression LOGICAL_AND . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 62

state 28

    (31) expression -> expression LOGICAL_OR . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 63

state 29

    (32) expression -> expression EQUAL_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 64

state 30

    (33) expression -> expression NOT_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 65

state 31

    (34) expression -> expression GREATER_THAN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 66

state 32

    (35) expression -> expression LESS_THAN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 67

state 33

    (36) expression -> expression GREATER_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 68

state 34

    (37) expression -> expression LESS_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 69

state 35

    (52) statement -> WHILE condition . statement_list END_KW
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement_list                 shift and go to state 70
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 36

    (38) condition -> expression . EQUAL_EQUAL expression
    (39) condition -> expression . NOT_EQUAL expression
    (40) condition -> expression . GREATER_THAN expression
    (41) condition -> expression . LESS_THAN expression
    (42) condition -> expression . GREATER_EQUAL expression
    (43) condition -> expression . LESS_EQUAL expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    EQUAL_EQUAL     shift and go to state 71
    NOT_EQUAL       shift and go to state 72
    GREATER_THAN    shift and go to state 73
    LESS_THAN       shift and go to state 74
    GREATER_EQUAL   shift and go to state 75
    LESS_EQUAL      shift and go to state 76
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28


state 37

    (29) expression -> IDENTIFIER .

    EQUAL_EQUAL     reduce using rule 29 (expression -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (expression -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 29 (expression -> IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (expression -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 29 (expression -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 29 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 29 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 29 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 29 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 29 (expression -> IDENTIFIER .)
    MODULO          reduce using rule 29 (expression -> IDENTIFIER .)
    POWER           reduce using rule 29 (expression -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 29 (expression -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 29 (expression -> IDENTIFIER .)
    WHILE           reduce using rule 29 (expression -> IDENTIFIER .)
    PUTS            reduce using rule 29 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 29 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 29 (expression -> IDENTIFIER .)
    INTEGER         reduce using rule 29 (expression -> IDENTIFIER .)
    FLOAT           reduce using rule 29 (expression -> IDENTIFIER .)
    STRING          reduce using rule 29 (expression -> IDENTIFIER .)
    LBRACKET        reduce using rule 29 (expression -> IDENTIFIER .)
    LBRACE          reduce using rule 29 (expression -> IDENTIFIER .)
    IF              reduce using rule 29 (expression -> IDENTIFIER .)
    $end            reduce using rule 29 (expression -> IDENTIFIER .)
    END_KW          reduce using rule 29 (expression -> IDENTIFIER .)
    ELSIF           reduce using rule 29 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 29 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 29 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 29 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 29 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 29 (expression -> IDENTIFIER .)


state 38

    (9) print -> PUTS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 9 (print -> PUTS expression .)
    PUTS            reduce using rule 9 (print -> PUTS expression .)
    IDENTIFIER      reduce using rule 9 (print -> PUTS expression .)
    LPAREN          reduce using rule 9 (print -> PUTS expression .)
    INTEGER         reduce using rule 9 (print -> PUTS expression .)
    FLOAT           reduce using rule 9 (print -> PUTS expression .)
    STRING          reduce using rule 9 (print -> PUTS expression .)
    LBRACKET        reduce using rule 9 (print -> PUTS expression .)
    LBRACE          reduce using rule 9 (print -> PUTS expression .)
    IF              reduce using rule 9 (print -> PUTS expression .)
    $end            reduce using rule 9 (print -> PUTS expression .)
    END_KW          reduce using rule 9 (print -> PUTS expression .)
    ELSIF           reduce using rule 9 (print -> PUTS expression .)
    ELSE            reduce using rule 9 (print -> PUTS expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 9 (print -> PUTS expression .) ]


state 39

    (10) input -> IDENTIFIER ASSIGN . GETS DOT IDENTIFIER
    (11) assignment -> IDENTIFIER ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    GETS            shift and go to state 77
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 78

state 40

    (12) assignment -> IDENTIFIER PLUS_ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 79

state 41

    (13) assignment -> IDENTIFIER MINUS_ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 80

state 42

    (14) assignment -> IDENTIFIER TIMES_ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 81

state 43

    (15) assignment -> IDENTIFIER DIVIDE_ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 82

state 44

    (16) assignment -> IDENTIFIER OR_ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 83

state 45

    (17) assignment -> IDENTIFIER AND_ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 84

state 46

    (18) expression -> LPAREN expression . RPAREN
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    RPAREN          shift and go to state 85
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34


state 47

    (19) expression -> MINUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 19 (expression -> MINUS expression .)
    MINUS           reduce using rule 19 (expression -> MINUS expression .)
    TIMES           reduce using rule 19 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 19 (expression -> MINUS expression .)
    MODULO          reduce using rule 19 (expression -> MINUS expression .)
    POWER           reduce using rule 19 (expression -> MINUS expression .)
    LOGICAL_AND     reduce using rule 19 (expression -> MINUS expression .)
    LOGICAL_OR      reduce using rule 19 (expression -> MINUS expression .)
    EQUAL_EQUAL     reduce using rule 19 (expression -> MINUS expression .)
    NOT_EQUAL       reduce using rule 19 (expression -> MINUS expression .)
    GREATER_THAN    reduce using rule 19 (expression -> MINUS expression .)
    LESS_THAN       reduce using rule 19 (expression -> MINUS expression .)
    GREATER_EQUAL   reduce using rule 19 (expression -> MINUS expression .)
    LESS_EQUAL      reduce using rule 19 (expression -> MINUS expression .)
    WHILE           reduce using rule 19 (expression -> MINUS expression .)
    PUTS            reduce using rule 19 (expression -> MINUS expression .)
    IDENTIFIER      reduce using rule 19 (expression -> MINUS expression .)
    LPAREN          reduce using rule 19 (expression -> MINUS expression .)
    INTEGER         reduce using rule 19 (expression -> MINUS expression .)
    FLOAT           reduce using rule 19 (expression -> MINUS expression .)
    STRING          reduce using rule 19 (expression -> MINUS expression .)
    LBRACKET        reduce using rule 19 (expression -> MINUS expression .)
    LBRACE          reduce using rule 19 (expression -> MINUS expression .)
    IF              reduce using rule 19 (expression -> MINUS expression .)
    $end            reduce using rule 19 (expression -> MINUS expression .)
    END_KW          reduce using rule 19 (expression -> MINUS expression .)
    ELSIF           reduce using rule 19 (expression -> MINUS expression .)
    ELSE            reduce using rule 19 (expression -> MINUS expression .)
    RPAREN          reduce using rule 19 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 19 (expression -> MINUS expression .)
    COMMA           reduce using rule 19 (expression -> MINUS expression .)
    RBRACE          reduce using rule 19 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! MODULO          [ shift and go to state 25 ]
  ! POWER           [ shift and go to state 26 ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 48

    (53) expression -> LBRACKET elements . RBRACKET
    (54) elements -> elements . COMMA expression

    RBRACKET        shift and go to state 86
    COMMA           shift and go to state 87


state 49

    (55) elements -> expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    RBRACKET        reduce using rule 55 (elements -> expression .)
    COMMA           reduce using rule 55 (elements -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34


state 50

    (56) elements -> empty .

    RBRACKET        reduce using rule 56 (elements -> empty .)
    COMMA           reduce using rule 56 (elements -> empty .)


state 51

    (57) expression -> LBRACE hash_content . RBRACE

    RBRACE          shift and go to state 88


state 52

    (58) hash_content -> hash_pair_list .
    (61) hash_pair_list -> hash_pair_list . COMMA hash_pair

    RBRACE          reduce using rule 58 (hash_content -> hash_pair_list .)
    COMMA           shift and go to state 89


state 53

    (60) hash_pair_list -> hash_pair .

    COMMA           reduce using rule 60 (hash_pair_list -> hash_pair .)
    RBRACE          reduce using rule 60 (hash_pair_list -> hash_pair .)


state 54

    (62) hash_pair -> SYMBOL_COLON . ASSIGN expression

    ASSIGN          shift and go to state 90


state 55

    (44) if_statement -> IF condition . statement_list elsif_blocks_opt else_block_opt END_KW
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement_list                 shift and go to state 91
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 56

    (20) expression -> expression PLUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 20 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 20 (expression -> expression PLUS expression .)
    LOGICAL_AND     reduce using rule 20 (expression -> expression PLUS expression .)
    LOGICAL_OR      reduce using rule 20 (expression -> expression PLUS expression .)
    EQUAL_EQUAL     reduce using rule 20 (expression -> expression PLUS expression .)
    NOT_EQUAL       reduce using rule 20 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 20 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 20 (expression -> expression PLUS expression .)
    GREATER_EQUAL   reduce using rule 20 (expression -> expression PLUS expression .)
    LESS_EQUAL      reduce using rule 20 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 20 (expression -> expression PLUS expression .)
    PUTS            reduce using rule 20 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 20 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 20 (expression -> expression PLUS expression .)
    INTEGER         reduce using rule 20 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 20 (expression -> expression PLUS expression .)
    STRING          reduce using rule 20 (expression -> expression PLUS expression .)
    LBRACKET        reduce using rule 20 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 20 (expression -> expression PLUS expression .)
    IF              reduce using rule 20 (expression -> expression PLUS expression .)
    $end            reduce using rule 20 (expression -> expression PLUS expression .)
    END_KW          reduce using rule 20 (expression -> expression PLUS expression .)
    ELSIF           reduce using rule 20 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 20 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 20 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 20 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 20 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 20 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! TIMES           [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 57

    (21) expression -> expression MINUS expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 21 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 21 (expression -> expression MINUS expression .)
    LOGICAL_AND     reduce using rule 21 (expression -> expression MINUS expression .)
    LOGICAL_OR      reduce using rule 21 (expression -> expression MINUS expression .)
    EQUAL_EQUAL     reduce using rule 21 (expression -> expression MINUS expression .)
    NOT_EQUAL       reduce using rule 21 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 21 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 21 (expression -> expression MINUS expression .)
    GREATER_EQUAL   reduce using rule 21 (expression -> expression MINUS expression .)
    LESS_EQUAL      reduce using rule 21 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 21 (expression -> expression MINUS expression .)
    PUTS            reduce using rule 21 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 21 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 21 (expression -> expression MINUS expression .)
    INTEGER         reduce using rule 21 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 21 (expression -> expression MINUS expression .)
    STRING          reduce using rule 21 (expression -> expression MINUS expression .)
    LBRACKET        reduce using rule 21 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 21 (expression -> expression MINUS expression .)
    IF              reduce using rule 21 (expression -> expression MINUS expression .)
    $end            reduce using rule 21 (expression -> expression MINUS expression .)
    END_KW          reduce using rule 21 (expression -> expression MINUS expression .)
    ELSIF           reduce using rule 21 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 21 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 21 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 21 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 21 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! TIMES           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 58

    (22) expression -> expression TIMES expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 22 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 22 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 22 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 22 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 22 (expression -> expression TIMES expression .)
    LOGICAL_AND     reduce using rule 22 (expression -> expression TIMES expression .)
    LOGICAL_OR      reduce using rule 22 (expression -> expression TIMES expression .)
    EQUAL_EQUAL     reduce using rule 22 (expression -> expression TIMES expression .)
    NOT_EQUAL       reduce using rule 22 (expression -> expression TIMES expression .)
    GREATER_THAN    reduce using rule 22 (expression -> expression TIMES expression .)
    LESS_THAN       reduce using rule 22 (expression -> expression TIMES expression .)
    GREATER_EQUAL   reduce using rule 22 (expression -> expression TIMES expression .)
    LESS_EQUAL      reduce using rule 22 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 22 (expression -> expression TIMES expression .)
    PUTS            reduce using rule 22 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 22 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 22 (expression -> expression TIMES expression .)
    INTEGER         reduce using rule 22 (expression -> expression TIMES expression .)
    FLOAT           reduce using rule 22 (expression -> expression TIMES expression .)
    STRING          reduce using rule 22 (expression -> expression TIMES expression .)
    LBRACKET        reduce using rule 22 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 22 (expression -> expression TIMES expression .)
    IF              reduce using rule 22 (expression -> expression TIMES expression .)
    $end            reduce using rule 22 (expression -> expression TIMES expression .)
    END_KW          reduce using rule 22 (expression -> expression TIMES expression .)
    ELSIF           reduce using rule 22 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 22 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 22 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 22 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 22 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 22 (expression -> expression TIMES expression .)
    POWER           shift and go to state 26

  ! POWER           [ reduce using rule 22 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! MODULO          [ shift and go to state 25 ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 59

    (23) expression -> expression DIVIDE expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 23 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 23 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 23 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 23 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 23 (expression -> expression DIVIDE expression .)
    LOGICAL_AND     reduce using rule 23 (expression -> expression DIVIDE expression .)
    LOGICAL_OR      reduce using rule 23 (expression -> expression DIVIDE expression .)
    EQUAL_EQUAL     reduce using rule 23 (expression -> expression DIVIDE expression .)
    NOT_EQUAL       reduce using rule 23 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 23 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 23 (expression -> expression DIVIDE expression .)
    GREATER_EQUAL   reduce using rule 23 (expression -> expression DIVIDE expression .)
    LESS_EQUAL      reduce using rule 23 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 23 (expression -> expression DIVIDE expression .)
    PUTS            reduce using rule 23 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 23 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 23 (expression -> expression DIVIDE expression .)
    INTEGER         reduce using rule 23 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 23 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 23 (expression -> expression DIVIDE expression .)
    LBRACKET        reduce using rule 23 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 23 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 23 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 23 (expression -> expression DIVIDE expression .)
    END_KW          reduce using rule 23 (expression -> expression DIVIDE expression .)
    ELSIF           reduce using rule 23 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 23 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 23 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 23 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 23 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 23 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 26

  ! POWER           [ reduce using rule 23 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! MODULO          [ shift and go to state 25 ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 60

    (24) expression -> expression MODULO expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 24 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 24 (expression -> expression MODULO expression .)
    TIMES           reduce using rule 24 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 24 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 24 (expression -> expression MODULO expression .)
    LOGICAL_AND     reduce using rule 24 (expression -> expression MODULO expression .)
    LOGICAL_OR      reduce using rule 24 (expression -> expression MODULO expression .)
    EQUAL_EQUAL     reduce using rule 24 (expression -> expression MODULO expression .)
    NOT_EQUAL       reduce using rule 24 (expression -> expression MODULO expression .)
    GREATER_THAN    reduce using rule 24 (expression -> expression MODULO expression .)
    LESS_THAN       reduce using rule 24 (expression -> expression MODULO expression .)
    GREATER_EQUAL   reduce using rule 24 (expression -> expression MODULO expression .)
    LESS_EQUAL      reduce using rule 24 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 24 (expression -> expression MODULO expression .)
    PUTS            reduce using rule 24 (expression -> expression MODULO expression .)
    IDENTIFIER      reduce using rule 24 (expression -> expression MODULO expression .)
    LPAREN          reduce using rule 24 (expression -> expression MODULO expression .)
    INTEGER         reduce using rule 24 (expression -> expression MODULO expression .)
    FLOAT           reduce using rule 24 (expression -> expression MODULO expression .)
    STRING          reduce using rule 24 (expression -> expression MODULO expression .)
    LBRACKET        reduce using rule 24 (expression -> expression MODULO expression .)
    LBRACE          reduce using rule 24 (expression -> expression MODULO expression .)
    IF              reduce using rule 24 (expression -> expression MODULO expression .)
    $end            reduce using rule 24 (expression -> expression MODULO expression .)
    END_KW          reduce using rule 24 (expression -> expression MODULO expression .)
    ELSIF           reduce using rule 24 (expression -> expression MODULO expression .)
    ELSE            reduce using rule 24 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 24 (expression -> expression MODULO expression .)
    RBRACKET        reduce using rule 24 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 24 (expression -> expression MODULO expression .)
    RBRACE          reduce using rule 24 (expression -> expression MODULO expression .)
    POWER           shift and go to state 26

  ! POWER           [ reduce using rule 24 (expression -> expression MODULO expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! MODULO          [ shift and go to state 25 ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 61

    (25) expression -> expression POWER expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    PLUS            reduce using rule 25 (expression -> expression POWER expression .)
    MINUS           reduce using rule 25 (expression -> expression POWER expression .)
    TIMES           reduce using rule 25 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 25 (expression -> expression POWER expression .)
    MODULO          reduce using rule 25 (expression -> expression POWER expression .)
    LOGICAL_AND     reduce using rule 25 (expression -> expression POWER expression .)
    LOGICAL_OR      reduce using rule 25 (expression -> expression POWER expression .)
    EQUAL_EQUAL     reduce using rule 25 (expression -> expression POWER expression .)
    NOT_EQUAL       reduce using rule 25 (expression -> expression POWER expression .)
    GREATER_THAN    reduce using rule 25 (expression -> expression POWER expression .)
    LESS_THAN       reduce using rule 25 (expression -> expression POWER expression .)
    GREATER_EQUAL   reduce using rule 25 (expression -> expression POWER expression .)
    LESS_EQUAL      reduce using rule 25 (expression -> expression POWER expression .)
    WHILE           reduce using rule 25 (expression -> expression POWER expression .)
    PUTS            reduce using rule 25 (expression -> expression POWER expression .)
    IDENTIFIER      reduce using rule 25 (expression -> expression POWER expression .)
    LPAREN          reduce using rule 25 (expression -> expression POWER expression .)
    INTEGER         reduce using rule 25 (expression -> expression POWER expression .)
    FLOAT           reduce using rule 25 (expression -> expression POWER expression .)
    STRING          reduce using rule 25 (expression -> expression POWER expression .)
    LBRACKET        reduce using rule 25 (expression -> expression POWER expression .)
    LBRACE          reduce using rule 25 (expression -> expression POWER expression .)
    IF              reduce using rule 25 (expression -> expression POWER expression .)
    $end            reduce using rule 25 (expression -> expression POWER expression .)
    END_KW          reduce using rule 25 (expression -> expression POWER expression .)
    ELSIF           reduce using rule 25 (expression -> expression POWER expression .)
    ELSE            reduce using rule 25 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 25 (expression -> expression POWER expression .)
    RBRACKET        reduce using rule 25 (expression -> expression POWER expression .)
    COMMA           reduce using rule 25 (expression -> expression POWER expression .)
    RBRACE          reduce using rule 25 (expression -> expression POWER expression .)
    POWER           shift and go to state 26

  ! POWER           [ reduce using rule 25 (expression -> expression POWER expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! TIMES           [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! MODULO          [ shift and go to state 25 ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 62

    (30) expression -> expression LOGICAL_AND expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    LOGICAL_OR      reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    WHILE           reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    PUTS            reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    IDENTIFIER      reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    LPAREN          reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    INTEGER         reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    FLOAT           reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    STRING          reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    LBRACKET        reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    LBRACE          reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    IF              reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    $end            reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    END_KW          reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    ELSIF           reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    ELSE            reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    RPAREN          reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    RBRACKET        reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    COMMA           reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    RBRACE          reduce using rule 30 (expression -> expression LOGICAL_AND expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! PLUS            [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! MODULO          [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! POWER           [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! NOT_EQUAL       [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! GREATER_THAN    [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! LESS_THAN       [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! LESS_EQUAL      [ reduce using rule 30 (expression -> expression LOGICAL_AND expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]


state 63

    (31) expression -> expression LOGICAL_OR expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_OR      reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    WHILE           reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    PUTS            reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    IDENTIFIER      reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    LPAREN          reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    INTEGER         reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    FLOAT           reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    STRING          reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    LBRACKET        reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    LBRACE          reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    IF              reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    $end            reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    END_KW          reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    ELSIF           reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    ELSE            reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    RPAREN          reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    RBRACKET        reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    COMMA           reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    RBRACE          reduce using rule 31 (expression -> expression LOGICAL_OR expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! PLUS            [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! MODULO          [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! POWER           [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! LOGICAL_AND     [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! EQUAL_EQUAL     [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! NOT_EQUAL       [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! GREATER_THAN    [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! LESS_THAN       [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! GREATER_EQUAL   [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! LESS_EQUAL      [ reduce using rule 31 (expression -> expression LOGICAL_OR expression .) ]
  ! LOGICAL_OR      [ shift and go to state 28 ]


state 64

    (32) expression -> expression EQUAL_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LOGICAL_OR      reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    GREATER_THAN    reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LESS_THAN       reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    WHILE           reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    PUTS            reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    IDENTIFIER      reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LPAREN          reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    INTEGER         reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    FLOAT           reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    STRING          reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LBRACKET        reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LBRACE          reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    IF              reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    $end            reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    END_KW          reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    ELSIF           reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    ELSE            reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    RPAREN          reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    RBRACKET        reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    RBRACE          reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! POWER           [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 65

    (33) expression -> expression NOT_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LOGICAL_OR      reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    PUTS            reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    IDENTIFIER      reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LPAREN          reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    FLOAT           reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LBRACKET        reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LBRACE          reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    IF              reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    $end            reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    END_KW          reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    ELSIF           reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    ELSE            reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    RBRACKET        reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    COMMA           reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    RBRACE          reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! POWER           [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 66

    (34) expression -> expression GREATER_THAN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LOGICAL_OR      reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    EQUAL_EQUAL     reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    WHILE           reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    PUTS            reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    IDENTIFIER      reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LPAREN          reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    INTEGER         reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    FLOAT           reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    STRING          reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LBRACKET        reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LBRACE          reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    IF              reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    $end            reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    END_KW          reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    ELSIF           reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    ELSE            reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    RBRACKET        reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    COMMA           reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    RBRACE          reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! MODULO          [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! POWER           [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 67

    (35) expression -> expression LESS_THAN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LOGICAL_OR      reduce using rule 35 (expression -> expression LESS_THAN expression .)
    EQUAL_EQUAL     reduce using rule 35 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 35 (expression -> expression LESS_THAN expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression LESS_THAN expression .)
    WHILE           reduce using rule 35 (expression -> expression LESS_THAN expression .)
    PUTS            reduce using rule 35 (expression -> expression LESS_THAN expression .)
    IDENTIFIER      reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LPAREN          reduce using rule 35 (expression -> expression LESS_THAN expression .)
    INTEGER         reduce using rule 35 (expression -> expression LESS_THAN expression .)
    FLOAT           reduce using rule 35 (expression -> expression LESS_THAN expression .)
    STRING          reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LBRACKET        reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LBRACE          reduce using rule 35 (expression -> expression LESS_THAN expression .)
    IF              reduce using rule 35 (expression -> expression LESS_THAN expression .)
    $end            reduce using rule 35 (expression -> expression LESS_THAN expression .)
    END_KW          reduce using rule 35 (expression -> expression LESS_THAN expression .)
    ELSIF           reduce using rule 35 (expression -> expression LESS_THAN expression .)
    ELSE            reduce using rule 35 (expression -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 35 (expression -> expression LESS_THAN expression .)
    RBRACKET        reduce using rule 35 (expression -> expression LESS_THAN expression .)
    COMMA           reduce using rule 35 (expression -> expression LESS_THAN expression .)
    RBRACE          reduce using rule 35 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! MODULO          [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! POWER           [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 68

    (36) expression -> expression GREATER_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LOGICAL_OR      reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER_THAN    reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LESS_THAN       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    PUTS            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    IDENTIFIER      reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LPAREN          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    FLOAT           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LBRACKET        reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LBRACE          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    $end            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    END_KW          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    ELSIF           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    ELSE            reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    RBRACKET        reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    COMMA           reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    RBRACE          reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! POWER           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 69

    (37) expression -> expression LESS_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    LOGICAL_AND     reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LOGICAL_OR      reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    GREATER_THAN    reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LESS_THAN       reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    PUTS            reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    IDENTIFIER      reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LPAREN          reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    FLOAT           reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LBRACKET        reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LBRACE          reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    IF              reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    $end            reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    END_KW          reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    ELSIF           reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    ELSE            reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    RBRACKET        reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    COMMA           reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    RBRACE          reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! POWER           [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 70

    (52) statement -> WHILE condition statement_list . END_KW
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    END_KW          shift and go to state 92
    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement                      shift and go to state 20
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 71

    (38) condition -> expression EQUAL_EQUAL . expression
    (32) expression -> expression EQUAL_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 93

state 72

    (39) condition -> expression NOT_EQUAL . expression
    (33) expression -> expression NOT_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 94

state 73

    (40) condition -> expression GREATER_THAN . expression
    (34) expression -> expression GREATER_THAN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 95

state 74

    (41) condition -> expression LESS_THAN . expression
    (35) expression -> expression LESS_THAN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 96

state 75

    (42) condition -> expression GREATER_EQUAL . expression
    (36) expression -> expression GREATER_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 97

state 76

    (43) condition -> expression LESS_EQUAL . expression
    (37) expression -> expression LESS_EQUAL . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 98

state 77

    (10) input -> IDENTIFIER ASSIGN GETS . DOT IDENTIFIER

    DOT             shift and go to state 99


state 78

    (11) assignment -> IDENTIFIER ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    PUTS            reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    IDENTIFIER      reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    LPAREN          reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    INTEGER         reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    FLOAT           reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    STRING          reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    LBRACKET        reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    LBRACE          reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    IF              reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    $end            reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    END_KW          reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    ELSIF           reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    ELSE            reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 11 (assignment -> IDENTIFIER ASSIGN expression .) ]


state 79

    (12) assignment -> IDENTIFIER PLUS_ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    PUTS            reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    IDENTIFIER      reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    LPAREN          reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    INTEGER         reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    FLOAT           reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    STRING          reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    LBRACKET        reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    LBRACE          reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    IF              reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    $end            reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    END_KW          reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    ELSIF           reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    ELSE            reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 12 (assignment -> IDENTIFIER PLUS_ASSIGN expression .) ]


state 80

    (13) assignment -> IDENTIFIER MINUS_ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    PUTS            reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    IDENTIFIER      reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    LPAREN          reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    INTEGER         reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    FLOAT           reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    STRING          reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    LBRACKET        reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    LBRACE          reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    IF              reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    $end            reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    END_KW          reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    ELSIF           reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    ELSE            reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 13 (assignment -> IDENTIFIER MINUS_ASSIGN expression .) ]


state 81

    (14) assignment -> IDENTIFIER TIMES_ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    PUTS            reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    IDENTIFIER      reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    LPAREN          reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    INTEGER         reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    FLOAT           reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    STRING          reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    LBRACKET        reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    LBRACE          reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    IF              reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    $end            reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    END_KW          reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    ELSIF           reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    ELSE            reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 14 (assignment -> IDENTIFIER TIMES_ASSIGN expression .) ]


state 82

    (15) assignment -> IDENTIFIER DIVIDE_ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    PUTS            reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    IDENTIFIER      reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    LPAREN          reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    INTEGER         reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    FLOAT           reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    STRING          reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    LBRACKET        reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    LBRACE          reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    IF              reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    $end            reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    END_KW          reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    ELSIF           reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    ELSE            reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 15 (assignment -> IDENTIFIER DIVIDE_ASSIGN expression .) ]


state 83

    (16) assignment -> IDENTIFIER OR_ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    PUTS            reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    IDENTIFIER      reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    LPAREN          reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    INTEGER         reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    FLOAT           reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    STRING          reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    LBRACKET        reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    LBRACE          reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    IF              reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    $end            reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    END_KW          reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    ELSIF           reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    ELSE            reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 16 (assignment -> IDENTIFIER OR_ASSIGN expression .) ]


state 84

    (17) assignment -> IDENTIFIER AND_ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    WHILE           reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    PUTS            reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    IDENTIFIER      reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    LPAREN          reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    INTEGER         reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    FLOAT           reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    STRING          reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    LBRACKET        reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    LBRACE          reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    IF              reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    $end            reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    END_KW          reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    ELSIF           reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    ELSE            reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34

  ! MINUS           [ reduce using rule 17 (assignment -> IDENTIFIER AND_ASSIGN expression .) ]


state 85

    (18) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LOGICAL_AND     reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LOGICAL_OR      reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    EQUAL_EQUAL     reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    NOT_EQUAL       reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    GREATER_EQUAL   reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LESS_EQUAL      reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    PUTS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    INTEGER         reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    END_KW          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    ELSIF           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)


state 86

    (53) expression -> LBRACKET elements RBRACKET .

    PLUS            reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    MINUS           reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    TIMES           reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    DIVIDE          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    MODULO          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    POWER           reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    LOGICAL_AND     reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    LOGICAL_OR      reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    EQUAL_EQUAL     reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    NOT_EQUAL       reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    GREATER_THAN    reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    LESS_THAN       reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    GREATER_EQUAL   reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    LESS_EQUAL      reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    WHILE           reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    PUTS            reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    IDENTIFIER      reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    LPAREN          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    INTEGER         reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    FLOAT           reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    STRING          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    LBRACKET        reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    LBRACE          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    IF              reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    $end            reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    END_KW          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    ELSIF           reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    ELSE            reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    RPAREN          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    RBRACKET        reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    COMMA           reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)
    RBRACE          reduce using rule 53 (expression -> LBRACKET elements RBRACKET .)


state 87

    (54) elements -> elements COMMA . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 100

state 88

    (57) expression -> LBRACE hash_content RBRACE .

    PLUS            reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    MINUS           reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    TIMES           reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    DIVIDE          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    MODULO          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    POWER           reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    LOGICAL_AND     reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    LOGICAL_OR      reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    EQUAL_EQUAL     reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    NOT_EQUAL       reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    GREATER_THAN    reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    LESS_THAN       reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    GREATER_EQUAL   reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    LESS_EQUAL      reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    WHILE           reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    PUTS            reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    IDENTIFIER      reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    LPAREN          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    INTEGER         reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    FLOAT           reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    STRING          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    LBRACKET        reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    LBRACE          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    IF              reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    $end            reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    END_KW          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    ELSIF           reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    ELSE            reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    RPAREN          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    RBRACKET        reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    COMMA           reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)
    RBRACE          reduce using rule 57 (expression -> LBRACE hash_content RBRACE .)


state 89

    (61) hash_pair_list -> hash_pair_list COMMA . hash_pair
    (62) hash_pair -> . SYMBOL_COLON ASSIGN expression

    SYMBOL_COLON    shift and go to state 54

    hash_pair                      shift and go to state 101

state 90

    (62) hash_pair -> SYMBOL_COLON ASSIGN . expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    expression                     shift and go to state 102

state 91

    (44) if_statement -> IF condition statement_list . elsif_blocks_opt else_block_opt END_KW
    (2) statement_list -> statement_list . statement
    (45) elsif_blocks_opt -> . elsif_blocks
    (46) elsif_blocks_opt -> . empty
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (47) elsif_blocks -> . elsif_blocks ELSIF condition statement_list
    (48) elsif_blocks -> . ELSIF condition statement_list
    (51) empty -> .
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    WHILE           shift and go to state 9
    ELSIF           shift and go to state 106
    ELSE            reduce using rule 51 (empty -> .)
    END_KW          reduce using rule 51 (empty -> .)
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    elsif_blocks_opt               shift and go to state 103
    statement                      shift and go to state 20
    elsif_blocks                   shift and go to state 104
    empty                          shift and go to state 105
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 92

    (52) statement -> WHILE condition statement_list END_KW .

    WHILE           reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    PUTS            reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    IDENTIFIER      reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    LPAREN          reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    MINUS           reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    INTEGER         reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    FLOAT           reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    STRING          reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    LBRACKET        reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    LBRACE          reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    IF              reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    $end            reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    END_KW          reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    ELSIF           reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)
    ELSE            reduce using rule 52 (statement -> WHILE condition statement_list END_KW .)


state 93

    (38) condition -> expression EQUAL_EQUAL expression .
    (32) expression -> expression EQUAL_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! reduce/reduce conflict for MINUS resolved using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    WHILE           reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    PUTS            reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    IDENTIFIER      reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    LPAREN          reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    INTEGER         reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    FLOAT           reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    STRING          reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    LBRACKET        reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    LBRACE          reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    IF              reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    NOT_EQUAL       reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    GREATER_THAN    reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LESS_THAN       reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LESS_EQUAL      reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LOGICAL_AND     reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    LOGICAL_OR      reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! MINUS           [ reduce using rule 38 (condition -> expression EQUAL_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! POWER           [ reduce using rule 32 (expression -> expression EQUAL_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 94

    (39) condition -> expression NOT_EQUAL expression .
    (33) expression -> expression NOT_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! reduce/reduce conflict for MINUS resolved using rule 33 (expression -> expression NOT_EQUAL expression .)
    WHILE           reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    PUTS            reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    IDENTIFIER      reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    LPAREN          reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    INTEGER         reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    FLOAT           reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    STRING          reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    LBRACKET        reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    LBRACE          reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    IF              reduce using rule 39 (condition -> expression NOT_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    NOT_EQUAL       reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    GREATER_THAN    reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LESS_THAN       reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LESS_EQUAL      reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LOGICAL_AND     reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    LOGICAL_OR      reduce using rule 33 (expression -> expression NOT_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! MINUS           [ reduce using rule 39 (condition -> expression NOT_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! POWER           [ reduce using rule 33 (expression -> expression NOT_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 95

    (40) condition -> expression GREATER_THAN expression .
    (34) expression -> expression GREATER_THAN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! reduce/reduce conflict for MINUS resolved using rule 34 (expression -> expression GREATER_THAN expression .)
    WHILE           reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    PUTS            reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    IDENTIFIER      reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    LPAREN          reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    INTEGER         reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    FLOAT           reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    STRING          reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    LBRACKET        reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    LBRACE          reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    IF              reduce using rule 40 (condition -> expression GREATER_THAN expression .)
    EQUAL_EQUAL     reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    NOT_EQUAL       reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    GREATER_THAN    reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LESS_THAN       reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    GREATER_EQUAL   reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LESS_EQUAL      reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LOGICAL_AND     reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    LOGICAL_OR      reduce using rule 34 (expression -> expression GREATER_THAN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! MINUS           [ reduce using rule 40 (condition -> expression GREATER_THAN expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! MODULO          [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! POWER           [ reduce using rule 34 (expression -> expression GREATER_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 96

    (41) condition -> expression LESS_THAN expression .
    (35) expression -> expression LESS_THAN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! reduce/reduce conflict for MINUS resolved using rule 35 (expression -> expression LESS_THAN expression .)
    WHILE           reduce using rule 41 (condition -> expression LESS_THAN expression .)
    PUTS            reduce using rule 41 (condition -> expression LESS_THAN expression .)
    IDENTIFIER      reduce using rule 41 (condition -> expression LESS_THAN expression .)
    LPAREN          reduce using rule 41 (condition -> expression LESS_THAN expression .)
    INTEGER         reduce using rule 41 (condition -> expression LESS_THAN expression .)
    FLOAT           reduce using rule 41 (condition -> expression LESS_THAN expression .)
    STRING          reduce using rule 41 (condition -> expression LESS_THAN expression .)
    LBRACKET        reduce using rule 41 (condition -> expression LESS_THAN expression .)
    LBRACE          reduce using rule 41 (condition -> expression LESS_THAN expression .)
    IF              reduce using rule 41 (condition -> expression LESS_THAN expression .)
    EQUAL_EQUAL     reduce using rule 35 (expression -> expression LESS_THAN expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> expression LESS_THAN expression .)
    GREATER_THAN    reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LESS_THAN       reduce using rule 35 (expression -> expression LESS_THAN expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LOGICAL_AND     reduce using rule 35 (expression -> expression LESS_THAN expression .)
    LOGICAL_OR      reduce using rule 35 (expression -> expression LESS_THAN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! MINUS           [ reduce using rule 41 (condition -> expression LESS_THAN expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! MODULO          [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! POWER           [ reduce using rule 35 (expression -> expression LESS_THAN expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 97

    (42) condition -> expression GREATER_EQUAL expression .
    (36) expression -> expression GREATER_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! reduce/reduce conflict for MINUS resolved using rule 36 (expression -> expression GREATER_EQUAL expression .)
    WHILE           reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    PUTS            reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    IDENTIFIER      reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    LPAREN          reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    INTEGER         reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    FLOAT           reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    STRING          reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    LBRACKET        reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    LBRACE          reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    IF              reduce using rule 42 (condition -> expression GREATER_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER_THAN    reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LESS_THAN       reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LOGICAL_AND     reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    LOGICAL_OR      reduce using rule 36 (expression -> expression GREATER_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! MINUS           [ reduce using rule 42 (condition -> expression GREATER_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! POWER           [ reduce using rule 36 (expression -> expression GREATER_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 98

    (43) condition -> expression LESS_EQUAL expression .
    (37) expression -> expression LESS_EQUAL expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

  ! reduce/reduce conflict for MINUS resolved using rule 37 (expression -> expression LESS_EQUAL expression .)
    WHILE           reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    PUTS            reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    IDENTIFIER      reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    LPAREN          reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    INTEGER         reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    FLOAT           reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    STRING          reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    LBRACKET        reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    LBRACE          reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    IF              reduce using rule 43 (condition -> expression LESS_EQUAL expression .)
    EQUAL_EQUAL     reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    GREATER_THAN    reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LESS_THAN       reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LOGICAL_AND     reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    LOGICAL_OR      reduce using rule 37 (expression -> expression LESS_EQUAL expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26

  ! MINUS           [ reduce using rule 43 (condition -> expression LESS_EQUAL expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! MODULO          [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! POWER           [ reduce using rule 37 (expression -> expression LESS_EQUAL expression .) ]
  ! LOGICAL_AND     [ shift and go to state 27 ]
  ! LOGICAL_OR      [ shift and go to state 28 ]
  ! EQUAL_EQUAL     [ shift and go to state 29 ]
  ! NOT_EQUAL       [ shift and go to state 30 ]
  ! GREATER_THAN    [ shift and go to state 31 ]
  ! LESS_THAN       [ shift and go to state 32 ]
  ! GREATER_EQUAL   [ shift and go to state 33 ]
  ! LESS_EQUAL      [ shift and go to state 34 ]


state 99

    (10) input -> IDENTIFIER ASSIGN GETS DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 107


state 100

    (54) elements -> elements COMMA expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    RBRACKET        reduce using rule 54 (elements -> elements COMMA expression .)
    COMMA           reduce using rule 54 (elements -> elements COMMA expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34


state 101

    (61) hash_pair_list -> hash_pair_list COMMA hash_pair .

    COMMA           reduce using rule 61 (hash_pair_list -> hash_pair_list COMMA hash_pair .)
    RBRACE          reduce using rule 61 (hash_pair_list -> hash_pair_list COMMA hash_pair .)


state 102

    (62) hash_pair -> SYMBOL_COLON ASSIGN expression .
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MODULO expression
    (25) expression -> expression . POWER expression
    (30) expression -> expression . LOGICAL_AND expression
    (31) expression -> expression . LOGICAL_OR expression
    (32) expression -> expression . EQUAL_EQUAL expression
    (33) expression -> expression . NOT_EQUAL expression
    (34) expression -> expression . GREATER_THAN expression
    (35) expression -> expression . LESS_THAN expression
    (36) expression -> expression . GREATER_EQUAL expression
    (37) expression -> expression . LESS_EQUAL expression

    COMMA           reduce using rule 62 (hash_pair -> SYMBOL_COLON ASSIGN expression .)
    RBRACE          reduce using rule 62 (hash_pair -> SYMBOL_COLON ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 24
    MODULO          shift and go to state 25
    POWER           shift and go to state 26
    LOGICAL_AND     shift and go to state 27
    LOGICAL_OR      shift and go to state 28
    EQUAL_EQUAL     shift and go to state 29
    NOT_EQUAL       shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_EQUAL   shift and go to state 33
    LESS_EQUAL      shift and go to state 34


state 103

    (44) if_statement -> IF condition statement_list elsif_blocks_opt . else_block_opt END_KW
    (49) else_block_opt -> . ELSE statement_list
    (50) else_block_opt -> . empty
    (51) empty -> .

    ELSE            shift and go to state 109
    END_KW          reduce using rule 51 (empty -> .)

    else_block_opt                 shift and go to state 108
    empty                          shift and go to state 110

state 104

    (45) elsif_blocks_opt -> elsif_blocks .
    (47) elsif_blocks -> elsif_blocks . ELSIF condition statement_list

    ELSE            reduce using rule 45 (elsif_blocks_opt -> elsif_blocks .)
    END_KW          reduce using rule 45 (elsif_blocks_opt -> elsif_blocks .)
    ELSIF           shift and go to state 111


state 105

    (46) elsif_blocks_opt -> empty .

    ELSE            reduce using rule 46 (elsif_blocks_opt -> empty .)
    END_KW          reduce using rule 46 (elsif_blocks_opt -> empty .)


state 106

    (48) elsif_blocks -> ELSIF . condition statement_list
    (38) condition -> . expression EQUAL_EQUAL expression
    (39) condition -> . expression NOT_EQUAL expression
    (40) condition -> . expression GREATER_THAN expression
    (41) condition -> . expression LESS_THAN expression
    (42) condition -> . expression GREATER_EQUAL expression
    (43) condition -> . expression LESS_EQUAL expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    condition                      shift and go to state 112
    expression                     shift and go to state 36

state 107

    (10) input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .

    WHILE           reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    PUTS            reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    IDENTIFIER      reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    LPAREN          reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    MINUS           reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    INTEGER         reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    FLOAT           reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    STRING          reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    LBRACKET        reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    LBRACE          reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    IF              reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    $end            reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    END_KW          reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    ELSIF           reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)
    ELSE            reduce using rule 10 (input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER .)


state 108

    (44) if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt . END_KW

    END_KW          shift and go to state 113


state 109

    (49) else_block_opt -> ELSE . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement_list                 shift and go to state 114
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 110

    (50) else_block_opt -> empty .

    END_KW          reduce using rule 50 (else_block_opt -> empty .)


state 111

    (47) elsif_blocks -> elsif_blocks ELSIF . condition statement_list
    (38) condition -> . expression EQUAL_EQUAL expression
    (39) condition -> . expression NOT_EQUAL expression
    (40) condition -> . expression GREATER_THAN expression
    (41) condition -> . expression LESS_THAN expression
    (42) condition -> . expression GREATER_EQUAL expression
    (43) condition -> . expression LESS_EQUAL expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE

    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    IDENTIFIER      shift and go to state 37
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18

    condition                      shift and go to state 115
    expression                     shift and go to state 36

state 112

    (48) elsif_blocks -> ELSIF condition . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement_list                 shift and go to state 116
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 113

    (44) if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .

    WHILE           reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    PUTS            reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    IDENTIFIER      reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    LPAREN          reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    MINUS           reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    INTEGER         reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    FLOAT           reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    STRING          reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    LBRACKET        reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    LBRACE          reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    IF              reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    $end            reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    END_KW          reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    ELSIF           reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)
    ELSE            reduce using rule 44 (if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW .)


state 114

    (49) else_block_opt -> ELSE statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    END_KW          reduce using rule 49 (else_block_opt -> ELSE statement_list .)
    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement                      shift and go to state 20
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 115

    (47) elsif_blocks -> elsif_blocks ELSIF condition . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement_list                 shift and go to state 117
    statement                      shift and go to state 3
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 116

    (48) elsif_blocks -> ELSIF condition statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    ELSIF           reduce using rule 48 (elsif_blocks -> ELSIF condition statement_list .)
    ELSE            reduce using rule 48 (elsif_blocks -> ELSIF condition statement_list .)
    END_KW          reduce using rule 48 (elsif_blocks -> ELSIF condition statement_list .)
    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement                      shift and go to state 20
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8

state 117

    (47) elsif_blocks -> elsif_blocks ELSIF condition statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . print
    (5) statement -> . input
    (6) statement -> . assignment
    (7) statement -> . expression
    (8) statement -> . if_statement
    (52) statement -> . WHILE condition statement_list END_KW
    (9) print -> . PUTS expression
    (10) input -> . IDENTIFIER ASSIGN GETS DOT IDENTIFIER
    (11) assignment -> . IDENTIFIER ASSIGN expression
    (12) assignment -> . IDENTIFIER PLUS_ASSIGN expression
    (13) assignment -> . IDENTIFIER MINUS_ASSIGN expression
    (14) assignment -> . IDENTIFIER TIMES_ASSIGN expression
    (15) assignment -> . IDENTIFIER DIVIDE_ASSIGN expression
    (16) assignment -> . IDENTIFIER OR_ASSIGN expression
    (17) assignment -> . IDENTIFIER AND_ASSIGN expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . MINUS expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MODULO expression
    (25) expression -> . expression POWER expression
    (26) expression -> . INTEGER
    (27) expression -> . FLOAT
    (28) expression -> . STRING
    (29) expression -> . IDENTIFIER
    (30) expression -> . expression LOGICAL_AND expression
    (31) expression -> . expression LOGICAL_OR expression
    (32) expression -> . expression EQUAL_EQUAL expression
    (33) expression -> . expression NOT_EQUAL expression
    (34) expression -> . expression GREATER_THAN expression
    (35) expression -> . expression LESS_THAN expression
    (36) expression -> . expression GREATER_EQUAL expression
    (37) expression -> . expression LESS_EQUAL expression
    (53) expression -> . LBRACKET elements RBRACKET
    (57) expression -> . LBRACE hash_content RBRACE
    (44) if_statement -> . IF condition statement_list elsif_blocks_opt else_block_opt END_KW

    ELSIF           reduce using rule 47 (elsif_blocks -> elsif_blocks ELSIF condition statement_list .)
    ELSE            reduce using rule 47 (elsif_blocks -> elsif_blocks ELSIF condition statement_list .)
    END_KW          reduce using rule 47 (elsif_blocks -> elsif_blocks ELSIF condition statement_list .)
    WHILE           shift and go to state 9
    PUTS            shift and go to state 10
    IDENTIFIER      shift and go to state 11
    LPAREN          shift and go to state 12
    MINUS           shift and go to state 13
    INTEGER         shift and go to state 14
    FLOAT           shift and go to state 15
    STRING          shift and go to state 16
    LBRACKET        shift and go to state 17
    LBRACE          shift and go to state 18
    IF              shift and go to state 19

    statement                      shift and go to state 20
    print                          shift and go to state 4
    input                          shift and go to state 5
    assignment                     shift and go to state 6
    expression                     shift and go to state 7
    if_statement                   shift and go to state 8
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 7 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: reduce/reduce conflict in state 93 resolved using rule (expression -> expression EQUAL_EQUAL expression)
WARNING: rejected rule (condition -> expression EQUAL_EQUAL expression) in state 93
WARNING: reduce/reduce conflict in state 94 resolved using rule (expression -> expression NOT_EQUAL expression)
WARNING: rejected rule (condition -> expression NOT_EQUAL expression) in state 94
WARNING: reduce/reduce conflict in state 95 resolved using rule (expression -> expression GREATER_THAN expression)
WARNING: rejected rule (condition -> expression GREATER_THAN expression) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (expression -> expression LESS_THAN expression)
WARNING: rejected rule (condition -> expression LESS_THAN expression) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (expression -> expression GREATER_EQUAL expression)
WARNING: rejected rule (condition -> expression GREATER_EQUAL expression) in state 97
WARNING: reduce/reduce conflict in state 98 resolved using rule (expression -> expression LESS_EQUAL expression)
WARNING: rejected rule (condition -> expression LESS_EQUAL expression) in state 98
