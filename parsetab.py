
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLOGICAL_ORleftLOGICAL_ANDleftEQUAL_EQUALNOT_EQUALGREATER_THANLESS_THANGREATER_EQUALLESS_EQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightPOWERrightUMINUSALIAS AMPERSAND AND AND_ASSIGN ASSIGN ATTR_ACCESSOR ATTR_READER ATTR_WRITER BEGIN_KW BREAK CASE CLASS CLASS_VAR COMMA CONSTANT DEF DEFINEDQ DIVIDE DIVIDE_ASSIGN DO DOT ELSE ELSIF END_KW ENSURE EQUAL_EQUAL FALSE FLOAT FOR GETS GLOBAL_VAR GREATER_EQUAL GREATER_THAN IDENTIFIER IF IN INSTANCE_VAR INTEGER LBRACE LBRACKET LESS_EQUAL LESS_THAN LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MATCH_REGEX MINUS MINUS_ASSIGN MODULE MODULO NEW NEXT NIL NOT NOT_EQUAL NOT_MATCH_REGEX OR OR_ASSIGN PLUS PLUS_ASSIGN POWER PUTS RANGE_EXCLUSIVE RANGE_INCLUSIVE RBRACE RBRACKET REDO RESCUE RETRY RETURN RPAREN SELF SEMICOLON STRING SUPER SYMBOL_COLON TERNARY_COLON TERNARY_Q THEN TIMES TIMES_ASSIGN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELDprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : print\n                 | input\n                 | assignment\n                 | expression\n                 | if_statement\n                 | function_def\n                 | while_statement\n                 | unless_statement \n                 | case_statement\n                 | class_defprint : PUTS expressioninput : IDENTIFIER ASSIGN GETS DOT IDENTIFIERassignment : IDENTIFIER ASSIGN expressionassignment : IDENTIFIER PLUS_ASSIGN expression\n                  | IDENTIFIER MINUS_ASSIGN expression\n                  | IDENTIFIER TIMES_ASSIGN expression\n                  | IDENTIFIER DIVIDE_ASSIGN expressionassignment : IDENTIFIER OR_ASSIGN expression\n                  | IDENTIFIER AND_ASSIGN expressionexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression TIMES expression\n                      | expression DIVIDE expression\n                      | expression MODULO expression\n                      | expression POWER expressionexpression : INTEGER\n                      | FLOATexpression : STRINGexpression : SYMBOL_COLONexpression : IDENTIFIERexpression : INSTANCE_VARexpression : expression LOGICAL_AND expression\n                  | expression LOGICAL_OR expression\n                  | expression EQUAL_EQUAL expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER_THAN expression\n                  | expression LESS_THAN expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expressionif_statement : IF expression statement_list elsif_blocks_opt else_block_opt END_KWunless_statement : UNLESS expression statement_list else_block_opt END_KWcase_statement : CASE expression when_blocks else_block_opt END_KWwhen_blocks : when_blocks when_block\n                   | when_blockwhen_block : WHEN expression statement_listelsif_blocks_opt : elsif_blocks\n                        | emptyelsif_blocks : ELSIF expression statement_list elsif_blocks\n                    | ELSIF expression statement_listelse_block_opt : ELSE statement_list\n                      | emptyempty :function_def : DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KWfunction_def : DEF IDENTIFIER param_list_opt statement_list END_KWfunction_def : DEF SELF DOT IDENTIFIER statement_list END_KW\n                    | DEF CONSTANT DOT IDENTIFIER statement_list END_KWstatement : YIELDclass_def : CLASS CONSTANT statement_list END_KWexpression : CONSTANT DOT NEW expression_list_optexpression_list_opt : expression_list\n                           | emptyexpression_list : expression\n                       | expression_list COMMA expressionclass_def : CLASS CONSTANT LESS_THAN CONSTANT statement_list END_KWstatement : ATTR_ACCESSOR symbol_list\n                 | ATTR_READER symbol_list\n                 | ATTR_WRITER symbol_listsymbol_list : SYMBOL_COLON\n                   | symbol_list COMMA SYMBOL_COLONparam : IDENTIFIER\n             | IDENTIFIER ASSIGN expressionparam_list_opt : param_list\n                      | emptyparam_list : param\n                  | param_list COMMA paramwhile_statement : WHILE expression statement_list END_KWexpression : LBRACKET elements RBRACKETelements : elements COMMA expression\n                | expression\n                | emptyexpression : LBRACE hash_content RBRACEhash_content : hash_pair_list\n                    | hash_pair_list : hash_pair\n                      | hash_pair_list COMMA hash_pairhash_pair : SYMBOL_COLON ASSIGN expressionexpression : expression RANGE_INCLUSIVE expression\n                  | expression RANGE_EXCLUSIVE expression'
    
_lr_action_items = {'YIELD':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,14,-57,14,14,14,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,14,-75,14,-77,-78,-79,14,14,14,-74,-64,-65,-66,-67,-24,14,14,14,-81,14,14,-63,14,-15,14,-76,14,-59,-80,14,14,-46,14,-47,14,14,-68,-45,14,14,-60,-61,-69,-58,]),'ATTR_ACCESSOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,15,-57,15,15,15,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,15,-75,15,-77,-78,-79,15,15,15,-74,-64,-65,-66,-67,-24,15,15,15,-81,15,15,-63,15,-15,15,-76,15,-59,-80,15,15,-46,15,-47,15,15,-68,-45,15,15,-60,-61,-69,-58,]),'ATTR_READER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,16,-57,16,16,16,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,16,-75,16,-77,-78,-79,16,16,16,-74,-64,-65,-66,-67,-24,16,16,16,-81,16,16,-63,16,-15,16,-76,16,-59,-80,16,16,-46,16,-47,16,16,-68,-45,16,16,-60,-61,-69,-58,]),'ATTR_WRITER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,17,-57,17,17,17,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,17,-75,17,-77,-78,-79,17,17,17,-74,-64,-65,-66,-67,-24,17,17,17,-81,17,17,-63,17,-15,17,-76,17,-59,-80,17,17,-46,17,-47,17,17,-68,-45,17,17,-60,-61,-69,-58,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,18,-57,18,18,18,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,18,-75,18,-77,-78,-79,18,18,18,-74,-64,-65,-66,-67,-24,18,18,18,-81,18,18,-63,18,-15,18,-76,18,-59,-80,18,18,-46,18,-47,18,18,-68,-45,18,18,-60,-61,-69,-58,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,130,131,133,134,135,136,137,138,145,146,147,149,150,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,58,-35,58,58,-31,-32,-33,-34,-36,58,58,77,58,58,58,-2,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-70,-73,-71,-72,-14,-35,58,58,58,58,58,58,58,-24,19,118,19,19,19,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,58,-82,58,-86,58,19,58,-75,118,19,-77,-78,-79,151,152,19,19,58,19,-74,162,-64,-65,-66,-67,58,-24,58,19,118,19,19,-81,19,19,-63,19,-15,58,19,-76,19,-59,-80,19,19,-46,19,-47,19,19,-68,-45,19,19,-60,-61,-69,-58,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,20,-35,20,20,-31,-32,-33,-34,-36,20,20,20,20,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-70,-73,-71,-72,-14,-35,20,20,20,20,20,20,20,-24,20,119,20,20,20,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,20,-82,20,-86,20,20,20,-75,20,-77,-78,-79,20,20,20,20,-74,-64,-65,-66,-67,20,-24,20,20,20,20,-81,20,20,-63,20,-15,20,20,-76,20,-59,-80,20,20,-46,20,-47,20,20,-68,-45,20,20,-60,-61,-69,-58,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,139,141,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[21,21,-3,-4,-5,-6,38,-8,-9,-10,-11,-12,-13,-62,21,-35,21,21,-31,-32,-33,-34,-36,21,21,21,21,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-70,-73,-71,-72,38,-35,21,21,21,21,21,21,21,38,-24,38,117,-57,117,117,38,21,-25,-26,-27,-28,-29,-30,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-23,21,-82,21,-86,21,21,21,-75,21,-77,-78,-79,21,21,21,21,-74,-64,-65,-66,38,38,38,21,-24,21,21,21,21,-81,21,117,-63,21,-15,21,117,38,21,-59,-80,21,21,-46,21,-47,21,21,38,-45,21,21,-60,-61,-69,-58,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,22,-35,22,22,-31,-32,-33,-34,-36,22,22,22,22,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-70,-73,-71,-72,-14,-35,22,22,22,22,22,22,22,-24,22,-57,22,22,22,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,22,-82,22,-86,22,22,22,-75,22,-77,-78,-79,22,22,22,22,-74,-64,-65,-66,-67,22,-24,22,22,22,22,-81,22,22,-63,22,-15,22,22,-76,22,-59,-80,22,22,-46,22,-47,22,22,-68,-45,22,22,-60,-61,-69,-58,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,23,-35,23,23,-31,-32,-33,-34,-36,23,23,23,23,23,-2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-70,-73,-71,-72,-14,-35,23,23,23,23,23,23,23,-24,23,-57,23,23,23,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,23,-82,23,-86,23,23,23,-75,23,-77,-78,-79,23,23,23,23,-74,-64,-65,-66,-67,23,-24,23,23,23,23,-81,23,23,-63,23,-15,23,23,-76,23,-59,-80,23,23,-46,23,-47,23,23,-68,-45,23,23,-60,-61,-69,-58,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,24,-35,24,24,-31,-32,-33,-34,-36,24,24,24,24,24,-2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-70,-73,-71,-72,-14,-35,24,24,24,24,24,24,24,-24,24,-57,24,24,24,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,24,-82,24,-86,24,24,24,-75,24,-77,-78,-79,24,24,24,24,-74,-64,-65,-66,-67,24,-24,24,24,24,24,-81,24,24,-63,24,-15,24,24,-76,24,-59,-80,24,24,-46,24,-47,24,24,-68,-45,24,24,-60,-61,-69,-58,]),'SYMBOL_COLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,54,54,54,25,-35,25,25,-31,-32,-33,-34,-36,25,75,25,25,25,25,-2,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-70,-73,-71,-72,-14,-35,25,25,25,25,25,25,25,-24,25,-57,25,25,25,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,133,-16,-17,-18,-19,-20,-21,-22,-23,25,-82,25,-86,75,25,25,25,-75,25,-77,-78,-79,25,25,25,25,-74,-64,-65,-66,-67,25,-24,25,25,25,25,-81,25,25,-63,25,-15,25,25,-76,25,-59,-80,25,25,-46,25,-47,25,25,-68,-45,25,25,-60,-61,-69,-58,]),'INSTANCE_VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,26,-35,26,26,-31,-32,-33,-34,-36,26,26,26,26,26,-2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-70,-73,-71,-72,-14,-35,26,26,26,26,26,26,26,-24,26,-57,26,26,26,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,26,-82,26,-86,26,26,26,-75,26,-77,-78,-79,26,26,26,26,-74,-64,-65,-66,-67,26,-24,26,26,26,26,-81,26,26,-63,26,-15,26,26,-76,26,-59,-80,26,26,-46,26,-47,26,26,-68,-45,26,26,-60,-61,-69,-58,]),'CONSTANT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,132,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,27,-35,27,27,-31,-32,-33,-34,-36,27,27,79,27,27,27,83,-2,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-70,-73,-71,-72,-14,-35,27,27,27,27,27,27,27,-24,27,-57,27,27,27,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,27,-82,27,-86,27,27,27,-75,27,-77,-78,-79,27,27,27,27,161,-74,-64,-65,-66,-67,27,-24,27,27,27,27,-81,27,27,-63,27,-15,27,27,-76,27,-59,-80,27,27,-46,27,-47,27,27,-68,-45,27,27,-60,-61,-69,-58,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,28,-35,28,28,-31,-32,-33,-34,-36,28,28,28,28,28,-2,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-70,-73,-71,-72,-14,-35,28,28,28,28,28,28,28,-24,28,-57,28,28,28,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,28,-82,28,-86,28,28,28,-75,28,-77,-78,-79,28,28,28,28,-74,-64,-65,-66,-67,28,-24,28,28,28,28,-81,28,28,-63,28,-15,28,28,-76,28,-59,-80,28,28,-46,28,-47,28,28,-68,-45,28,28,-60,-61,-69,-58,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,28,30,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,120,121,122,123,126,127,130,131,133,135,136,137,138,145,146,147,149,151,152,153,155,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,29,-35,29,29,-31,-32,-33,-34,-36,29,29,29,29,29,-2,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-70,-73,-71,-72,-14,-35,29,29,29,29,29,29,29,-24,29,-57,29,29,29,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,29,-82,29,-86,29,29,29,-75,29,-77,-78,-79,29,29,29,29,-74,-64,-65,-66,-67,29,-24,29,29,29,29,-81,29,29,-63,29,-15,29,29,-76,29,-59,-80,29,29,-46,29,-47,29,29,-68,-45,29,29,-60,-61,-69,-58,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,30,-57,30,30,30,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,30,-75,30,-77,-78,-79,30,30,30,-74,-64,-65,-66,-67,-24,30,30,30,-81,30,30,-63,30,-15,30,-76,30,-59,-80,30,30,-46,30,-47,30,30,-68,-45,30,30,-60,-61,-69,-58,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,31,-57,31,31,31,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,31,-75,31,-77,-78,-79,31,31,31,-74,-64,-65,-66,-67,-24,31,31,31,-81,31,31,-63,31,-15,31,-76,31,-59,-80,31,31,-46,31,-47,31,31,-68,-45,31,31,-60,-61,-69,-58,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,32,-57,32,32,32,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,32,-75,32,-77,-78,-79,32,32,32,-74,-64,-65,-66,-67,-24,32,32,32,-81,32,32,-63,32,-15,32,-76,32,-59,-80,32,32,-46,32,-47,32,32,-68,-45,32,32,-60,-61,-69,-58,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,33,-57,33,33,33,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,33,-75,33,-77,-78,-79,33,33,33,-74,-64,-65,-66,-67,-24,33,33,33,-81,33,33,-63,33,-15,33,-76,33,-59,-80,33,33,-46,33,-47,33,33,-68,-45,33,33,-60,-61,-69,-58,]),'CASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,34,-57,34,34,34,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,34,-75,34,-77,-78,-79,34,34,34,-74,-64,-65,-66,-67,-24,34,34,34,-81,34,34,-63,34,-15,34,-76,34,-59,-80,34,34,-46,34,-47,34,34,-68,-45,34,34,-60,-61,-69,-58,]),'CLASS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,76,77,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,118,120,121,122,123,126,127,131,133,135,136,137,138,146,149,151,152,153,155,159,160,161,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,],[35,35,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,35,-57,35,35,35,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,35,-75,35,-77,-78,-79,35,35,35,-74,-64,-65,-66,-67,-24,35,35,35,-81,35,35,-63,35,-15,35,-76,35,-59,-80,35,35,-46,35,-47,35,35,-68,-45,35,35,-60,-61,-69,-58,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,133,135,136,137,138,153,160,162,168,172,174,177,178,181,182,183,185,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,-74,-64,-65,-66,-67,-81,-63,-15,-59,-46,-47,-68,-45,-60,-61,-69,-58,]),'ELSIF':([3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,133,135,136,137,138,146,153,160,162,168,172,174,177,178,179,181,182,183,185,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,145,-74,-64,-65,-66,-67,-24,-81,-63,-15,-59,-46,-47,-68,-45,145,-60,-61,-69,-58,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,127,128,129,133,135,136,137,138,142,143,144,146,153,158,160,162,168,172,174,175,177,178,179,181,182,183,184,185,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,-57,155,155,-49,-74,-64,-65,-66,-67,155,-51,-52,-24,-81,-48,-63,-15,-59,-46,-47,-50,-68,-45,-54,-60,-61,-69,-53,-58,]),'END_KW':([3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,116,126,127,128,129,131,133,135,136,137,138,142,143,144,146,149,153,154,156,157,158,160,162,164,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,-57,153,-57,-57,-49,160,-74,-64,-65,-66,-67,-57,-51,-52,-24,168,-81,172,-56,174,-48,-63,-15,178,-59,181,182,-46,-55,-47,-50,183,-68,-45,-54,185,-60,-61,-69,-53,-58,]),'WHEN':([3,4,5,6,7,8,9,10,11,12,13,14,19,22,23,24,25,26,36,53,54,55,56,57,58,67,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,128,129,133,135,136,137,138,146,153,158,160,162,168,172,174,175,177,178,181,182,183,185,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-62,-35,-31,-32,-33,-34,-36,-2,-70,-73,-71,-72,-14,-35,-24,130,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-16,-17,-18,-19,-20,-21,-22,-23,-57,-82,-86,130,-49,-74,-64,-65,-66,-67,-24,-81,-48,-63,-15,-59,-46,-47,-50,-68,-45,-60,-61,-69,-58,]),'PLUS':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[37,-35,-31,-32,-33,-34,-36,37,-35,37,-24,37,37,37,37,37,-25,-26,-27,-28,-29,-30,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-23,-57,-82,-86,-64,-65,-66,37,37,37,-24,37,37,37,37,]),'TIMES':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[39,-35,-31,-32,-33,-34,-36,39,-35,39,-24,39,39,39,39,39,39,39,-27,-28,-29,-30,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-23,-57,-82,-86,-64,-65,-66,39,39,39,-24,39,39,39,39,]),'DIVIDE':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[40,-35,-31,-32,-33,-34,-36,40,-35,40,-24,40,40,40,40,40,40,40,-27,-28,-29,-30,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-23,-57,-82,-86,-64,-65,-66,40,40,40,-24,40,40,40,40,]),'MODULO':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[41,-35,-31,-32,-33,-34,-36,41,-35,41,-24,41,41,41,41,41,41,41,-27,-28,-29,-30,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-23,-57,-82,-86,-64,-65,-66,41,41,41,-24,41,41,41,41,]),'POWER':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[42,-35,-31,-32,-33,-34,-36,42,-35,42,-24,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-23,-57,-82,-86,-64,-65,-66,42,42,42,-24,42,42,42,42,]),'LOGICAL_AND':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[43,-35,-31,-32,-33,-34,-36,43,-35,43,-24,43,43,43,43,43,-25,-26,-27,-28,-29,-30,-37,43,-39,-40,-41,-42,-43,-44,43,43,43,43,43,43,43,43,43,-23,-57,-82,-86,-64,-65,-66,43,43,43,-24,43,43,43,43,]),'LOGICAL_OR':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[44,-35,-31,-32,-33,-34,-36,44,-35,44,-24,44,44,44,44,44,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,44,44,44,44,44,44,44,44,44,-23,-57,-82,-86,-64,-65,-66,44,44,44,-24,44,44,44,44,]),'EQUAL_EQUAL':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[45,-35,-31,-32,-33,-34,-36,45,-35,45,-24,45,45,45,45,45,-25,-26,-27,-28,-29,-30,45,45,-39,-40,-41,-42,-43,-44,45,45,45,45,45,45,45,45,45,-23,-57,-82,-86,-64,-65,-66,45,45,45,-24,45,45,45,45,]),'NOT_EQUAL':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[46,-35,-31,-32,-33,-34,-36,46,-35,46,-24,46,46,46,46,46,-25,-26,-27,-28,-29,-30,46,46,-39,-40,-41,-42,-43,-44,46,46,46,46,46,46,46,46,46,-23,-57,-82,-86,-64,-65,-66,46,46,46,-24,46,46,46,46,]),'GREATER_THAN':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[47,-35,-31,-32,-33,-34,-36,47,-35,47,-24,47,47,47,47,47,-25,-26,-27,-28,-29,-30,47,47,-39,-40,-41,-42,-43,-44,47,47,47,47,47,47,47,47,47,-23,-57,-82,-86,-64,-65,-66,47,47,47,-24,47,47,47,47,]),'LESS_THAN':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[48,-35,-31,-32,-33,-34,-36,48,-35,48,-24,48,48,48,48,48,132,-25,-26,-27,-28,-29,-30,48,48,-39,-40,-41,-42,-43,-44,48,48,48,48,48,48,48,48,48,-23,-57,-82,-86,-64,-65,-66,48,48,48,-24,48,48,48,48,]),'GREATER_EQUAL':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[49,-35,-31,-32,-33,-34,-36,49,-35,49,-24,49,49,49,49,49,-25,-26,-27,-28,-29,-30,49,49,-39,-40,-41,-42,-43,-44,49,49,49,49,49,49,49,49,49,-23,-57,-82,-86,-64,-65,-66,49,49,49,-24,49,49,49,49,]),'LESS_EQUAL':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[50,-35,-31,-32,-33,-34,-36,50,-35,50,-24,50,50,50,50,50,-25,-26,-27,-28,-29,-30,50,50,-39,-40,-41,-42,-43,-44,50,50,50,50,50,50,50,50,50,-23,-57,-82,-86,-64,-65,-66,50,50,50,-24,50,50,50,50,]),'RANGE_INCLUSIVE':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[51,-35,-31,-32,-33,-34,-36,51,-35,51,-24,51,51,51,51,51,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,51,51,51,51,51,51,51,51,51,-23,-57,-82,-86,-64,-65,-66,51,51,51,-24,51,51,51,51,]),'RANGE_EXCLUSIVE':([7,19,22,23,24,25,26,57,58,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,109,110,111,113,135,136,137,138,139,141,146,159,165,166,177,],[52,-35,-31,-32,-33,-34,-36,52,-35,52,-24,52,52,52,52,52,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,52,52,52,52,52,52,52,52,52,-23,-57,-82,-86,-64,-65,-66,52,52,52,-24,52,52,52,52,]),'ASSIGN':([19,75,118,],[59,115,147,]),'PLUS_ASSIGN':([19,],[60,]),'MINUS_ASSIGN':([19,],[61,]),'TIMES_ASSIGN':([19,],[62,]),'DIVIDE_ASSIGN':([19,],[63,]),'OR_ASSIGN':([19,],[64,]),'AND_ASSIGN':([19,],[65,]),'RPAREN':([22,23,24,25,26,58,66,67,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,113,118,119,121,122,123,135,136,137,138,148,166,169,177,],[-31,-32,-33,-34,-36,-35,109,-24,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-23,-57,-82,-86,-75,-57,-77,-78,-79,-64,-65,-66,-67,167,-76,-80,-68,]),'RBRACKET':([22,23,24,25,26,28,58,67,69,70,71,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,113,135,136,137,138,139,177,],[-31,-32,-33,-34,-36,-57,-35,-24,111,-84,-85,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-23,-57,-82,-86,-64,-65,-66,-67,-83,-68,]),'COMMA':([22,23,24,25,26,28,53,54,55,56,58,67,69,70,71,73,74,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,113,118,121,123,133,135,136,137,138,139,140,141,166,169,177,],[-31,-32,-33,-34,-36,-57,100,-73,100,100,-35,-24,112,-84,-85,114,-89,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-23,-57,-82,-86,-75,150,-79,-74,-64,163,-66,-67,-83,-90,-91,-76,-80,-68,]),'RBRACE':([22,23,24,25,26,29,58,67,72,73,74,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,109,110,111,113,135,136,137,138,140,141,177,],[-31,-32,-33,-34,-36,-88,-35,-24,113,-87,-89,-25,-26,-27,-28,-29,-30,-37,-38,-39,-40,-41,-42,-43,-44,-92,-93,-23,-57,-82,-86,-64,-65,-66,-67,-90,-91,-68,]),'DOT':([27,78,79,101,],[68,124,125,134,]),'SELF':([31,],[78,]),'GETS':([59,],[101,]),'NEW':([68,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,76,80,81,83,120,151,152,155,159,161,165,167,],[2,116,126,127,131,149,170,171,173,175,176,179,180,]),'statement':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[3,36,3,3,3,3,36,3,36,36,36,36,3,3,3,3,3,3,3,36,36,36,36,36,36,36,]),'print':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,2,18,20,21,28,30,32,33,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,59,60,61,62,63,64,65,76,80,81,83,110,112,115,116,117,120,126,127,130,131,145,147,149,151,152,155,159,161,163,165,167,170,171,173,175,176,179,180,],[7,7,57,66,67,70,76,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,108,7,7,7,7,138,139,141,7,146,7,7,7,159,7,165,166,7,7,7,7,7,7,177,7,7,7,7,7,7,7,7,7,]),'if_statement':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'function_def':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'while_statement':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'unless_statement':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'case_statement':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'class_def':([0,2,76,80,81,83,116,120,126,127,131,149,151,152,155,159,161,165,167,170,171,173,175,176,179,180,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'symbol_list':([15,16,17,],[53,55,56,]),'elements':([28,],[69,]),'empty':([28,77,110,116,119,127,128,142,],[71,122,137,144,122,156,156,156,]),'hash_content':([29,],[72,]),'hash_pair_list':([29,],[73,]),'hash_pair':([29,114,],[74,140,]),'param_list_opt':([77,119,],[120,148,]),'param_list':([77,119,],[121,121,]),'param':([77,119,150,],[123,123,169,]),'when_blocks':([82,],[128,]),'when_block':([82,128,],[129,158,]),'expression_list_opt':([110,],[135,]),'expression_list':([110,],[136,]),'elsif_blocks_opt':([116,],[142,]),'elsif_blocks':([116,179,],[143,184,]),'else_block_opt':([127,128,142,],[154,157,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','semantico.py',47),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','semantico.py',52),
  ('statement_list -> statement','statement_list',1,'p_statement_list','semantico.py',53),
  ('statement -> print','statement',1,'p_statement','semantico.py',65),
  ('statement -> input','statement',1,'p_statement','semantico.py',66),
  ('statement -> assignment','statement',1,'p_statement','semantico.py',67),
  ('statement -> expression','statement',1,'p_statement','semantico.py',68),
  ('statement -> if_statement','statement',1,'p_statement','semantico.py',69),
  ('statement -> function_def','statement',1,'p_statement','semantico.py',70),
  ('statement -> while_statement','statement',1,'p_statement','semantico.py',71),
  ('statement -> unless_statement','statement',1,'p_statement','semantico.py',72),
  ('statement -> case_statement','statement',1,'p_statement','semantico.py',73),
  ('statement -> class_def','statement',1,'p_statement','semantico.py',74),
  ('print -> PUTS expression','print',2,'p_print','semantico.py',78),
  ('input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER','input',5,'p_input','semantico.py',82),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','semantico.py',87),
  ('assignment -> IDENTIFIER PLUS_ASSIGN expression','assignment',3,'p_assignment_composed','semantico.py',100),
  ('assignment -> IDENTIFIER MINUS_ASSIGN expression','assignment',3,'p_assignment_composed','semantico.py',101),
  ('assignment -> IDENTIFIER TIMES_ASSIGN expression','assignment',3,'p_assignment_composed','semantico.py',102),
  ('assignment -> IDENTIFIER DIVIDE_ASSIGN expression','assignment',3,'p_assignment_composed','semantico.py',103),
  ('assignment -> IDENTIFIER OR_ASSIGN expression','assignment',3,'p_assignment_logical_op','semantico.py',108),
  ('assignment -> IDENTIFIER AND_ASSIGN expression','assignment',3,'p_assignment_logical_op','semantico.py',109),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','semantico.py',114),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','semantico.py',118),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','semantico.py',125),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','semantico.py',126),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','semantico.py',127),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','semantico.py',128),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','semantico.py',129),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','semantico.py',130),
  ('expression -> INTEGER','expression',1,'p_expression_number','semantico.py',145),
  ('expression -> FLOAT','expression',1,'p_expression_number','semantico.py',146),
  ('expression -> STRING','expression',1,'p_expression_string','semantico.py',154),
  ('expression -> SYMBOL_COLON','expression',1,'p_expression_symbol','semantico.py',162),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','semantico.py',167),
  ('expression -> INSTANCE_VAR','expression',1,'p_expression_instance_var','semantico.py',179),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression_condition','semantico.py',188),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression_condition','semantico.py',189),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression_condition','semantico.py',190),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_condition','semantico.py',191),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_condition','semantico.py',192),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_condition','semantico.py',193),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_condition','semantico.py',194),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_condition','semantico.py',195),
  ('if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW','if_statement',6,'p_if_statement','semantico.py',200),
  ('unless_statement -> UNLESS expression statement_list else_block_opt END_KW','unless_statement',5,'p_unless_statement','semantico.py',206),
  ('case_statement -> CASE expression when_blocks else_block_opt END_KW','case_statement',5,'p_case_statement','semantico.py',210),
  ('when_blocks -> when_blocks when_block','when_blocks',2,'p_when_blocks','semantico.py',214),
  ('when_blocks -> when_block','when_blocks',1,'p_when_blocks','semantico.py',215),
  ('when_block -> WHEN expression statement_list','when_block',3,'p_when_block','semantico.py',222),
  ('elsif_blocks_opt -> elsif_blocks','elsif_blocks_opt',1,'p_elsif_blocks_opt','semantico.py',227),
  ('elsif_blocks_opt -> empty','elsif_blocks_opt',1,'p_elsif_blocks_opt','semantico.py',228),
  ('elsif_blocks -> ELSIF expression statement_list elsif_blocks','elsif_blocks',4,'p_elsif_blocks','semantico.py',232),
  ('elsif_blocks -> ELSIF expression statement_list','elsif_blocks',3,'p_elsif_blocks','semantico.py',233),
  ('else_block_opt -> ELSE statement_list','else_block_opt',2,'p_else_block_opt','semantico.py',240),
  ('else_block_opt -> empty','else_block_opt',1,'p_else_block_opt','semantico.py',241),
  ('empty -> <empty>','empty',0,'p_empty','semantico.py',248),
  ('function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW','function_def',7,'p_function_def','semantico.py',258),
  ('function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW','function_def',5,'p_function_def_no_parens','semantico.py',264),
  ('function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW','function_def',6,'p_function_def_class_method','semantico.py',273),
  ('function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW','function_def',6,'p_function_def_class_method','semantico.py',274),
  ('statement -> YIELD','statement',1,'p_statement_yield','semantico.py',279),
  ('class_def -> CLASS CONSTANT statement_list END_KW','class_def',4,'p_class_def','semantico.py',287),
  ('expression -> CONSTANT DOT NEW expression_list_opt','expression',4,'p_object_creation','semantico.py',291),
  ('expression_list_opt -> expression_list','expression_list_opt',1,'p_expression_list_opt','semantico.py',295),
  ('expression_list_opt -> empty','expression_list_opt',1,'p_expression_list_opt','semantico.py',296),
  ('expression_list -> expression','expression_list',1,'p_expression_list','semantico.py',300),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','semantico.py',301),
  ('class_def -> CLASS CONSTANT LESS_THAN CONSTANT statement_list END_KW','class_def',6,'p_class_def_inherit','semantico.py',308),
  ('statement -> ATTR_ACCESSOR symbol_list','statement',2,'p_attr_statement','semantico.py',313),
  ('statement -> ATTR_READER symbol_list','statement',2,'p_attr_statement','semantico.py',314),
  ('statement -> ATTR_WRITER symbol_list','statement',2,'p_attr_statement','semantico.py',315),
  ('symbol_list -> SYMBOL_COLON','symbol_list',1,'p_symbol_list','semantico.py',319),
  ('symbol_list -> symbol_list COMMA SYMBOL_COLON','symbol_list',3,'p_symbol_list','semantico.py',320),
  ('param -> IDENTIFIER','param',1,'p_param','semantico.py',330),
  ('param -> IDENTIFIER ASSIGN expression','param',3,'p_param','semantico.py',331),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','semantico.py',338),
  ('param_list_opt -> empty','param_list_opt',1,'p_param_list_opt','semantico.py',339),
  ('param_list -> param','param_list',1,'p_param_list','semantico.py',343),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','semantico.py',344),
  ('while_statement -> WHILE expression statement_list END_KW','while_statement',4,'p_while_statement','semantico.py',355),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','semantico.py',361),
  ('elements -> elements COMMA expression','elements',3,'p_elements','semantico.py',365),
  ('elements -> expression','elements',1,'p_elements','semantico.py',366),
  ('elements -> empty','elements',1,'p_elements','semantico.py',367),
  ('expression -> LBRACE hash_content RBRACE','expression',3,'p_expression_hash','semantico.py',380),
  ('hash_content -> hash_pair_list','hash_content',1,'p_hash_content','semantico.py',384),
  ('hash_content -> <empty>','hash_content',0,'p_hash_content','semantico.py',385),
  ('hash_pair_list -> hash_pair','hash_pair_list',1,'p_hash_pair_list','semantico.py',392),
  ('hash_pair_list -> hash_pair_list COMMA hash_pair','hash_pair_list',3,'p_hash_pair_list','semantico.py',393),
  ('hash_pair -> SYMBOL_COLON ASSIGN expression','hash_pair',3,'p_hash_pair','semantico.py',400),
  ('expression -> expression RANGE_INCLUSIVE expression','expression',3,'p_expression_range','semantico.py',406),
  ('expression -> expression RANGE_EXCLUSIVE expression','expression',3,'p_expression_range','semantico.py',407),
]
