
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLOGICAL_ORleftLOGICAL_ANDleftEQUAL_EQUALNOT_EQUALGREATER_THANLESS_THANGREATER_EQUALLESS_EQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightPOWERrightUMINUSALIAS AMPERSAND AND AND_ASSIGN ASSIGN BEGIN_KW BREAK CASE CLASS CLASS_VAR COMMA CONSTANT DEF DEFINEDQ DIVIDE DIVIDE_ASSIGN DO DOT ELSE ELSIF END_KW ENSURE EQUAL_EQUAL FALSE FLOAT FOR GETS GLOBAL_VAR GREATER_EQUAL GREATER_THAN IDENTIFIER IF IN INSTANCE_VAR INTEGER LBRACE LBRACKET LESS_EQUAL LESS_THAN LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MATCH_REGEX MINUS MINUS_ASSIGN MODULE MODULO NEXT NIL NOT NOT_EQUAL NOT_MATCH_REGEX OR OR_ASSIGN PLUS PLUS_ASSIGN POWER PUTS RANGE_EXCLUSIVE RANGE_INCLUSIVE RBRACE RBRACKET REDO RESCUE RETRY RETURN RPAREN SELF SEMICOLON STRING SUPER SYMBOL_COLON TERNARY_COLON TERNARY_Q THEN TIMES TIMES_ASSIGN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELDprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : print\n                 | input\n                 | assignment\n                 | expression\n                 | if_statement\n                 | function_def\n                 | while_statement\n                 | unless_statement \n                 | case_statementprint : PUTS expressioninput : IDENTIFIER ASSIGN GETS DOT IDENTIFIERassignment : IDENTIFIER ASSIGN expressionassignment : IDENTIFIER PLUS_ASSIGN expression\n                  | IDENTIFIER MINUS_ASSIGN expression\n                  | IDENTIFIER TIMES_ASSIGN expression\n                  | IDENTIFIER DIVIDE_ASSIGN expressionassignment : IDENTIFIER OR_ASSIGN expression\n                  | IDENTIFIER AND_ASSIGN expressionexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MODULO expression\n                  | expression POWER expressionexpression : INTEGER\n                  | FLOATexpression : STRINGexpression : SYMBOL_COLONexpression : IDENTIFIERexpression : expression LOGICAL_AND expression\n                  | expression LOGICAL_OR expression\n                  | expression EQUAL_EQUAL expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER_THAN expression\n                  | expression LESS_THAN expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expressionif_statement : IF expression statement_list elsif_blocks_opt else_block_opt END_KWunless_statement : UNLESS expression statement_list else_block_opt END_KWcase_statement : CASE expression when_blocks else_block_opt END_KWwhen_blocks : when_blocks when_block\n                   | when_blockwhen_block : WHEN expression statement_listelsif_blocks_opt : elsif_blocks\n                        | emptyelsif_blocks : ELSIF expression statement_list elsif_blocks\n                    | ELSIF expression statement_listelse_block_opt : ELSE statement_list\n                      | emptyempty :function_def : DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KWfunction_def : DEF IDENTIFIER param_list_opt statement_list END_KWfunction_def : DEF SELF DOT IDENTIFIER statement_list END_KW\n                    | DEF CONSTANT DOT IDENTIFIER statement_list END_KWstatement : YIELDparam : IDENTIFIER\n             | IDENTIFIER ASSIGN expressionparam_list_opt : param_list\n                      | emptyparam_list : param\n                  | param_list COMMA paramwhile_statement : WHILE expression statement_list END_KWexpression : LBRACKET elements RBRACKETelements : elements COMMA expression\n                | expression\n                | emptyexpression : LBRACE hash_content RBRACEhash_content : hash_pair_list\n                    | hash_pair_list : hash_pair\n                      | hash_pair_list COMMA hash_pairhash_pair : SYMBOL_COLON ASSIGN expression'
    
_lr_action_items = {'YIELD':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,99,101,102,103,104,107,108,120,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,13,-55,13,13,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,13,-61,13,-63,-64,-65,13,13,-23,13,13,13,-67,13,13,-14,13,-62,13,-57,-66,13,13,-44,13,-45,13,-43,13,13,-58,-59,-56,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,99,101,102,103,104,107,108,120,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,14,-55,14,14,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,14,-61,14,-63,-64,-65,14,14,-23,14,14,14,-67,14,14,-14,14,-62,14,-57,-66,14,14,-44,14,-45,14,-43,14,14,-58,-59,-56,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,111,112,119,120,121,123,124,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,45,-34,45,45,-30,-31,-32,-33,45,45,63,45,45,45,-2,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-13,-34,45,45,45,45,45,45,45,-23,15,99,15,15,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,45,-72,45,15,45,-61,99,15,-63,-64,-65,125,126,15,15,45,134,45,-23,45,15,99,15,15,-67,15,15,-14,15,-62,15,-57,-66,15,15,-44,15,-45,15,-43,15,15,-58,-59,-56,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,107,108,111,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,16,-34,16,16,-30,-31,-32,-33,16,16,16,16,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-13,-34,16,16,16,16,16,16,16,-23,16,100,16,16,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,16,-72,16,16,16,-61,16,-63,-64,-65,16,16,16,16,-23,16,16,16,16,-67,16,16,-14,16,-62,16,-57,-66,16,16,-44,16,-45,16,-43,16,16,-58,-59,-56,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,107,108,111,113,115,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[17,17,-3,-4,-5,-6,31,-8,-9,-10,-11,-12,-60,17,-34,17,17,-30,-31,-32,-33,17,17,17,17,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,31,-34,17,17,17,17,17,17,17,31,-23,31,98,-55,98,98,31,-24,-25,-26,-27,-28,-29,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-22,-68,17,-72,17,17,17,-61,17,-63,-64,-65,17,17,17,31,31,17,-23,17,17,17,17,-67,17,98,-14,98,31,17,-57,-66,17,17,-44,17,-45,17,-43,17,17,-58,-59,-56,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,107,108,111,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,18,-34,18,18,-30,-31,-32,-33,18,18,18,18,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-13,-34,18,18,18,18,18,18,18,-23,18,-55,18,18,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,18,-72,18,18,18,-61,18,-63,-64,-65,18,18,18,18,-23,18,18,18,18,-67,18,18,-14,18,-62,18,-57,-66,18,18,-44,18,-45,18,-43,18,18,-58,-59,-56,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,107,108,111,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,19,-34,19,19,-30,-31,-32,-33,19,19,19,19,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-13,-34,19,19,19,19,19,19,19,-23,19,-55,19,19,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,19,-72,19,19,19,-61,19,-63,-64,-65,19,19,19,19,-23,19,19,19,19,-67,19,19,-14,19,-62,19,-57,-66,19,19,-44,19,-45,19,-43,19,19,-58,-59,-56,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,107,108,111,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,20,-34,20,20,-30,-31,-32,-33,20,20,20,20,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-13,-34,20,20,20,20,20,20,20,-23,20,-55,20,20,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,20,-72,20,20,20,-61,20,-63,-64,-65,20,20,20,20,-23,20,20,20,20,-67,20,20,-14,20,-62,20,-57,-66,20,20,-44,20,-45,20,-43,20,20,-58,-59,-56,]),'SYMBOL_COLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,107,108,111,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,21,-34,21,21,-30,-31,-32,-33,21,61,21,21,21,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-13,-34,21,21,21,21,21,21,21,-23,21,-55,21,21,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,21,-72,61,21,21,21,-61,21,-63,-64,-65,21,21,21,21,-23,21,21,21,21,-67,21,21,-14,21,-62,21,-57,-66,21,21,-44,21,-45,21,-43,21,21,-58,-59,-56,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,107,108,111,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,22,-34,22,22,-30,-31,-32,-33,22,22,22,22,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-13,-34,22,22,22,22,22,22,22,-23,22,-55,22,22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,22,-72,22,22,22,-61,22,-63,-64,-65,22,22,22,22,-23,22,22,22,22,-67,22,22,-14,22,-62,22,-57,-66,22,22,-44,22,-45,22,-43,22,22,-58,-59,-56,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,101,102,103,104,107,108,111,119,120,121,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,23,-34,23,23,-30,-31,-32,-33,23,23,23,23,23,-2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-13,-34,23,23,23,23,23,23,23,-23,23,-55,23,23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,23,-72,23,23,23,-61,23,-63,-64,-65,23,23,23,23,-23,23,23,23,23,-67,23,23,-14,23,-62,23,-57,-66,23,23,-44,23,-45,23,-43,23,23,-58,-59,-56,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,99,101,102,103,104,107,108,120,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,24,-55,24,24,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,24,-61,24,-63,-64,-65,24,24,-23,24,24,24,-67,24,24,-14,24,-62,24,-57,-66,24,24,-44,24,-45,24,-43,24,24,-58,-59,-56,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,99,101,102,103,104,107,108,120,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,25,-55,25,25,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,25,-61,25,-63,-64,-65,25,25,-23,25,25,25,-67,25,25,-14,25,-62,25,-57,-66,25,25,-44,25,-45,25,-43,25,25,-58,-59,-56,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,99,101,102,103,104,107,108,120,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,26,-55,26,26,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,26,-61,26,-63,-64,-65,26,26,-23,26,26,26,-67,26,26,-14,26,-62,26,-57,-66,26,26,-44,26,-45,26,-43,26,26,-58,-59,-56,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,99,101,102,103,104,107,108,120,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,27,-55,27,27,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,27,-61,27,-63,-64,-65,27,27,-23,27,27,27,-67,27,27,-14,27,-62,27,-57,-66,27,27,-44,27,-45,27,-43,27,27,-58,-59,-56,]),'CASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,62,63,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,99,101,102,103,104,107,108,120,123,125,126,127,129,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,28,-55,28,28,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,28,-61,28,-63,-64,-65,28,28,-23,28,28,28,-67,28,28,-14,28,-62,28,-57,-66,28,28,-44,28,-45,28,-43,28,28,-58,-59,-56,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,127,134,139,143,145,147,150,151,153,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,-67,-14,-57,-44,-45,-43,-58,-59,-56,]),'ELSIF':([3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,120,127,134,139,143,145,147,148,150,151,153,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,119,-23,-67,-14,-57,-44,-45,-43,119,-58,-59,-56,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,108,109,110,116,117,118,120,127,132,134,139,143,145,146,147,148,150,151,152,153,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,-55,129,129,-47,129,-49,-50,-23,-67,-46,-14,-57,-44,-45,-48,-43,-52,-58,-59,-51,-56,]),'END_KW':([3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,97,107,108,109,110,116,117,118,120,123,127,128,130,131,132,134,135,139,141,142,143,144,145,146,147,148,149,150,151,152,153,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,-55,127,-55,-55,-47,-55,-49,-50,-23,139,-67,143,-54,145,-46,-14,147,-57,150,151,-44,-53,-45,-48,-43,-52,153,-58,-59,-51,-56,]),'WHEN':([3,4,5,6,7,8,9,10,11,12,13,15,18,19,20,21,29,44,45,54,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,109,110,120,127,132,134,139,143,145,146,147,150,151,153,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-60,-34,-30,-31,-32,-33,-2,-13,-34,-23,111,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-68,-72,111,-47,-23,-67,-46,-14,-57,-44,-45,-48,-43,-58,-59,-56,]),'PLUS':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[30,-34,-30,-31,-32,-33,30,-34,30,-23,30,30,30,30,30,-24,-25,-26,-27,-28,-29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-22,-68,-72,30,30,-23,30,30,30,]),'TIMES':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[32,-34,-30,-31,-32,-33,32,-34,32,-23,32,32,32,32,32,32,32,-26,-27,-28,-29,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-22,-68,-72,32,32,-23,32,32,32,]),'DIVIDE':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[33,-34,-30,-31,-32,-33,33,-34,33,-23,33,33,33,33,33,33,33,-26,-27,-28,-29,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-22,-68,-72,33,33,-23,33,33,33,]),'MODULO':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[34,-34,-30,-31,-32,-33,34,-34,34,-23,34,34,34,34,34,34,34,-26,-27,-28,-29,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-22,-68,-72,34,34,-23,34,34,34,]),'POWER':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[35,-34,-30,-31,-32,-33,35,-34,35,-23,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-22,-68,-72,35,35,-23,35,35,35,]),'LOGICAL_AND':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[36,-34,-30,-31,-32,-33,36,-34,36,-23,36,36,36,36,36,-24,-25,-26,-27,-28,-29,-35,36,-37,-38,-39,-40,-41,-42,36,36,36,36,36,36,36,-22,-68,-72,36,36,-23,36,36,36,]),'LOGICAL_OR':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[37,-34,-30,-31,-32,-33,37,-34,37,-23,37,37,37,37,37,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,37,37,37,37,37,37,37,-22,-68,-72,37,37,-23,37,37,37,]),'EQUAL_EQUAL':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[38,-34,-30,-31,-32,-33,38,-34,38,-23,38,38,38,38,38,-24,-25,-26,-27,-28,-29,38,38,-37,-38,-39,-40,-41,-42,38,38,38,38,38,38,38,-22,-68,-72,38,38,-23,38,38,38,]),'NOT_EQUAL':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[39,-34,-30,-31,-32,-33,39,-34,39,-23,39,39,39,39,39,-24,-25,-26,-27,-28,-29,39,39,-37,-38,-39,-40,-41,-42,39,39,39,39,39,39,39,-22,-68,-72,39,39,-23,39,39,39,]),'GREATER_THAN':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[40,-34,-30,-31,-32,-33,40,-34,40,-23,40,40,40,40,40,-24,-25,-26,-27,-28,-29,40,40,-37,-38,-39,-40,-41,-42,40,40,40,40,40,40,40,-22,-68,-72,40,40,-23,40,40,40,]),'LESS_THAN':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[41,-34,-30,-31,-32,-33,41,-34,41,-23,41,41,41,41,41,-24,-25,-26,-27,-28,-29,41,41,-37,-38,-39,-40,-41,-42,41,41,41,41,41,41,41,-22,-68,-72,41,41,-23,41,41,41,]),'GREATER_EQUAL':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[42,-34,-30,-31,-32,-33,42,-34,42,-23,42,42,42,42,42,-24,-25,-26,-27,-28,-29,42,42,-37,-38,-39,-40,-41,-42,42,42,42,42,42,42,42,-22,-68,-72,42,42,-23,42,42,42,]),'LESS_EQUAL':([7,15,18,19,20,21,44,45,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,94,113,115,120,133,136,137,],[43,-34,-30,-31,-32,-33,43,-34,43,-23,43,43,43,43,43,-24,-25,-26,-27,-28,-29,43,43,-37,-38,-39,-40,-41,-42,43,43,43,43,43,43,43,-22,-68,-72,43,43,-23,43,43,43,]),'ASSIGN':([15,61,99,],[46,96,121,]),'PLUS_ASSIGN':([15,],[47,]),'MINUS_ASSIGN':([15,],[48,]),'TIMES_ASSIGN':([15,],[49,]),'DIVIDE_ASSIGN':([15,],[50,]),'OR_ASSIGN':([15,],[51,]),'AND_ASSIGN':([15,],[52,]),'RPAREN':([18,19,20,21,45,53,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,91,92,94,99,100,102,103,104,122,137,140,],[-30,-31,-32,-33,-34,91,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-68,-72,-61,-55,-63,-64,-65,138,-62,-66,]),'RBRACKET':([18,19,20,21,22,45,54,55,56,57,69,70,71,72,73,74,75,76,77,78,79,80,81,82,91,92,94,113,],[-30,-31,-32,-33,-55,-34,-23,92,-70,-71,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-68,-72,-69,]),'COMMA':([18,19,20,21,22,45,54,55,56,57,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,91,92,94,99,102,104,113,114,115,137,140,],[-30,-31,-32,-33,-55,-34,-23,93,-70,-71,95,-75,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-68,-72,-61,124,-65,-69,-76,-77,-62,-66,]),'RBRACE':([18,19,20,21,23,45,54,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,91,92,94,114,115,],[-30,-31,-32,-33,-74,-34,-23,94,-73,-75,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-68,-72,-76,-77,]),'SELF':([25,],[64,]),'CONSTANT':([25,],[65,]),'GETS':([46,],[83,]),'DOT':([64,65,83,],[105,106,112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,62,66,67,101,125,126,129,133,136,138,],[2,97,107,108,123,141,142,144,146,148,149,]),'statement':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[3,29,3,3,3,29,3,29,29,29,3,3,3,3,3,3,29,29,29,29,29,29,]),'print':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,2,14,16,17,22,24,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,50,51,52,62,66,67,93,96,97,98,101,107,108,111,119,121,123,125,126,129,133,136,138,141,142,144,146,148,149,],[7,7,44,53,54,56,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,7,7,7,113,115,7,120,7,7,7,133,136,137,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if_statement':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'function_def':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'while_statement':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'unless_statement':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'case_statement':([0,2,62,66,67,97,101,107,108,123,125,126,129,133,136,138,141,142,144,146,148,149,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'elements':([22,],[55,]),'empty':([22,63,97,100,108,109,116,],[57,103,118,103,130,130,130,]),'hash_content':([23,],[58,]),'hash_pair_list':([23,],[59,]),'hash_pair':([23,95,],[60,114,]),'param_list_opt':([63,100,],[101,122,]),'param_list':([63,100,],[102,102,]),'param':([63,100,124,],[104,104,140,]),'when_blocks':([68,],[109,]),'when_block':([68,109,],[110,132,]),'elsif_blocks_opt':([97,],[116,]),'elsif_blocks':([97,148,],[117,152,]),'else_block_opt':([108,109,116,],[128,131,135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','sintactico.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintactico.py',36),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintactico.py',37),
  ('statement -> print','statement',1,'p_statement','sintactico.py',49),
  ('statement -> input','statement',1,'p_statement','sintactico.py',50),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',51),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',52),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',53),
  ('statement -> function_def','statement',1,'p_statement','sintactico.py',54),
  ('statement -> while_statement','statement',1,'p_statement','sintactico.py',55),
  ('statement -> unless_statement','statement',1,'p_statement','sintactico.py',56),
  ('statement -> case_statement','statement',1,'p_statement','sintactico.py',57),
  ('print -> PUTS expression','print',2,'p_print','sintactico.py',61),
  ('input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER','input',5,'p_input','sintactico.py',65),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','sintactico.py',69),
  ('assignment -> IDENTIFIER PLUS_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',73),
  ('assignment -> IDENTIFIER MINUS_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',74),
  ('assignment -> IDENTIFIER TIMES_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',75),
  ('assignment -> IDENTIFIER DIVIDE_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',76),
  ('assignment -> IDENTIFIER OR_ASSIGN expression','assignment',3,'p_assignment_logical_op','sintactico.py',81),
  ('assignment -> IDENTIFIER AND_ASSIGN expression','assignment',3,'p_assignment_logical_op','sintactico.py',82),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','sintactico.py',87),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','sintactico.py',91),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sintactico.py',97),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sintactico.py',98),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sintactico.py',99),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sintactico.py',100),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','sintactico.py',101),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','sintactico.py',102),
  ('expression -> INTEGER','expression',1,'p_expression_number','sintactico.py',106),
  ('expression -> FLOAT','expression',1,'p_expression_number','sintactico.py',107),
  ('expression -> STRING','expression',1,'p_expression_string','sintactico.py',111),
  ('expression -> SYMBOL_COLON','expression',1,'p_expression_symbol','sintactico.py',117),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','sintactico.py',122),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression_condition','sintactico.py',132),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression_condition','sintactico.py',133),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',134),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',135),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_condition','sintactico.py',136),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_condition','sintactico.py',137),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',138),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',139),
  ('if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW','if_statement',6,'p_if_statement','sintactico.py',144),
  ('unless_statement -> UNLESS expression statement_list else_block_opt END_KW','unless_statement',5,'p_unless_statement','sintactico.py',150),
  ('case_statement -> CASE expression when_blocks else_block_opt END_KW','case_statement',5,'p_case_statement','sintactico.py',154),
  ('when_blocks -> when_blocks when_block','when_blocks',2,'p_when_blocks','sintactico.py',158),
  ('when_blocks -> when_block','when_blocks',1,'p_when_blocks','sintactico.py',159),
  ('when_block -> WHEN expression statement_list','when_block',3,'p_when_block','sintactico.py',166),
  ('elsif_blocks_opt -> elsif_blocks','elsif_blocks_opt',1,'p_elsif_blocks_opt','sintactico.py',171),
  ('elsif_blocks_opt -> empty','elsif_blocks_opt',1,'p_elsif_blocks_opt','sintactico.py',172),
  ('elsif_blocks -> ELSIF expression statement_list elsif_blocks','elsif_blocks',4,'p_elsif_blocks','sintactico.py',176),
  ('elsif_blocks -> ELSIF expression statement_list','elsif_blocks',3,'p_elsif_blocks','sintactico.py',177),
  ('else_block_opt -> ELSE statement_list','else_block_opt',2,'p_else_block_opt','sintactico.py',184),
  ('else_block_opt -> empty','else_block_opt',1,'p_else_block_opt','sintactico.py',185),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',192),
  ('function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW','function_def',7,'p_function_def','sintactico.py',202),
  ('function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW','function_def',5,'p_function_def_no_parens','sintactico.py',208),
  ('function_def -> DEF SELF DOT IDENTIFIER statement_list END_KW','function_def',6,'p_function_def_class_method','sintactico.py',218),
  ('function_def -> DEF CONSTANT DOT IDENTIFIER statement_list END_KW','function_def',6,'p_function_def_class_method','sintactico.py',219),
  ('statement -> YIELD','statement',1,'p_statement_yield','sintactico.py',224),
  ('param -> IDENTIFIER','param',1,'p_param','sintactico.py',232),
  ('param -> IDENTIFIER ASSIGN expression','param',3,'p_param','sintactico.py',233),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','sintactico.py',240),
  ('param_list_opt -> empty','param_list_opt',1,'p_param_list_opt','sintactico.py',241),
  ('param_list -> param','param_list',1,'p_param_list','sintactico.py',245),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','sintactico.py',246),
  ('while_statement -> WHILE expression statement_list END_KW','while_statement',4,'p_while_statement','sintactico.py',257),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','sintactico.py',263),
  ('elements -> elements COMMA expression','elements',3,'p_elements','sintactico.py',267),
  ('elements -> expression','elements',1,'p_elements','sintactico.py',268),
  ('elements -> empty','elements',1,'p_elements','sintactico.py',269),
  ('expression -> LBRACE hash_content RBRACE','expression',3,'p_expression_hash','sintactico.py',282),
  ('hash_content -> hash_pair_list','hash_content',1,'p_hash_content','sintactico.py',286),
  ('hash_content -> <empty>','hash_content',0,'p_hash_content','sintactico.py',287),
  ('hash_pair_list -> hash_pair','hash_pair_list',1,'p_hash_pair_list','sintactico.py',294),
  ('hash_pair_list -> hash_pair_list COMMA hash_pair','hash_pair_list',3,'p_hash_pair_list','sintactico.py',295),
  ('hash_pair -> SYMBOL_COLON ASSIGN expression','hash_pair',3,'p_hash_pair','sintactico.py',302),
]
