
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLOGICAL_ORleftLOGICAL_ANDleftEQUAL_EQUALNOT_EQUALGREATER_THANLESS_THANGREATER_EQUALLESS_EQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightPOWERrightUMINUSALIAS AMPERSAND AND AND_ASSIGN ASSIGN BEGIN_KW BREAK CASE CLASS CLASS_VAR COMMA CONSTANT DEF DEFINEDQ DIVIDE DIVIDE_ASSIGN DO DOT ELSE ELSIF END_KW ENSURE EQUAL_EQUAL FALSE FLOAT FOR GETS GLOBAL_VAR GREATER_EQUAL GREATER_THAN IDENTIFIER IF IN INSTANCE_VAR INTEGER LBRACE LBRACKET LESS_EQUAL LESS_THAN LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MATCH_REGEX MINUS MINUS_ASSIGN MODULE MODULO NEXT NIL NOT NOT_EQUAL NOT_MATCH_REGEX OR OR_ASSIGN PLUS PLUS_ASSIGN POWER PUTS RANGE_EXCLUSIVE RANGE_INCLUSIVE RBRACE RBRACKET REDO RESCUE RETRY RETURN RPAREN SELF SEMICOLON STRING SUPER SYMBOL_COLON TERNARY_COLON TERNARY_Q THEN TIMES TIMES_ASSIGN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELDprogram : statement_liststatement_list : statement_list statement\n| statementstatement : print\n| input\n| assignment\n| expression\n| if_statement\n| function_defprint : PUTS expressioninput : IDENTIFIER ASSIGN GETS DOT IDENTIFIERassignment : IDENTIFIER ASSIGN expressionassignment : IDENTIFIER PLUS_ASSIGN expression\n| IDENTIFIER MINUS_ASSIGN expression\n| IDENTIFIER TIMES_ASSIGN expression\n| IDENTIFIER DIVIDE_ASSIGN expressionassignment : IDENTIFIER OR_ASSIGN expression\n| IDENTIFIER AND_ASSIGN expressionexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression MODULO expression\n| expression POWER expressionexpression : INTEGER\n| FLOATexpression : STRINGexpression : IDENTIFIERexpression : expression LOGICAL_AND expression\n| expression LOGICAL_OR expression\n| expression EQUAL_EQUAL expression\n| expression NOT_EQUAL expression\n| expression GREATER_THAN expression\n| expression LESS_THAN expression\n| expression GREATER_EQUAL expression\n| expression LESS_EQUAL expressioncondition : expression EQUAL_EQUAL expression\n| expression NOT_EQUAL expression\n| expression GREATER_THAN expression\n| expression LESS_THAN expression\n| expression GREATER_EQUAL expression\n| expression LESS_EQUAL expressionif_statement : IF condition statement_list elsif_blocks_opt else_block_opt END_KWelsif_blocks_opt : elsif_blocks\n| emptyelsif_blocks :  elsif_blocks ELSIF condition statement_list\n| ELSIF condition statement_listelse_block_opt : ELSE statement_list\n| emptyempty :function_def : DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KWparam : IDENTIFIER\n| IDENTIFIER ASSIGN expressionparam_list_opt : param_list\n| emptyparam_list : param\n| param_list COMMA paramstatement : WHILE condition statement_list END_KWexpression : LBRACKET elements RBRACKETelements : elements COMMA expression\n| expression\n| emptyexpression : LBRACE hash_content RBRACEhash_content : hash_pair_list\n| hash_pair_list : hash_pair\n| hash_pair_list COMMA hash_pairhash_pair : SYMBOL_COLON ASSIGN expression'
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,7,8,9,12,15,16,17,22,37,39,40,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,91,94,96,97,98,99,100,101,102,116,118,121,123,125,126,127,128,130,132,133,],[10,10,-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,10,-30,-10,-20,10,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,10,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,10,-60,-39,-40,-41,-42,-43,-44,-11,10,10,10,-45,10,10,10,10,10,-53,]),'PUTS':([0,2,3,4,5,6,7,8,9,12,15,16,17,22,37,39,40,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,91,94,96,97,98,99,100,101,102,116,118,121,123,125,126,127,128,130,132,133,],[11,11,-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,11,-30,-10,-20,11,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,11,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,11,-60,-39,-40,-41,-42,-43,-44,-11,11,11,11,-45,11,11,11,11,11,-53,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,110,116,118,120,121,122,123,124,125,126,127,128,130,132,133,],[12,12,-3,-4,-5,-6,-7,-8,-9,39,39,-30,39,39,-27,-28,-29,39,39,58,-2,39,39,39,39,39,39,39,39,39,39,39,39,39,39,12,-30,-10,39,39,39,39,39,39,39,-20,12,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,12,39,39,39,39,39,39,-12,-13,-14,-15,-16,-17,-18,-19,-61,39,-65,39,12,111,-60,-39,-40,-41,-42,-43,-44,116,39,-11,12,39,12,39,12,111,-45,12,12,12,12,12,-53,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,110,116,118,120,121,122,123,125,126,127,128,130,132,133,],[13,13,-3,-4,-5,-6,-7,-8,-9,13,13,-30,13,13,-27,-28,-29,13,13,-2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-30,-10,13,13,13,13,13,13,13,-20,13,95,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,13,13,13,13,13,13,13,-12,-13,-14,-15,-16,-17,-18,-19,-61,13,-65,13,13,-60,-39,-40,-41,-42,-43,-44,13,-11,13,13,13,13,13,-45,13,13,13,13,13,-53,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,104,106,110,116,118,120,121,122,123,125,126,127,128,129,130,132,133,],[14,14,-3,-4,-5,-6,24,-8,-9,14,14,-30,14,14,-27,-28,-29,14,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,24,-30,24,14,14,14,14,14,14,14,24,-20,24,14,-21,-22,-23,-24,-25,-26,24,24,24,24,24,24,24,24,14,14,14,14,14,14,14,24,24,24,24,24,24,24,-19,-61,14,-65,14,14,-60,24,24,24,24,24,24,24,24,14,-11,14,14,14,14,14,-45,14,14,14,24,14,14,-53,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,110,116,118,120,121,122,123,125,126,127,128,130,132,133,],[15,15,-3,-4,-5,-6,-7,-8,-9,15,15,-30,15,15,-27,-28,-29,15,15,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-30,-10,15,15,15,15,15,15,15,-20,15,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,15,15,15,15,15,15,15,-12,-13,-14,-15,-16,-17,-18,-19,-61,15,-65,15,15,-60,-39,-40,-41,-42,-43,-44,15,-11,15,15,15,15,15,-45,15,15,15,15,15,-53,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,110,116,118,120,121,122,123,125,126,127,128,130,132,133,],[16,16,-3,-4,-5,-6,-7,-8,-9,16,16,-30,16,16,-27,-28,-29,16,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-30,-10,16,16,16,16,16,16,16,-20,16,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,16,16,16,16,16,16,16,-12,-13,-14,-15,-16,-17,-18,-19,-61,16,-65,16,16,-60,-39,-40,-41,-42,-43,-44,16,-11,16,16,16,16,16,-45,16,16,16,16,16,-53,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,110,116,118,120,121,122,123,125,126,127,128,130,132,133,],[17,17,-3,-4,-5,-6,-7,-8,-9,17,17,-30,17,17,-27,-28,-29,17,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-30,-10,17,17,17,17,17,17,17,-20,17,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,17,17,17,17,17,17,17,-12,-13,-14,-15,-16,-17,-18,-19,-61,17,-65,17,17,-60,-39,-40,-41,-42,-43,-44,17,-11,17,17,17,17,17,-45,17,17,17,17,17,-53,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,110,116,118,120,121,122,123,125,126,127,128,130,132,133,],[18,18,-3,-4,-5,-6,-7,-8,-9,18,18,-30,18,18,-27,-28,-29,18,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-30,-10,18,18,18,18,18,18,18,-20,18,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,18,18,18,18,18,18,18,-12,-13,-14,-15,-16,-17,-18,-19,-61,18,-65,18,18,-60,-39,-40,-41,-42,-43,-44,18,-11,18,18,18,18,18,-45,18,18,18,18,18,-53,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,98,99,100,101,102,110,116,118,120,121,122,123,125,126,127,128,130,132,133,],[19,19,-3,-4,-5,-6,-7,-8,-9,19,19,-30,19,19,-27,-28,-29,19,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-30,-10,19,19,19,19,19,19,19,-20,19,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,19,19,19,19,19,19,19,-12,-13,-14,-15,-16,-17,-18,-19,-61,19,-65,19,19,-60,-39,-40,-41,-42,-43,-44,19,-11,19,19,19,19,19,-45,19,19,19,19,19,-53,]),'IF':([0,2,3,4,5,6,7,8,9,12,15,16,17,22,37,39,40,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,91,94,96,97,98,99,100,101,102,116,118,121,123,125,126,127,128,130,132,133,],[20,20,-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,20,-30,-10,-20,20,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,20,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,20,-60,-39,-40,-41,-42,-43,-44,-11,20,20,20,-45,20,20,20,20,20,-53,]),'DEF':([0,2,3,4,5,6,7,8,9,12,15,16,17,22,37,39,40,49,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,91,94,96,97,98,99,100,101,102,116,118,121,123,125,126,127,128,130,132,133,],[21,21,-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,21,-30,-10,-20,21,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,21,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,21,-60,-39,-40,-41,-42,-43,-44,-11,21,21,21,-45,21,21,21,21,21,-53,]),'$end':([1,2,3,4,5,6,7,8,9,12,15,16,17,22,39,40,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,96,116,125,133,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,-30,-10,-20,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,-60,-11,-45,-53,]),'END_KW':([3,4,5,6,7,8,9,12,15,16,17,22,39,40,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,86,87,88,89,91,94,96,107,108,109,116,117,119,125,126,128,130,132,133,],[-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,-30,-10,-20,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,96,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,-52,-60,-52,-46,-47,-11,125,-51,-45,-50,-49,133,-48,-53,]),'ELSIF':([3,4,5,6,7,8,9,12,15,16,17,22,39,40,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,94,96,108,116,125,128,132,133,],[-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,-30,-10,-20,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,110,-60,120,-11,-45,-49,-48,-53,]),'ELSE':([3,4,5,6,7,8,9,12,15,16,17,22,39,40,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,94,96,107,108,109,116,125,128,132,133,],[-3,-4,-5,-6,-7,-8,-9,-30,-27,-28,-29,-2,-30,-10,-20,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,-12,-13,-14,-15,-16,-17,-18,-19,-61,-65,-52,-60,118,-46,-47,-11,-45,-49,-48,-53,]),'PLUS':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[23,-30,-27,-28,-29,23,-30,23,23,-20,23,-21,-22,-23,-24,-25,-26,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-19,-61,-65,23,23,23,23,23,23,23,23,23,]),'TIMES':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[25,-30,-27,-28,-29,25,-30,25,25,-20,25,25,25,-23,-24,-25,-26,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-19,-61,-65,25,25,25,25,25,25,25,25,25,]),'DIVIDE':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[26,-30,-27,-28,-29,26,-30,26,26,-20,26,26,26,-23,-24,-25,-26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-19,-61,-65,26,26,26,26,26,26,26,26,26,]),'MODULO':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[27,-30,-27,-28,-29,27,-30,27,27,-20,27,27,27,-23,-24,-25,-26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-19,-61,-65,27,27,27,27,27,27,27,27,27,]),'POWER':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[28,-30,-27,-28,-29,28,-30,28,28,-20,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-19,-61,-65,28,28,28,28,28,28,28,28,28,]),'LOGICAL_AND':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[29,-30,-27,-28,-29,29,-30,29,29,-20,29,-21,-22,-23,-24,-25,-26,-31,29,-33,-34,-35,-36,-37,-38,29,29,29,29,29,29,29,-19,-61,-65,-33,-34,-35,-36,-37,-38,29,29,29,]),'LOGICAL_OR':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[30,-30,-27,-28,-29,30,-30,30,30,-20,30,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,30,30,30,30,30,30,30,-19,-61,-65,-33,-34,-35,-36,-37,-38,30,30,30,]),'EQUAL_EQUAL':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[31,-30,-27,-28,-29,74,-30,31,31,-20,31,-21,-22,-23,-24,-25,-26,31,31,-33,-34,-35,-36,-37,-38,31,31,31,31,31,31,31,-19,-61,-65,-33,-34,-35,-36,-37,-38,31,31,31,]),'NOT_EQUAL':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[32,-30,-27,-28,-29,75,-30,32,32,-20,32,-21,-22,-23,-24,-25,-26,32,32,-33,-34,-35,-36,-37,-38,32,32,32,32,32,32,32,-19,-61,-65,-33,-34,-35,-36,-37,-38,32,32,32,]),'GREATER_THAN':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[33,-30,-27,-28,-29,76,-30,33,33,-20,33,-21,-22,-23,-24,-25,-26,33,33,-33,-34,-35,-36,-37,-38,33,33,33,33,33,33,33,-19,-61,-65,-33,-34,-35,-36,-37,-38,33,33,33,]),'LESS_THAN':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[34,-30,-27,-28,-29,77,-30,34,34,-20,34,-21,-22,-23,-24,-25,-26,34,34,-33,-34,-35,-36,-37,-38,34,34,34,34,34,34,34,-19,-61,-65,-33,-34,-35,-36,-37,-38,34,34,34,]),'GREATER_EQUAL':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[35,-30,-27,-28,-29,78,-30,35,35,-20,35,-21,-22,-23,-24,-25,-26,35,35,-33,-34,-35,-36,-37,-38,35,35,35,35,35,35,35,-19,-61,-65,-33,-34,-35,-36,-37,-38,35,35,35,]),'LESS_EQUAL':([7,12,15,16,17,38,39,40,48,49,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,81,82,83,84,85,86,87,88,89,91,97,98,99,100,101,102,104,106,129,],[36,-30,-27,-28,-29,79,-30,36,36,-20,36,-21,-22,-23,-24,-25,-26,36,36,-33,-34,-35,-36,-37,-38,36,36,36,36,36,36,36,-19,-61,-65,-33,-34,-35,-36,-37,-38,36,36,36,]),'ASSIGN':([12,56,111,],[41,93,122,]),'PLUS_ASSIGN':([12,],[42,]),'MINUS_ASSIGN':([12,],[43,]),'TIMES_ASSIGN':([12,],[44,]),'DIVIDE_ASSIGN':([12,],[45,]),'OR_ASSIGN':([12,],[46,]),'AND_ASSIGN':([12,],[47,]),'RPAREN':([15,16,17,39,48,49,59,60,61,62,63,64,65,66,67,68,69,70,71,72,88,89,91,95,111,112,113,114,115,129,131,],[-27,-28,-29,-30,88,-20,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,-19,-61,-65,-52,-54,123,-56,-57,-58,-55,-59,]),'RBRACKET':([15,16,17,18,39,49,50,51,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,88,89,91,104,],[-27,-28,-29,-52,-30,-20,89,-63,-64,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,-19,-61,-65,-62,]),'COMMA':([15,16,17,18,39,49,50,51,52,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,88,89,91,104,105,106,111,113,115,129,131,],[-27,-28,-29,-52,-30,-20,90,-63,-64,92,-68,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,-19,-61,-65,-62,-69,-70,-54,124,-58,-55,-59,]),'RBRACE':([15,16,17,19,39,49,53,54,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,88,89,91,105,106,],[-27,-28,-29,-67,-30,-20,91,-66,-68,-21,-22,-23,-24,-25,-26,-31,-32,-33,-34,-35,-36,-37,-38,-19,-61,-65,-69,-70,]),'SYMBOL_COLON':([19,92,],[56,56,]),'GETS':([41,],[80,]),'DOT':([80,],[103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,37,57,118,121,123,127,],[2,73,94,126,128,130,132,]),'statement':([0,2,37,57,73,94,118,121,123,126,127,128,130,132,],[3,22,3,3,22,22,3,3,3,22,3,22,22,22,]),'print':([0,2,37,57,73,94,118,121,123,126,127,128,130,132,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input':([0,2,37,57,73,94,118,121,123,126,127,128,130,132,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,37,57,73,94,118,121,123,126,127,128,130,132,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,2,10,11,13,14,18,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,41,42,43,44,45,46,47,57,73,74,75,76,77,78,79,90,93,94,110,118,120,121,122,123,126,127,128,130,132,],[7,7,38,40,48,49,51,38,59,60,61,62,63,64,65,66,67,68,69,70,71,72,7,81,82,83,84,85,86,87,7,7,97,98,99,100,101,102,104,106,7,38,7,38,7,129,7,7,7,7,7,7,]),'if_statement':([0,2,37,57,73,94,118,121,123,126,127,128,130,132,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'function_def':([0,2,37,57,73,94,118,121,123,126,127,128,130,132,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'condition':([10,20,110,120,],[37,57,121,127,]),'elements':([18,],[50,]),'empty':([18,94,95,107,],[52,109,114,119,]),'hash_content':([19,],[53,]),'hash_pair_list':([19,],[54,]),'hash_pair':([19,92,],[55,105,]),'elsif_blocks_opt':([94,],[107,]),'elsif_blocks':([94,],[108,]),'param_list_opt':([95,],[112,]),'param_list':([95,],[113,]),'param':([95,124,],[115,131,]),'else_block_opt':([107,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','sintactico.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintactico.py',36),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintactico.py',37),
  ('statement -> print','statement',1,'p_statement','sintactico.py',49),
  ('statement -> input','statement',1,'p_statement','sintactico.py',50),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',51),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',52),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',53),
  ('statement -> function_def','statement',1,'p_statement','sintactico.py',54),
  ('print -> PUTS expression','print',2,'p_print','sintactico.py',58),
  ('input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER','input',5,'p_input','sintactico.py',62),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','sintactico.py',66),
  ('assignment -> IDENTIFIER PLUS_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',70),
  ('assignment -> IDENTIFIER MINUS_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',71),
  ('assignment -> IDENTIFIER TIMES_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',72),
  ('assignment -> IDENTIFIER DIVIDE_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',73),
  ('assignment -> IDENTIFIER OR_ASSIGN expression','assignment',3,'p_assignment_logical_op','sintactico.py',78),
  ('assignment -> IDENTIFIER AND_ASSIGN expression','assignment',3,'p_assignment_logical_op','sintactico.py',79),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','sintactico.py',84),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','sintactico.py',88),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sintactico.py',94),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sintactico.py',95),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sintactico.py',96),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sintactico.py',97),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','sintactico.py',98),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','sintactico.py',99),
  ('expression -> INTEGER','expression',1,'p_expression_number','sintactico.py',103),
  ('expression -> FLOAT','expression',1,'p_expression_number','sintactico.py',104),
  ('expression -> STRING','expression',1,'p_expression_string','sintactico.py',108),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','sintactico.py',112),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression_condition','sintactico.py',124),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression_condition','sintactico.py',125),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',126),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',127),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_condition','sintactico.py',128),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_condition','sintactico.py',129),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',130),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',131),
  ('condition -> expression EQUAL_EQUAL expression','condition',3,'p_condition_comparison','sintactico.py',140),
  ('condition -> expression NOT_EQUAL expression','condition',3,'p_condition_comparison','sintactico.py',141),
  ('condition -> expression GREATER_THAN expression','condition',3,'p_condition_comparison','sintactico.py',142),
  ('condition -> expression LESS_THAN expression','condition',3,'p_condition_comparison','sintactico.py',143),
  ('condition -> expression GREATER_EQUAL expression','condition',3,'p_condition_comparison','sintactico.py',144),
  ('condition -> expression LESS_EQUAL expression','condition',3,'p_condition_comparison','sintactico.py',145),
  ('if_statement -> IF condition statement_list elsif_blocks_opt else_block_opt END_KW','if_statement',6,'p_if_statement','sintactico.py',150),
  ('elsif_blocks_opt -> elsif_blocks','elsif_blocks_opt',1,'p_elsif_blocks_opt','sintactico.py',154),
  ('elsif_blocks_opt -> empty','elsif_blocks_opt',1,'p_elsif_blocks_opt','sintactico.py',155),
  ('elsif_blocks -> elsif_blocks ELSIF condition statement_list','elsif_blocks',4,'p_elsif_blocks','sintactico.py',159),
  ('elsif_blocks -> ELSIF condition statement_list','elsif_blocks',3,'p_elsif_blocks','sintactico.py',160),
  ('else_block_opt -> ELSE statement_list','else_block_opt',2,'p_else_block_opt','sintactico.py',167),
  ('else_block_opt -> empty','else_block_opt',1,'p_else_block_opt','sintactico.py',168),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',175),
  ('function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW','function_def',7,'p_function_def','sintactico.py',185),
  ('param -> IDENTIFIER','param',1,'p_param','sintactico.py',190),
  ('param -> IDENTIFIER ASSIGN expression','param',3,'p_param','sintactico.py',191),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','sintactico.py',198),
  ('param_list_opt -> empty','param_list_opt',1,'p_param_list_opt','sintactico.py',199),
  ('param_list -> param','param_list',1,'p_param_list','sintactico.py',203),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','sintactico.py',204),
  ('statement -> WHILE condition statement_list END_KW','statement',4,'p_while_loop','sintactico.py',215),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','sintactico.py',221),
  ('elements -> elements COMMA expression','elements',3,'p_elements','sintactico.py',225),
  ('elements -> expression','elements',1,'p_elements','sintactico.py',226),
  ('elements -> empty','elements',1,'p_elements','sintactico.py',227),
  ('expression -> LBRACE hash_content RBRACE','expression',3,'p_expression_hash','sintactico.py',240),
  ('hash_content -> hash_pair_list','hash_content',1,'p_hash_content','sintactico.py',244),
  ('hash_content -> <empty>','hash_content',0,'p_hash_content','sintactico.py',245),
  ('hash_pair_list -> hash_pair','hash_pair_list',1,'p_hash_pair_list','sintactico.py',252),
  ('hash_pair_list -> hash_pair_list COMMA hash_pair','hash_pair_list',3,'p_hash_pair_list','sintactico.py',253),
  ('hash_pair -> SYMBOL_COLON ASSIGN expression','hash_pair',3,'p_hash_pair','sintactico.py',260),
]
