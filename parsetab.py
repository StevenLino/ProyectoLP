
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftLOGICAL_ORleftLOGICAL_ANDleftEQUAL_EQUALNOT_EQUALGREATER_THANLESS_THANGREATER_EQUALLESS_EQUALleftPLUSMINUSleftTIMESDIVIDEMODULOrightPOWERrightUMINUSALIAS AMPERSAND AND AND_ASSIGN ASSIGN BEGIN_KW BREAK CASE CLASS CLASS_VAR COMMA CONSTANT DEF DEFINEDQ DIVIDE DIVIDE_ASSIGN DO DOT ELSE ELSIF END_KW ENSURE EQUAL_EQUAL FALSE FLOAT FOR GETS GLOBAL_VAR GREATER_EQUAL GREATER_THAN IDENTIFIER IF IN INSTANCE_VAR INTEGER LBRACE LBRACKET LESS_EQUAL LESS_THAN LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN MATCH_REGEX MINUS MINUS_ASSIGN MODULE MODULO NEXT NIL NOT NOT_EQUAL NOT_MATCH_REGEX OR OR_ASSIGN PLUS PLUS_ASSIGN POWER PUTS RANGE_EXCLUSIVE RANGE_INCLUSIVE RBRACE RBRACKET REDO RESCUE RETRY RETURN RPAREN SELF SEMICOLON STRING SUPER SYMBOL_COLON TERNARY_COLON TERNARY_Q THEN TIMES TIMES_ASSIGN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELDprogram : statement_liststatement_list : statement_list statement\n| statementstatement : print\n| input\n| assignment\n| expression\n| if_statement\n| function_def\n| while_statement\n| unless_statement \n| case_statementprint : PUTS expressioninput : IDENTIFIER ASSIGN GETS DOT IDENTIFIERassignment : IDENTIFIER ASSIGN expressionassignment : IDENTIFIER PLUS_ASSIGN expression\n| IDENTIFIER MINUS_ASSIGN expression\n| IDENTIFIER TIMES_ASSIGN expression\n| IDENTIFIER DIVIDE_ASSIGN expressionassignment : IDENTIFIER OR_ASSIGN expression\n| IDENTIFIER AND_ASSIGN expressionexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expression\n| expression MODULO expression\n| expression POWER expressionexpression : INTEGER\n| FLOATexpression : STRINGexpression : SYMBOL_COLONexpression : IDENTIFIERexpression : expression LOGICAL_AND expression\n| expression LOGICAL_OR expression\n| expression EQUAL_EQUAL expression\n| expression NOT_EQUAL expression\n| expression GREATER_THAN expression\n| expression LESS_THAN expression\n| expression GREATER_EQUAL expression\n| expression LESS_EQUAL expressionif_statement : IF expression statement_list elsif_blocks_opt else_block_opt END_KWunless_statement : UNLESS expression statement_list else_block_opt END_KWcase_statement : CASE expression when_blocks else_block_opt END_KWwhen_blocks : when_blocks when_block\n| when_blockwhen_block : WHEN expression statement_listelsif_blocks_opt : elsif_blocks\n| emptyelsif_blocks : ELSIF expression statement_list elsif_blocks\n| ELSIF expression statement_listelse_block_opt : ELSE statement_list\n| emptyempty :function_def : DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KWfunction_def : DEF IDENTIFIER param_list_opt statement_list END_KWparam : IDENTIFIER\n| IDENTIFIER ASSIGN expressionparam_list_opt : param_list\n| emptyparam_list : param\n| param_list COMMA paramwhile_statement : WHILE expression statement_list END_KWexpression : LBRACKET elements RBRACKETelements : elements COMMA expression\n| expression\n| emptyexpression : LBRACE hash_content RBRACEhash_content : hash_pair_list\n| hash_pair_list : hash_pair\n| hash_pair_list COMMA hash_pairhash_pair : SYMBOL_COLON ASSIGN expression'
    
_lr_action_items = {'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,96,98,99,100,101,102,103,115,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,13,-55,13,13,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,13,-58,13,-60,-61,-62,13,13,-23,13,-64,13,13,-14,13,-59,13,-57,-63,-44,13,-45,13,-43,13,13,-56,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,106,107,114,115,116,118,119,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,44,-34,44,44,-30,-31,-32,-33,44,44,62,44,44,44,-2,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-13,-34,44,44,44,44,44,44,44,-23,14,96,14,14,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,44,-69,44,14,44,-58,96,14,-60,-61,-62,14,14,44,127,44,-23,44,14,96,-64,14,14,-14,14,-59,14,-57,-63,-44,14,-45,14,-43,14,14,-56,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,98,99,100,101,102,103,106,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,15,-34,15,15,-30,-31,-32,-33,15,15,15,15,15,-2,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-13,-34,15,15,15,15,15,15,15,-23,15,97,15,15,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,15,-69,15,15,15,-58,15,-60,-61,-62,15,15,15,15,-23,15,15,-64,15,15,-14,15,-59,15,-57,-63,-44,15,-45,15,-43,15,15,-56,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,98,99,100,101,102,103,106,108,110,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[16,16,-3,-4,-5,-6,30,-8,-9,-10,-11,-12,16,-34,16,16,-30,-31,-32,-33,16,16,16,16,16,-2,16,16,16,16,16,16,16,16,16,16,16,16,16,16,30,-34,16,16,16,16,16,16,16,30,-23,30,95,-55,95,95,30,-24,-25,-26,-27,-28,-29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-22,-65,16,-69,16,16,16,-58,16,-60,-61,-62,16,16,16,30,30,16,-23,16,16,-64,16,95,-14,95,30,16,-57,-63,-44,16,-45,16,-43,16,16,-56,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,98,99,100,101,102,103,106,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,17,-34,17,17,-30,-31,-32,-33,17,17,17,17,17,-2,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-13,-34,17,17,17,17,17,17,17,-23,17,-55,17,17,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,17,-69,17,17,17,-58,17,-60,-61,-62,17,17,17,17,-23,17,17,-64,17,17,-14,17,-59,17,-57,-63,-44,17,-45,17,-43,17,17,-56,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,98,99,100,101,102,103,106,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,18,-34,18,18,-30,-31,-32,-33,18,18,18,18,18,-2,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-13,-34,18,18,18,18,18,18,18,-23,18,-55,18,18,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,18,-69,18,18,18,-58,18,-60,-61,-62,18,18,18,18,-23,18,18,-64,18,18,-14,18,-59,18,-57,-63,-44,18,-45,18,-43,18,18,-56,]),'STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,98,99,100,101,102,103,106,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,19,-34,19,19,-30,-31,-32,-33,19,19,19,19,19,-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-13,-34,19,19,19,19,19,19,19,-23,19,-55,19,19,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,19,-69,19,19,19,-58,19,-60,-61,-62,19,19,19,19,-23,19,19,-64,19,19,-14,19,-59,19,-57,-63,-44,19,-45,19,-43,19,19,-56,]),'SYMBOL_COLON':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,106,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,20,-34,20,20,-30,-31,-32,-33,20,60,20,20,20,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-13,-34,20,20,20,20,20,20,20,-23,20,-55,20,20,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,20,-69,60,20,20,20,-58,20,-60,-61,-62,20,20,20,20,-23,20,20,-64,20,20,-14,20,-59,20,-57,-63,-44,20,-45,20,-43,20,20,-56,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,98,99,100,101,102,103,106,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,21,-34,21,21,-30,-31,-32,-33,21,21,21,21,21,-2,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-13,-34,21,21,21,21,21,21,21,-23,21,-55,21,21,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,21,-69,21,21,21,-58,21,-60,-61,-62,21,21,21,21,-23,21,21,-64,21,21,-14,21,-59,21,-57,-63,-44,21,-45,21,-43,21,21,-56,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,98,99,100,101,102,103,106,114,115,116,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,22,-34,22,22,-30,-31,-32,-33,22,22,22,22,22,-2,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-13,-34,22,22,22,22,22,22,22,-23,22,-55,22,22,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,22,-69,22,22,22,-58,22,-60,-61,-62,22,22,22,22,-23,22,22,-64,22,22,-14,22,-59,22,-57,-63,-44,22,-45,22,-43,22,22,-56,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,96,98,99,100,101,102,103,115,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,23,-55,23,23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,23,-58,23,-60,-61,-62,23,23,-23,23,-64,23,23,-14,23,-59,23,-57,-63,-44,23,-45,23,-43,23,23,-56,]),'DEF':([0,2,3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,96,98,99,100,101,102,103,115,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,24,-55,24,24,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,24,-58,24,-60,-61,-62,24,24,-23,24,-64,24,24,-14,24,-59,24,-57,-63,-44,24,-45,24,-43,24,24,-56,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,96,98,99,100,101,102,103,115,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,25,-55,25,25,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,25,-58,25,-60,-61,-62,25,25,-23,25,-64,25,25,-14,25,-59,25,-57,-63,-44,25,-45,25,-43,25,25,-56,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,96,98,99,100,101,102,103,115,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,26,-55,26,26,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,26,-58,26,-60,-61,-62,26,26,-23,26,-64,26,26,-14,26,-59,26,-57,-63,-44,26,-45,26,-43,26,26,-56,]),'CASE':([0,2,3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,96,98,99,100,101,102,103,115,118,120,122,126,127,129,130,131,132,133,134,135,136,137,138,139,140,142,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,27,-55,27,27,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,27,-58,27,-60,-61,-62,27,27,-23,27,-64,27,27,-14,27,-59,27,-57,-63,-44,27,-45,27,-43,27,27,-56,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,120,127,132,134,136,138,142,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,-64,-14,-57,-44,-45,-43,-56,]),'ELSIF':([3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,115,120,127,132,134,136,138,139,142,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,114,-23,-64,-14,-57,-44,-45,-43,114,-56,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,103,104,105,111,112,113,115,120,125,127,132,134,136,137,138,139,141,142,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,-55,122,122,-47,122,-49,-50,-23,-64,-46,-14,-57,-44,-45,-48,-43,-52,-51,-56,]),'END_KW':([3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,94,102,103,104,105,111,112,113,115,118,120,121,123,124,125,127,128,132,134,135,136,137,138,139,140,141,142,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,-55,120,-55,-55,-47,-55,-49,-50,-23,132,-64,134,-54,136,-46,-14,138,-57,-44,-53,-45,-48,-43,-52,142,-51,-56,]),'WHEN':([3,4,5,6,7,8,9,10,11,12,14,17,18,19,20,28,43,44,53,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,104,105,115,120,125,127,132,134,136,137,138,142,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-34,-30,-31,-32,-33,-2,-13,-34,-23,106,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-15,-16,-17,-18,-19,-20,-21,-22,-65,-69,106,-47,-23,-64,-46,-14,-57,-44,-45,-48,-43,-56,]),'PLUS':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[29,-34,-30,-31,-32,-33,29,-34,29,-23,29,29,29,29,29,-24,-25,-26,-27,-28,-29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-22,-65,-69,29,29,-23,29,29,29,]),'TIMES':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[31,-34,-30,-31,-32,-33,31,-34,31,-23,31,31,31,31,31,31,31,-26,-27,-28,-29,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-22,-65,-69,31,31,-23,31,31,31,]),'DIVIDE':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[32,-34,-30,-31,-32,-33,32,-34,32,-23,32,32,32,32,32,32,32,-26,-27,-28,-29,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-22,-65,-69,32,32,-23,32,32,32,]),'MODULO':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[33,-34,-30,-31,-32,-33,33,-34,33,-23,33,33,33,33,33,33,33,-26,-27,-28,-29,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-22,-65,-69,33,33,-23,33,33,33,]),'POWER':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[34,-34,-30,-31,-32,-33,34,-34,34,-23,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-22,-65,-69,34,34,-23,34,34,34,]),'LOGICAL_AND':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[35,-34,-30,-31,-32,-33,35,-34,35,-23,35,35,35,35,35,-24,-25,-26,-27,-28,-29,-35,35,-37,-38,-39,-40,-41,-42,35,35,35,35,35,35,35,-22,-65,-69,35,35,-23,35,35,35,]),'LOGICAL_OR':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[36,-34,-30,-31,-32,-33,36,-34,36,-23,36,36,36,36,36,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,36,36,36,36,36,36,36,-22,-65,-69,36,36,-23,36,36,36,]),'EQUAL_EQUAL':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[37,-34,-30,-31,-32,-33,37,-34,37,-23,37,37,37,37,37,-24,-25,-26,-27,-28,-29,37,37,-37,-38,-39,-40,-41,-42,37,37,37,37,37,37,37,-22,-65,-69,37,37,-23,37,37,37,]),'NOT_EQUAL':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[38,-34,-30,-31,-32,-33,38,-34,38,-23,38,38,38,38,38,-24,-25,-26,-27,-28,-29,38,38,-37,-38,-39,-40,-41,-42,38,38,38,38,38,38,38,-22,-65,-69,38,38,-23,38,38,38,]),'GREATER_THAN':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[39,-34,-30,-31,-32,-33,39,-34,39,-23,39,39,39,39,39,-24,-25,-26,-27,-28,-29,39,39,-37,-38,-39,-40,-41,-42,39,39,39,39,39,39,39,-22,-65,-69,39,39,-23,39,39,39,]),'LESS_THAN':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[40,-34,-30,-31,-32,-33,40,-34,40,-23,40,40,40,40,40,-24,-25,-26,-27,-28,-29,40,40,-37,-38,-39,-40,-41,-42,40,40,40,40,40,40,40,-22,-65,-69,40,40,-23,40,40,40,]),'GREATER_EQUAL':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[41,-34,-30,-31,-32,-33,41,-34,41,-23,41,41,41,41,41,-24,-25,-26,-27,-28,-29,41,41,-37,-38,-39,-40,-41,-42,41,41,41,41,41,41,41,-22,-65,-69,41,41,-23,41,41,41,]),'LESS_EQUAL':([7,14,17,18,19,20,43,44,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,91,108,110,115,126,129,130,],[42,-34,-30,-31,-32,-33,42,-34,42,-23,42,42,42,42,42,-24,-25,-26,-27,-28,-29,42,42,-37,-38,-39,-40,-41,-42,42,42,42,42,42,42,42,-22,-65,-69,42,42,-23,42,42,42,]),'ASSIGN':([14,60,96,],[45,93,116,]),'PLUS_ASSIGN':([14,],[46,]),'MINUS_ASSIGN':([14,],[47,]),'TIMES_ASSIGN':([14,],[48,]),'DIVIDE_ASSIGN':([14,],[49,]),'OR_ASSIGN':([14,],[50,]),'AND_ASSIGN':([14,],[51,]),'RPAREN':([17,18,19,20,44,52,53,66,67,68,69,70,71,72,73,74,75,76,77,78,79,88,89,91,96,97,99,100,101,117,130,133,],[-30,-31,-32,-33,-34,88,-23,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-65,-69,-58,-55,-60,-61,-62,131,-59,-63,]),'RBRACKET':([17,18,19,20,21,44,53,54,55,56,66,67,68,69,70,71,72,73,74,75,76,77,78,79,88,89,91,108,],[-30,-31,-32,-33,-55,-34,-23,89,-67,-68,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-65,-69,-66,]),'COMMA':([17,18,19,20,21,44,53,54,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,88,89,91,96,99,101,108,109,110,130,133,],[-30,-31,-32,-33,-55,-34,-23,90,-67,-68,92,-72,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-65,-69,-58,119,-62,-66,-73,-74,-59,-63,]),'RBRACE':([17,18,19,20,22,44,53,57,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,88,89,91,109,110,],[-30,-31,-32,-33,-71,-34,-23,91,-70,-72,-24,-25,-26,-27,-28,-29,-35,-36,-37,-38,-39,-40,-41,-42,-22,-65,-69,-73,-74,]),'GETS':([45,],[80,]),'DOT':([80,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,61,63,64,98,122,126,129,131,],[2,94,102,103,118,135,137,139,140,]),'statement':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[3,28,3,3,3,28,3,28,28,28,3,3,3,3,28,28,28,28,]),'print':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'input':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,2,13,15,16,21,23,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,51,61,63,64,90,93,94,95,98,102,103,106,114,116,118,122,126,129,131,135,137,139,140,],[7,7,43,52,53,55,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,7,7,7,108,110,7,115,7,7,7,126,129,130,7,7,7,7,7,7,7,7,7,]),'if_statement':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'function_def':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'while_statement':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'unless_statement':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'case_statement':([0,2,61,63,64,94,98,102,103,118,122,126,129,131,135,137,139,140,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'elements':([21,],[54,]),'empty':([21,62,94,97,103,104,111,],[56,100,113,100,123,123,123,]),'hash_content':([22,],[57,]),'hash_pair_list':([22,],[58,]),'hash_pair':([22,92,],[59,109,]),'param_list_opt':([62,97,],[98,117,]),'param_list':([62,97,],[99,99,]),'param':([62,97,119,],[101,101,133,]),'when_blocks':([65,],[104,]),'when_block':([65,104,],[105,125,]),'elsif_blocks_opt':([94,],[111,]),'elsif_blocks':([94,139,],[112,141,]),'else_block_opt':([103,104,111,],[121,124,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','sintactico.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintactico.py',36),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintactico.py',37),
  ('statement -> print','statement',1,'p_statement','sintactico.py',49),
  ('statement -> input','statement',1,'p_statement','sintactico.py',50),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',51),
  ('statement -> expression','statement',1,'p_statement','sintactico.py',52),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',53),
  ('statement -> function_def','statement',1,'p_statement','sintactico.py',54),
  ('statement -> while_statement','statement',1,'p_statement','sintactico.py',55),
  ('statement -> unless_statement','statement',1,'p_statement','sintactico.py',56),
  ('statement -> case_statement','statement',1,'p_statement','sintactico.py',57),
  ('print -> PUTS expression','print',2,'p_print','sintactico.py',61),
  ('input -> IDENTIFIER ASSIGN GETS DOT IDENTIFIER','input',5,'p_input','sintactico.py',65),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','sintactico.py',69),
  ('assignment -> IDENTIFIER PLUS_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',73),
  ('assignment -> IDENTIFIER MINUS_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',74),
  ('assignment -> IDENTIFIER TIMES_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',75),
  ('assignment -> IDENTIFIER DIVIDE_ASSIGN expression','assignment',3,'p_assignment_composed','sintactico.py',76),
  ('assignment -> IDENTIFIER OR_ASSIGN expression','assignment',3,'p_assignment_logical_op','sintactico.py',81),
  ('assignment -> IDENTIFIER AND_ASSIGN expression','assignment',3,'p_assignment_logical_op','sintactico.py',82),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','sintactico.py',87),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','sintactico.py',91),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sintactico.py',97),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sintactico.py',98),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sintactico.py',99),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sintactico.py',100),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','sintactico.py',101),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','sintactico.py',102),
  ('expression -> INTEGER','expression',1,'p_expression_number','sintactico.py',106),
  ('expression -> FLOAT','expression',1,'p_expression_number','sintactico.py',107),
  ('expression -> STRING','expression',1,'p_expression_string','sintactico.py',111),
  ('expression -> SYMBOL_COLON','expression',1,'p_expression_symbol','sintactico.py',117),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','sintactico.py',122),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression_condition','sintactico.py',132),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression_condition','sintactico.py',133),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',134),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',135),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression_condition','sintactico.py',136),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression_condition','sintactico.py',137),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',138),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_condition','sintactico.py',139),
  ('if_statement -> IF expression statement_list elsif_blocks_opt else_block_opt END_KW','if_statement',6,'p_if_statement','sintactico.py',144),
  ('unless_statement -> UNLESS expression statement_list else_block_opt END_KW','unless_statement',5,'p_unless_statement','sintactico.py',150),
  ('case_statement -> CASE expression when_blocks else_block_opt END_KW','case_statement',5,'p_case_statement','sintactico.py',154),
  ('when_blocks -> when_blocks when_block','when_blocks',2,'p_when_blocks','sintactico.py',158),
  ('when_blocks -> when_block','when_blocks',1,'p_when_blocks','sintactico.py',159),
  ('when_block -> WHEN expression statement_list','when_block',3,'p_when_block','sintactico.py',166),
  ('elsif_blocks_opt -> elsif_blocks','elsif_blocks_opt',1,'p_elsif_blocks_opt','sintactico.py',171),
  ('elsif_blocks_opt -> empty','elsif_blocks_opt',1,'p_elsif_blocks_opt','sintactico.py',172),
  ('elsif_blocks -> ELSIF expression statement_list elsif_blocks','elsif_blocks',4,'p_elsif_blocks','sintactico.py',176),
  ('elsif_blocks -> ELSIF expression statement_list','elsif_blocks',3,'p_elsif_blocks','sintactico.py',177),
  ('else_block_opt -> ELSE statement_list','else_block_opt',2,'p_else_block_opt','sintactico.py',184),
  ('else_block_opt -> empty','else_block_opt',1,'p_else_block_opt','sintactico.py',185),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',192),
  ('function_def -> DEF IDENTIFIER LPAREN param_list_opt RPAREN statement_list END_KW','function_def',7,'p_function_def','sintactico.py',202),
  ('function_def -> DEF IDENTIFIER param_list_opt statement_list END_KW','function_def',5,'p_function_def_no_parens','sintactico.py',208),
  ('param -> IDENTIFIER','param',1,'p_param','sintactico.py',214),
  ('param -> IDENTIFIER ASSIGN expression','param',3,'p_param','sintactico.py',215),
  ('param_list_opt -> param_list','param_list_opt',1,'p_param_list_opt','sintactico.py',222),
  ('param_list_opt -> empty','param_list_opt',1,'p_param_list_opt','sintactico.py',223),
  ('param_list -> param','param_list',1,'p_param_list','sintactico.py',227),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','sintactico.py',228),
  ('while_statement -> WHILE expression statement_list END_KW','while_statement',4,'p_while_statement','sintactico.py',239),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_array','sintactico.py',245),
  ('elements -> elements COMMA expression','elements',3,'p_elements','sintactico.py',249),
  ('elements -> expression','elements',1,'p_elements','sintactico.py',250),
  ('elements -> empty','elements',1,'p_elements','sintactico.py',251),
  ('expression -> LBRACE hash_content RBRACE','expression',3,'p_expression_hash','sintactico.py',264),
  ('hash_content -> hash_pair_list','hash_content',1,'p_hash_content','sintactico.py',268),
  ('hash_content -> <empty>','hash_content',0,'p_hash_content','sintactico.py',269),
  ('hash_pair_list -> hash_pair','hash_pair_list',1,'p_hash_pair_list','sintactico.py',276),
  ('hash_pair_list -> hash_pair_list COMMA hash_pair','hash_pair_list',3,'p_hash_pair_list','sintactico.py',277),
  ('hash_pair -> SYMBOL_COLON ASSIGN expression','hash_pair',3,'p_hash_pair','sintactico.py',284),
]
